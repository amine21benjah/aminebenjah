-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Hôte : 127.0.0.1
-- Généré le : ven. 31 mai 2024 à 12:14
-- Version du serveur : 10.4.27-MariaDB
-- Version de PHP : 8.2.0

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de données : `mydb2`
--

DELIMITER $$
--
-- Procédures
--
CREATE DEFINER=`root`@`localhost` PROCEDURE `calculer_note` ()   BEGIN
DECLARE sum_note,som_op,som_rep FLOAT ;
DECLARE v_fine INT DEFAULT 0;
DECLARE Vid_user VARCHAR(50);
DECLARE id_exame INT ;
DECLARE cur_idexam_user CURSOR FOR SELECT id_user,id_exam FROM user_exam;
DECLARE CONTINUE handler FOR NOT FOUND SET v_fine=1;
OPEN cur_idexam_user;

x:loop
SET sum_note=0;
	fetch cur_idexam_user INTO Vid_user,id_exame;
	if v_fine=1 then
		leave x;
	END if;
	SELECT SUM(note) INTO som_op FROM user_rep up,questions q
	WHERE up.id_Q=q.id AND iduser=Vid_user AND q.examid=id_exame;
	SELECT SUM(is_corect) INTO som_rep FROM user_option 
	WHERE id_user=Vid_user AND id_exam=id_exame;
	
	if som_op >= 0 then
		SET sum_note=som_op;
	END if;
	if som_rep >= 0 then
		SET sum_note=sum_note+som_rep;
	END if;
	UPDATE `user_exam` SET `score`=sum_note WHERE `id_user`=Vid_user AND `id_exam`=id_exame;
END loop x;
							
close cur_idexam_user;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `pro_1` ()   BEGIN
DECLARE vf INT DEFAULT 0;
DECLARE idexam INT;
DECLARE cur_exames CURSOR FOR SELECT e.idexames FROM exames e;
DECLARE CONTINUE handler FOR NOT FOUND SET vf=1;
OPEN cur_exames;
x:loop
	fetch cur_exames INTO idexam;
	if vf=1 then
		leave x;
	END if;
	CALL valide_option(idexam);
	END loop x;
close cur_exames;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `valide_option` (IN `pidexma` INT)   BEGIN
				DECLARE V_iduser VARCHAR(20);
    DECLARE v_fine INT DEFAULT 0;
    DECLARE V_iduo, V_ido, V_corecte INT;
    DECLARE V_idq, V_nbqv INT;
    DECLARE v_noteQ float;
    DECLARE V_nbop_user INT;

    
    DECLARE CUR_user_op CURSOR FOR 
        SELECT uo.id, uo.id_O 
        FROM user_option uo 
        WHERE uo.id_exam = pidexma;
    
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_fine = 1;
    
    OPEN CUR_user_op;
    
    x:LOOP
        FETCH CUR_user_op INTO V_iduo, V_ido;
        IF v_fine = 1 THEN
            LEAVE x;
        END IF;
        
        SELECT o.is_corect INTO V_corecte FROM user_option uo,`option` o
								WHERE uo.id_O=o.id and uo.id= V_iduo;
           
        SELECT q.nbQV, q.id ,uo.id_user,q.noteQ INTO V_nbqv, V_idq ,V_iduser,v_noteQ
        FROM questions q, `option` o, user_option uo
        WHERE q.id = o.Qid AND o.id = uo.id_O AND uo.id = V_iduo;
        
        if V_corecte =1 then
        	UPDATE user_option SET is_corect = v_noteQ/V_nbqv WHERE id = V_iduo;
        ELSE 
        	UPDATE user_option SET is_corect = 0 WHERE id = V_iduo;
        END if;
        
        SET V_nbop_user = (SELECT COUNT(*) 
        FROM questions q, `option` o, user_option uo
        WHERE q.id = o.Qid AND o.id = uo.id_O AND q.id = V_idq  AND uo.id_user=V_iduser);
        
        IF V_nbop_user > V_nbqv THEN
            UPDATE user_option SET is_corect = 0 WHERE id = V_iduo;
        END IF;
        
    END LOOP x;
    
    CLOSE CUR_user_op;
    
END$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Structure de la table `admin`
--

CREATE TABLE `admin` (
  `email` varchar(40) DEFAULT NULL,
  `pass` varchar(40) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `admin`
--

INSERT INTO `admin` (`email`, `pass`) VALUES
('admin@gmail.com', '123456');

-- --------------------------------------------------------

--
-- Structure de la table `exames`
--

CREATE TABLE `exames` (
  `idexames` int(11) NOT NULL,
  `title` varchar(45) NOT NULL,
  `description` varchar(100) DEFAULT NULL,
  `orderq` int(11) NOT NULL,
  `datedeb` datetime DEFAULT NULL,
  `datefin` datetime DEFAULT NULL,
  `idform` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `exames`
--

INSERT INTO `exames` (`idexames`, `title`, `description`, `orderq`, `datedeb`, `datefin`, `idform`) VALUES
(72, 'CC1 POO', 'CC1 POO DD102', 0, '2024-01-12 15:48:00', '2024-01-16 15:48:00', 'lc231933'),
(73, 'cc2 algo rattrapage ', 'CC3 les bases de l&#039;algorithmique dd101 Rat', 0, '2024-02-20 07:00:00', '2024-02-21 07:00:00', 'lc231933'),
(74, 'CC1 poo', 'CC1 POO DD101', 0, '2024-01-13 07:00:00', '2024-01-15 07:00:00', 'lc231933'),
(75, 'CC1 POO Ratt', 'CC1 POO Rattrapage', 0, '2024-01-19 08:25:00', '2024-01-20 20:26:00', 'lc231933'),
(76, 'CC2 POO DD102', 'CC2 POO', 0, '2024-03-06 09:59:00', '2024-03-08 14:59:00', 'lc231933'),
(77, 'CC2 POO DD102 Ratt', 'CC2 POO DD102 Rattrapage', 0, '2024-03-07 11:35:00', '2024-03-08 16:35:00', 'lc231933'),
(78, 'CC2 manipuler les bases de données', 'CC2 manipuler les bases de données', 0, '2024-04-04 11:38:00', '2024-04-05 13:38:00', 'lc231933'),
(79, 'CC2 manipuler les bases de données	dd101', 'CC2 manipuler les bases de données	', 0, '2024-04-17 08:44:00', '2024-04-18 15:44:00', 'lc231933'),
(80, 'CC1 laravel', 'CC1 Développer en Back-End', 0, '2024-04-27 08:40:00', '2024-05-04 11:35:00', 'lc231933'),
(81, 'CC3 manipuler les bases de données dd102', 'CC3 manipuler les bases de données DD102', 0, '2024-05-10 09:57:00', '2024-05-13 15:57:00', 'lc231933'),
(82, 'CC3 manipuler les bases de données dd101 et h', 'CC3 manipuler les bases de données dd101', 0, '2024-05-23 10:00:00', '2024-05-23 17:00:00', 'lc231933'),
(84, 'CC3 Back-End ', 'CC3 Back-End ', 0, '2024-05-31 07:53:00', '2024-05-31 14:01:00', 'lc231933');

-- --------------------------------------------------------

--
-- Structure de la table `groupe`
--

CREATE TABLE `groupe` (
  `id` int(11) NOT NULL,
  `nom` varchar(45) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `groupe`
--

INSERT INTO `groupe` (`id`, `nom`) VALUES
(53, 'dd group102'),
(52, 'dd grour101'),
(1, 'DD101'),
(2, 'DD102'),
(7, 'DEVOWFS201'),
(3, 'GE101'),
(4, 'GE102'),
(5, 'GE103'),
(6, 'GE104');

-- --------------------------------------------------------

--
-- Structure de la table `group_exame`
--

CREATE TABLE `group_exame` (
  `idg` int(11) NOT NULL,
  `idexam` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `group_exame`
--

INSERT INTO `group_exame` (`idg`, `idexam`) VALUES
(1, 72),
(1, 73),
(1, 74),
(1, 75),
(1, 76),
(1, 79),
(1, 82),
(2, 72),
(2, 73),
(2, 75),
(2, 76),
(2, 77),
(2, 78),
(2, 81),
(2, 82),
(7, 80),
(7, 84);

-- --------------------------------------------------------

--
-- Structure de la table `group_form`
--

CREATE TABLE `group_form` (
  `idg` int(11) NOT NULL,
  `idform` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `group_form`
--

INSERT INTO `group_form` (`idg`, `idform`) VALUES
(1, 'lc231933'),
(2, 'lc231933'),
(7, 'lc231933'),
(52, 'lc231933'),
(53, 'lc231933');

-- --------------------------------------------------------

--
-- Structure de la table `h_user_exam`
--

CREATE TABLE `h_user_exam` (
  `id` int(11) NOT NULL,
  `id_user` varchar(50) NOT NULL DEFAULT '',
  `id_exam` int(11) NOT NULL,
  `datetime` datetime NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Structure de la table `option`
--

CREATE TABLE `option` (
  `id` int(11) NOT NULL,
  `Qid` int(11) DEFAULT NULL,
  `O_text` varchar(255) DEFAULT NULL,
  `is_corect` varchar(50) DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `option`
--

INSERT INTO `option` (`id`, `Qid`, `O_text`, `is_corect`) VALUES
(322, 326, 'La capacité d\'une classe à hériter des propriétés et méthodes d\'une autre classe', '1'),
(323, 326, 'La capacité d\'une classe à créer des objets', ''),
(324, 326, 'La capacité d\'une fonction à être appelée par une autre fonction', ''),
(325, 326, 'autre réponse', ''),
(326, 327, 'La capacité de cacher les détails d\'implémentation d\'une classe ou d\'un objet', '1'),
(327, 327, 'La capacité de créer des objets à partir d\'une classe', ''),
(328, 327, 'La capacité d\'une classe à hériter des propriétés et méthodes d\'une autre classe', ''),
(329, 327, 'autre réponse', ''),
(330, 328, 'La capacité d\'une fonction ou d\'une méthode à s\'appliquer à des objets de différents types', '1'),
(331, 328, 'La capacité d\'une classe à hériter des propriétés et méthodes d\'une autre classe', ''),
(332, 328, 'La capacité de cacher les détails d\'implémentation d\'une classe ou d\'un objet', ''),
(333, 328, 'autre réponse', ''),
(334, 344, 'Une méthode qui permet de définir la valeur d\'une propriété privée', '1'),
(335, 344, 'Une méthode qui permet de récupérer la valeur d\'une propriété privée', ''),
(336, 344, 'Une méthode qui permet de définir la valeur d\'une propriété publique', ''),
(337, 344, 'autre réponse', ''),
(338, 345, 'En utilisant des variables et des fonctions privées', '1'),
(339, 345, 'En utilisant des variables et des fonctions publiques', ''),
(340, 345, 'En utilisant des variables et des fonctions protégées', ''),
(341, 345, 'autre réponse', ''),
(342, 346, 'La capacité d\'une classe à redéfinir le comportement des opérateurs standard', '1'),
(343, 346, 'La capacité d\'une classe à avoir plusieurs méthodes avec le même nom mais des signatures différentes', ''),
(344, 346, 'La capacité d\'une méthode à être appelée avec des arguments de différents types', ''),
(345, 346, 'autre réponse', ''),
(346, 397, 'Self Join', '1'),
(347, 397, 'Join', ''),
(348, 397, 'Outer join', ''),
(349, 397, 'Aucune de ces réponses', ''),
(350, 398, 'TRUNCATE', '1'),
(351, 398, 'DELETE', ''),
(352, 398, 'REMOVE', ''),
(353, 398, 'DROP', ''),
(354, 399, 'NOT NULL', '1'),
(355, 399, 'NULL', ''),
(356, 399, 'Les deux NULL et NOT NULL', ''),
(357, 399, 'Aucune de ces réponses', ''),
(358, 400, 'View', '1'),
(359, 400, 'Table', ''),
(360, 400, 'Index', ''),
(361, 400, 'Triggers', '');

-- --------------------------------------------------------

--
-- Structure de la table `questions`
--

CREATE TABLE `questions` (
  `id` int(11) NOT NULL,
  `examid` int(11) DEFAULT NULL,
  `Q_text` text DEFAULT NULL,
  `nbQV` int(11) DEFAULT NULL,
  `typeQ` varchar(50) DEFAULT NULL,
  `noteQ` float DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `file` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `questions`
--

INSERT INTO `questions` (`id`, `examid`, `Q_text`, `nbQV`, `typeQ`, `noteQ`, `img`, `file`) VALUES
(326, 72, 'Qu\'est-ce que l\'héritage en Python ?', 1, 'QCM', 1, NULL, NULL),
(327, 72, 'Qu\'est-ce que l\'encapsulation en Python ?', 1, 'QCM', 1, NULL, NULL),
(328, 72, 'Qu\'est-ce que le polymorphisme en Python ?', 1, 'QCM', 1, NULL, NULL),
(329, 72, 'Développement d’une application orientée objet pour la gestion d’un magasin\r\nOn souhaite informatiser la gestion des ventes au sein d’un magasin. On considère alors qu’un article est caractérisé par son numéro de série, son prix hors taxe, sa quantité en stock, et la quantité minimale\r\n1)	a)  Ecrire la classe « Article ». \r\nAjouter à cette classe un constructeur permettant d’instancier des objets de la classe « Article » dont on précisera le numéro de série, le prix hors taxe, la quantité en stock, la quantité minimale et un constructeur sans paramètres. (1 pt)\r\n', NULL, 'THE', 1, NULL, NULL),
(330, 72, 'b)	Réécrire la méthode __str__() pour afficher les caractéristiques d’un article. (1 pts)', NULL, 'THE', 1, NULL, NULL),
(331, 72, 'c)	Ajouter à la classe Article  les méthodes suivantes: \r\n-	S’approvisionner (qte) : qui permet d’approvisionner le stock par une quantité donnée. (2pts)\r\n-	Achat (qte) permet de traiter un achat d’un article par un client. Une opération d&#039;achat aura pour effet de déduire la quantité achetée du stock. Si la quantité qui reste est inférieure à la quantité minimale on avise par un message. (2 pts)\r\n', NULL, 'THE', 4, NULL, NULL),
(332, 72, 'Un habit est un article qui a une taille et une couleur :\r\na)	Ecrire la classe « Habit » héritant de la classe « Article ». (1 pts)\r\nb)	Récrire le constructeur de cette classe afin d’initialiser, en plus, la couleur et la taille avec des valeurs passées en paramètre. . (1 pts)\r\n', NULL, 'THE', 2, NULL, NULL),
(333, 72, 'c)	Réécrire la méthode __str__() pour afficher les caractéristiques de l’habit. . (1 pts)', NULL, 'THE', 1, NULL, NULL),
(334, 72, '3)	 Un électroménager est un article qui a un poids et une durée de garantie.\r\na)	Ecrire la classe « Electroménager » héritant de la classe « Article ». . (1 pts)\r\nb)	Récrire le constructeur de cette classe pour définir, en plus, le poids et la durée de garantie en mois. (1 pts)\r\n', NULL, 'THE', 1, NULL, NULL),
(335, 72, 'c)	Ajouter la méthode datefinGarantie () : retourne la date de fin de la garantie à partir de la date actuelle. (2 pts)', NULL, 'THE', 2, NULL, NULL),
(336, 72, 'd)	Réécrire la méthode __str__() donnant les caractéristiques d’un électroménager et la date de fin de sa garantie à partir de la date courante. (2 pts)', NULL, 'THE', 2, NULL, NULL),
(337, 72, '4)	Classe Program : Tester ces trois classes dans un programme principal. \r\na)	Créer un article de type habit (0,5 pt)\r\nb)	Approvisionner le stock de cet article et l’afficher. (0,5 pt)\r\nc)	Créer un article de type électroménager (0,5 pt)\r\nd)	Effectuer un achat de cet article. (0,5 pt)\r\ne)	Afficher la date fin de garantie de cet article. (0,5 pt)\r\nf)	Afficher cet article. (0,5 pt)\r\n', NULL, 'THE', 3, NULL, NULL),
(338, 73, '.', NULL, 'THE', 4, 'public/images/_130124085737_071123120902q5.png', NULL),
(339, 73, '.', NULL, 'THE', 4, 'public/images/_130124085749_071123120931q6.png', NULL),
(340, 73, '.', NULL, 'THE', 4, 'public/images/_130124085802_071123121253q9.png', NULL),
(341, 73, '.', NULL, 'THE', 4, 'public/images/_130124085814_071123121550q10.png', NULL),
(343, 73, '.', NULL, 'THE', 4, 'public/images/_130124085847_081123144951q13.png', NULL),
(344, 74, 'Qu\'est-ce qu\'un setter en Python ?', 1, 'QCM', 1, NULL, NULL),
(345, 74, 'Comment encapsuler des propriétés et des méthodes dans une classe Python?', 1, 'QCM', 1, NULL, NULL),
(346, 74, 'Qu\'est-ce qu\'une surcharge d\'opérateur en Python ?', 1, 'QCM', 1, NULL, NULL),
(347, 74, 'Développement d’une application orientée objet pour la gestion des appareils électriques\r\nOn désire réaliser une application pour une société qui fabrique et commercialise des appareils électriques :\r\nClasse Appareil : On considère qu’un appareil est caractérisé par une référence, une puissance (exprimée en watt), un poids et un prix.\r\n1)\r\na. Ecrire la classe « AppElectrique » permettant de modéliser ces objets. \r\nAjouter à cette classe un constructeur permettant d’instancier des objets de la classe « AppElectrique » dont on précisera la référence, la puissance, le poids, et un constructeur sans paramètres. (1 pts).\r\n', NULL, 'THE', 1, NULL, NULL),
(348, 74, 'Réécrire la méthode __str__() pour afficher les caractéristiques de l’appareil. (1 pts)', NULL, 'THE', 1, NULL, NULL),
(349, 74, 'c.	Ecrire la méthode ClasseEneergetique() : qui permet d’afficher la classe énergétique de l’appareil selon sa puissance : (2 pts)\r\n•	Si la puissance est inférieure strictement à 300 watt c’est la classe A\r\n•	Si la puissance est comprise entre 300 watt et 1000 watt c’est la classe B\r\n•	Si la puissance est supérieure à 1000 watt c’est la classe C\r\n', NULL, 'THE', 2, NULL, NULL),
(351, 74, '2)	Classe Television : une télévision est un appareil qui possède un type d’écran (LCD, LED …), et une fréquence(en hertz) :\r\na)	Ecrire une classe « Television »   héritant de la classe « AppElectrique ». (1 pts)\r\nb)	Récrire le constructeur de cette classe afin d’initialiser, en plus, le type d’écran et la fréquence avec des valeurs passées en paramètre. (1 pts)\r\n', NULL, 'THE', 2, NULL, NULL),
(352, 74, 'Réécrire la méthode __str__() affichant les caractéristiques de la télévision. (1 pts)', NULL, 'THE', 1, NULL, NULL),
(353, 74, '3)	Classe VeloElec : un vélo électrique est un appareil qui a une autonomie et un kilométrage.\r\na)	Ecrire une classe VeloElec  héritant de la classe « AppElectrique ». (1 pts)\r\nb)	Récrire le constructeur de cette classe pour définir, en plus, l’autonomie (exprimée en Km) et le kilométrage. (1 pts)\r\n', NULL, 'THE', 2, NULL, NULL),
(354, 74, 'c)	Ajouter les méthodes suivantes :\r\n1)	Rouler (distance) : permettant au vélo d’avancer et retournant le nouveau kilométrage. (2 pts)\r\n2)	Charger (nbrminute) : permettant de charger la batterie et renvoyer la nouvelle valeur de l’autonomie (on suppose qu’une heure de charge donne 10 km en autonomie). (2 pts)\r\n', NULL, 'THE', 4, NULL, NULL),
(355, 74, 'd)	Réécrire la méthode __str__() donnant les caractéristiques d’un vélo électrique. (1 pts)', NULL, 'THE', 1, NULL, NULL),
(356, 74, '4)	Classe Program : Tester ces trois classes dans un programme principal. \r\na)	Créer un appareil électrique de type télévision (0,5 pts)\r\nb)	Afficher cet article et afficher sa classe énergétique. (0,5 pts)\r\nc)	Créer un article de type vélo électrique (0,5  pts)\r\nd)	Faites rouler ce vélo (0,5  pts)\r\ne)	Charger ce vélo (0,5  pts)\r\nf)	Afficher le vélo (0,5 pts)\r\n', NULL, 'THE', 3, NULL, NULL),
(357, 75, 'Un employé est caractérisé par:\r\n•	Matricule (incrémenté automatiquement) : _mtle\r\n•	Nom : _nom\r\n•	Date de naissance : _dateNaissance\r\n•	Date d’embauche (la date de recrutement) : _dateEmbauche\r\n•	Salaire de base : _salaireBase\r\nCréer la classe Employe avec :\r\na.	Les attributs (ils doivent être visibles dans les classes filles de la classe Employe) (1pts)', NULL, 'THE', 1, NULL, NULL),
(358, 75, 'b.	Les deux accesseurs DateEmbauche et DateNaissance sachant que l’âge de l’employé à la date de recrutement ne doit pas être inférieur à 16 ans, sinon on affiche un message « l’Age doit être supérieur à 16 ans  » . (2pts)', NULL, 'THE', 2, NULL, NULL),
(359, 75, 'c.	Un constructeur par défaut et un autre d’initialisation. (2pts)', NULL, 'THE', 2, NULL, NULL),
(360, 75, 'd.	Une méthode SalaireAPayer() pour retourner le salaire net d’un employé(3pt)\r\nSalaire net  =  (SalaireBase  )  x  (1  –  taux IR )\r\n', NULL, 'THE', 3, NULL, NULL),
(361, 75, 'e.	La redéfinition de la méthode __str__() qui renvoie  toutes  les  propriétés   séparées  par « - » (1pt)', NULL, 'THE', 1, NULL, NULL),
(362, 75, 'f.	La redéfinition de la méthode __eq__() : 2 employés sont égaux s’ils ont le même matricule.(2pts)', NULL, 'THE', 2, NULL, NULL),
(363, 75, 'Un formateur est un employé  avec en plus :\r\n•	Le nombre des heures supplémentaires par mois : _heureSup.\r\n•	La rémunération par heure supplémentaire, dont la valeur est partagée par tous les formateurs et par défaut égale à 120,00 dh : _remunerationHSup\r\nCréer la classe Formateur avec :\r\nLes attributs. (2pts)\r\n', NULL, 'THE', 2, NULL, NULL),
(364, 75, 'g.	L’accesseur RemunerationHSup. (1pt)', NULL, 'THE', 1, NULL, NULL),
(365, 75, 'h.	Les deux constructeurs par défaut et d’initialisation. (2pts)', NULL, 'THE', 2, NULL, NULL),
(366, 75, 'i.	La méthode SalaireAPayer() pour calculer le salaire net d’un formateur sachant que : (3pts)\r\nSalaire net  =  (SalaireBase   +   NbrHS  x   RemunerationHSup)  x  (1  –  taux IR )\r\n', NULL, 'THE', 3, NULL, NULL),
(367, 75, 'j.	La méthode __str__(). (1pt)', NULL, 'THE', 1, NULL, NULL),
(369, 76, 'On souhaite créer une application pour la gestion des factures d’un magasin pour cela on vous demande d’écrire 3 classes de cette application.\r\nTravail demandé\r\nDans ce magasin un article est identifié par:\r\n•         code : doit respecter le format suivant « ART_00001 »\r\n•         désignation : ne peut pas dépasser 300 caractères.\r\n•         prix : doit être une valeur décimale avec 3 chiffres après la virgules. \r\n•         qte : doit être un entier positif.\r\n•         catégorie : ne peut prendre que les valeurs « Informatique » ou « Bureautique »\r\n1.   Ecrire la classe Article \r\na)   Ecrire le Constructeur (4pts)\r\n', NULL, 'THE', 4, NULL, NULL),
(370, 76, 'b)   Ecrire les accesseurs et les modificateurs nécessaires. (2 pts)', NULL, 'THE', 2, NULL, NULL),
(371, 76, 'c)   Ecrire la méthode __str__() qui  renvoie  toutes  les  propriétés   séparées  par  un  point-virgule.\r\n(1pt)', NULL, 'THE', 1, NULL, NULL),
(372, 76, 'd)  Ecrire   l’exception   ArticleInvalideException()   qui   se   déclenche   si   l’article   est invalide (2pts)', NULL, 'THE', 2, NULL, NULL),
(373, 76, 'Le magasin établit des factures numérotées automatiquement (en partant de 1) et datées. Une facture est identifiée alors par :\r\n•         Numéro de la facture (automatiquement incrémenté)\r\n•         Date facture (prend par défaut la date du système)\r\n•         Collection d’achats (liste des articles)\r\n3.   Ecrire la classe Facture \r\na)  Ecrire le constructeur de cette classe (1pt)\r\n', NULL, 'THE', 1, NULL, NULL),
(374, 76, 'b)   Ecrire la méthode void Ajouter (Article) : permet d’ajouter un article à la collection d’articles, vérifier la non existence du même article dans la collection, dans le cas contraire la méthode doit afficher un message d’erreur (2pts)', NULL, 'THE', 2, NULL, NULL),
(375, 76, 'c)  Ecrire la Méthode Montant_facture() : retourne le montant total de la facture(2pts)', NULL, 'THE', 2, NULL, NULL),
(376, 76, 'd)   Ecrire la méthode Enregistrer_Articles(nom_fichier) :permet d’enregistrer dans un fichier\r\ntexte la liste des articles triée par le prix décroissant.  (3pts)', NULL, 'THE', 3, NULL, NULL),
(377, 76, 'e)	Ecrire la Méthode __str__() qui  renvoie  le numéro et la date de facture avec la liste des articles achetées de la façon suivante :(3pts)\r\n\r\nNuméro facture 2   date facture 04/03/2024\r\n\r\n\r\nListe des articles\r\n\r\nDésignation      prix(en DH)       quantité           prix Total\r\n   \r\n   PC PORTABLE 4000,334              12                      48004,008\r\n   IMPRIMANTE  1500,003              10                      48004,008\r\n\r\n\r\n  Montant de la facture : 63004,038 DH.\r\n', NULL, 'THE', 3, NULL, NULL),
(378, 77, 'On souhaite créer une application pour la gestion des factures d’un magasin pour cela on vous demande d’écrire 2 classes de cette application.\r\n\r\nTravail demandé\r\n\r\nDans ce magasin un produit est identifié par:\r\n•         code : doit respecter le format suivant « PRD#11112 »\r\n•         désignation : ne peut pas dépasser 100 caractères.\r\n•         prix : doit être une valeur décimale avec 2 chiffres après la virgules. \r\n•          qte : doit être une valeur numérique supérieur à 50.\r\n•         catégorie : ne peut prendre que les valeurs « Informatique » ou « Bureautique »\r\n\r\n1.   Ecrire la classe Produit \r\na)   Ecrire le Constructeur (4pts)\r\n', NULL, 'THE', 4, NULL, NULL),
(379, 77, 'b)   Ecrire les accesseurs et les modificateurs nécessaires. (2 pts)', NULL, 'THE', 2, NULL, NULL),
(380, 77, 'c)   Ecrire la méthode __str__() qui  renvoie  toutes  les  propriétés   séparées  par  un  point-virgule.(1pt)\r\n', NULL, 'THE', 1, NULL, NULL),
(381, 77, 'd)  Ecrire   l’exception   ProduitInvalideException()   qui   se   déclenche   si   l’produit   est invalide (2pts)', NULL, 'THE', 2, NULL, NULL),
(382, 77, 'Le magasin établit des factures numérotées automatiquement (en partant de 1) et datées. Une facture est identifiée alors par :\r\n•         Numéro de la facture (automatiquement incrémenté)\r\n•         Date facture (prend par défaut la date du système)\r\n•         Collection d’achats (liste des produits)\r\n\r\n3.   Ecrire la classe Facture \r\na)  Ecrire le constructeur de cette classe (1pt)\r\n', NULL, 'THE', 1, NULL, NULL),
(383, 77, 'b)   Ecrire la méthode AjouterProduit (Produit) : permet d’ajouter un produit à la liste  des produits, vérifier la non existence du même produit dans la collection, dans le cas contraire la méthode doit afficher un message d’erreur (2pts)', NULL, 'THE', 2, NULL, NULL),
(384, 77, 'c)  Ecrire la Méthode Montant_facture() : retourne le montant total de la facture(2pts)', NULL, 'THE', 2, NULL, NULL),
(385, 77, 'd)   Ecrire la méthode Enregistrer_Produit(nom_fichier) :permet d’enregistrer dans un fichier texte la liste des produits triée par le prix décroissant.  (3pts)', NULL, 'THE', 3, NULL, NULL),
(386, 77, 'e)	Ecrire la Méthode AfficherFacture() qui  renvoie  le numéro et la date de facture avec la liste des produits achetées de la façon suivante :(3pts)\r\n\r\nNuméro facture 2   date facture 07/03/2024\r\n\r\n\r\nListe des produits\r\n\r\nDésignation      prix(en DH)       quantité           prix Total\r\n   \r\n   PC PORTABLE 4000,33             12                      48004,00\r\n   IMPRIMANTE  1500,00              10                      48004,00\r\n\r\n\r\n\r\n  Montant de la facture : 63004,03 DH.\r\n', NULL, 'THE', 3, NULL, NULL),
(387, 78, '1.	Créer la base de données « E_commerce »  . ', NULL, 'THE', 1, 'public/images/_040424144227cc2_bd.png', NULL),
(388, 78, '2.	Donner le script SQL pour la création des tables avec les  contraintes suivantes : \r\na-	Les clés primaires \r\nb-	Les clés étrangères\r\nc-	Deux produits ne peut pas avoir la même désignation\r\nd-	La quantité minimale permise est 1.\r\ne-	A la modification d’un panier, ses éléments dans la table ElementsPanier doivent être modifiés.\r\n', NULL, 'THE', 12, NULL, NULL),
(389, 78, '3.	Ajouter les contraintes suivantes : \r\na-	La ville par défaut d’un client est ‘Ifrane’\r\nb-	La date de livraison est postérieure à la date de la commande. \r\nc-	La quantité doit être positif \r\nd-	Ajouter la colonne QteMin à la table Produit \r\ne-	La quantité minimale autorisée est 10. \r\n', NULL, 'THE', 7, NULL, NULL),
(390, 79, 'L’objectif est la réalisation d’une plateforme permettant aux stagiaires de l’OFPPT de consulter les livres de la bibliothèque « My LibSchool » et aussi de choisir et ajouter des livres à leur bibliothèque personnelle  « My Favorite »\r\nNB. Les champs marqués en gras et soulignés représentent les clés primaires des tables, les champs marqués par # représentent les clés étrangères.\r\n1.	Créer la base de données « My_LibSchool»  ', NULL, 'THE', 1, 'public/images/_040424164520cc2_dd101_db.png', NULL),
(391, 79, '2.	Donner le script SQL pour la création des tables', NULL, 'THE', 6, NULL, NULL),
(392, 79, '3.	Donner le script SQL pour la création des contraintes : \r\na-	Les clés primaires \r\nb-	Les clés étrangères\r\nc-	A la modification d’un Livre, ses éléments dans la table Avis doivent être modifiés.\r\nd-	A la suppression d’un Utilisateur, ses éléments dans toutes les tables doivent être supprimés.\r\ne-	DateAjout par défaut la date système \r\nf-	idLivre respecte le format « OFPPT_»\r\ng-	password doit contenir au moins 8 caractères. \r\nh-	password doit contenir des lettres minuscules, majuscules et les chiffres.\r\ni-	Tel doit commencer par ‘+2126’ ou ‘06’ suivi par 8 chiffres.', NULL, 'THE', 13, NULL, NULL),
(393, 80, 'Exercice 1 : (9 pts)\r\nOn souhaite afficher les produits d’une application web e-commerce, sous la forme suivante ; \r\nPour faciliter le développement de cette partie, on propose de créer un composant balde qui définira un produit comme indiqué ci-dessus ; et de le réutiliser au besoin.  \r\n1.	Donnez la commande permettant de créer un composant blade sous le nom « produit ». (1pt)\r\n2.	Chaque produit est défini par les propriétés suivantes : titre, url de l’image, prix et solde (Boolean qui indique est ce que le produit est en solde ou pas).\r\nDonnez le code de la classe produit.php (placé sous le répertoire app/view/components) permettant de définir les attributs et le constructeur d’initialisation. (3 pts)\r\n3.	Sachant que si le produit est en solde, son prix est affiché en rouge ; proposez le code à intégrer dans le composant produit.blade.php (placé sous le dossier views/components). (3 pts)\r\n4.	Donnez le code permettant d’afficher le composant produit avec les caractéristiques, ci-après, dans une page blade (ajoutez la structure html) : (2pts)\r\n\r\nTitre : iPhone 14, 128 Go Version Europe\r\nurl : images/phones/iphone14.jpg\r\nprix : 8890dhs\r\nsolde : false\r\n', NULL, 'THE', 9, 'public/images/_270424123827q1.png', NULL),
(394, 80, 'Exercice 2 : (11pts)\r\nOn souhaite développer un simulateur d’épargne web en Laravel ; \r\nL’utilisateur saisit un montant objectif qu’il souhaite atteindre et le capital initial avec lequel il veut commencer l’épargne. Le système, en résultat, calculera et affichera le montant à sauvegarder chaque mois.\r\n1.	Donnez la commande Artisan permettant de créer un contrôleur appelé : epargneController. (1pt)\r\n2.	On suppose qu’on a ajouté deux méthodes ; vides ; à cette classe : index et calculer.\r\nSur web.php, Ajoutez les routes suivantes : (2pts)\r\n', NULL, 'THE', 3, 'public/images/_270424123947q3.png', NULL),
(395, 80, '3.	Soit la vue « epargne.blade.php » suivante :\r\nDonnez le code html permettant de créer ce formulaire. (2pts)', NULL, 'THE', 2, 'public/images/_270424124021q2.png', NULL),
(396, 80, '4.	Ecrire le code des méthodes du contrôleur epargneController sachant que : \r\na.	La méthode index permet d’afficher la vue epargne.blade.php ; (2pts)\r\nb.	La méthode calculer permet de réponde à la soumission du formulaire affiché dans la vue « epargne ».\r\nElle permet ainsi de calculer le montant à sauvegarder chaque mois pour 3 durées d’épargne différentes : une année, 2 ans et 3 ans. (4pts)\r\nLe résultat à retourner (sous la méthode dd() ) sera un tableau associatif de 3 éléments.\r\nExemple de résultat : \r\n\r\narray:3 [▼ // app\\Http\\Controllers\\epargneController.php:20\r\n  &quot;une_annee&quot; =&gt; 1583.33\r\n  &quot;deux_ans&quot; =&gt; 791.67\r\n  &quot;trois_ans&quot; =&gt; 527.78\r\n]\r\nIndication : formule de calcul \r\nSoit nbr_mois : le nombre de mois qui peut être : 12 ou 24 ou 36\r\nResultat = (montant_objectif – capital_initial) / nbr_mois\r\n', NULL, 'THE', 6, NULL, NULL),
(397, 81, '1) Comment appelle-t-on une table jointe à elle-même ?', 1, 'QCM', 0.5, NULL, NULL),
(398, 81, '2) Laquelle des commandes suivantes est utilisée pour supprimer une table en SQL ?', 1, 'QCM', 0.5, NULL, NULL),
(399, 81, '3) La clé primaire peut être ?', 1, 'QCM', 0.5, NULL, NULL),
(400, 81, '4) Sélectionnez l’objet de base de données correct qui n’existe pas physiquement.', 1, 'QCM', 0.5, NULL, NULL),
(401, 81, 'Exercice 2  (18pts)\r\nL’objectif est la réalisation d’une plateforme permettant aux stagiaires de l’OFPPT de consulter les livres de la bibliothèque « My LibSchool » et aussi de choisir et ajouter des livres à leur bibliothèque personnelle  « My Favorite »\r\nNB. Les champs marqués en gras et soulignés représentent les clés primaires des tables, les champs marqués par # représentent les clés étrangères.\r\nLivre (idLivre, titre,editeur,datePublication,prix)\r\nUtilisateur (email,nom,prenom,password,tel)\r\nMyFavorite (idFav ,dateAjout, #idLivre, #email)\r\nAvis (idAvis,dateAvis,text, #idLivre, #email)\r\nLike (idLike,dateLike,text, #idLivre, #email)\r\nDisLike (idDislike,dateDislike,text, #idLivre, #email)\r\n\r\n1.	Donner le script SQL pour la création des tables. (3 pts)\r\n2.	Donner le script SQL pour la création des contraintes : (2 pts)\r\na-	Les clés primaires \r\nb-	Les clés étrangères\r\nc-	DateAjout par défaut la date système \r\nd-	idLivre respecte le format « OFPPT_00001»\r\n3.	Donner un script pour insérer une ligne au minimum dans chaque table (1 pts)\r\n', NULL, 'THE', 6, 'public/images/_100524171851cc3_db.png', NULL),
(402, 81, '4.	Donner les requêtes de sélection pour :\r\na-	Afficher le nombre de « like » et « dislike ».  (1 pt)\r\nb-	Donner le/les livre(s) le/les plus liké(s). (2 pt)\r\nc-	Afficher l’utilisateur le plus actif dans la plateforme (avoir le maximum d’« avis »)\r\n (2 pts).\r\nd-	Afficher les livres non « likés » (2 pts)\r\ne-	Afficher les utilisateurs dont le mot de passe est faible (composés seulement des alphabets minuscules ou des alphabets majuscules). (3 pts)\r\nf-	Afficher les livres Equitables (Nombre de «like» = Nombre de « dislike »). (2 pts)\r\n', NULL, 'THE', 12, NULL, NULL),
(403, 82, 'Soit la base de données « E-commerce » suivante :\r\nClient (codeClt, nom, prenom, adresse, ville, tel)\r\nProduit (refPrd, désignation, description, catégorie, prixAchat, nbrEnstock)\r\nPanier (codePanier, codeClt, dateCreation, dateCommande,dateLivraison,MontantTotal)\r\nElementsPanier (refPrd, codePanier,quantité,prix)\r\nNB. Les champs marqués en gras représentent les clés primaires des tables, les champs soulignés représentent les clés étrangères.\r\n\r\n1.	Donner le script SQL pour la création des tables. (3 pts)\r\n2.	Donner le script SQL pour la création des tables avec les  contraintes suivantes : (3 pts)\r\na-	Les clés primaires \r\nb-	Les clés étrangères\r\nc-	Deux produits ne peut pas avoir la même désignation\r\nd-	La quantité minimale permise est 1 \r\n', NULL, 'THE', 6, 'public/images/_110524112027cc3_db_dd101.png', NULL),
(404, 82, '3.	Donner les requêtes de sélection pour (9 pts) :\r\na-	Noms et prénoms en majuscule des clients qui habitant ‘Tanger’ classés dans l’ordre alphabétique des noms.\r\nb-	Désignation et description des produits commandés en mois d’avril 2024.\r\nc-	Noms et prénoms des clients qui ont commandés au moins deux paniers.\r\nd-	Le/Les produit(s) le/les plus commandé(s) par ville.\r\ne-	Les produits non vendus en mois d&#039;avril 2024.\r\n', NULL, 'THE', 9, NULL, NULL),
(405, 82, '4.	Pour sécuriser  la base de données « E_commerce » (5 pts) :\r\na-	Créer un utilisateur « vendeur » avec « ecom2024@ » comme mot de passe.\r\nb-	Associer tous les privilèges  à utilisateur « vendeur »  sur la base de données « E_commerce ».\r\nc-	Interdire à « vendeur » la permission de modifier ou de supprimer dans la base de données « E_commerce ».\r\nd-	Exporter la base de données vers le chemin « C:\\backup\\E_commerce.sql »\r\ne-	Importer le backup dans la base de données &quot; E_commerce _v2&quot;\r\n', NULL, 'THE', 5, NULL, NULL),
(406, 84, 'Soit la table suivante :\r\ntâches (id, titre, difficulté, durée_estimée, durée_réelle, état, created_at, updated_at)\r\n-	Le champ “id” est la clé primaire de sa table\r\n-	Le champ « difficulté » est un entier compris entre 1 et 5 indiquant le niveau de difficulté de la tâche ;\r\n-	Le champ « duree_estimee » indique le nombre de jours estimé pour réaliser la tâche\r\n-	Le champ « duree_reelle» indique le nombre de jours réel qu’a nécessité la réalisation de la tâche ; \r\n\r\n1.	Créer une application avec les différentes opérations CRUD permettant de manipuler la table « tâches » en prenant en considération les spécifications ci-après :\r\n-	Dans le fichier de migration, ajouter les contraintes suivantes :\r\nId: Clé primaire de la table\r\nTitre: Chaine, de maximum, 80 caractères\r\ndifficulté: Entier positif \r\nSa valeur par défaut est 1 ;\r\ndurée_estimée	: Entier positif \r\ndurée_réelle	: Entier positif \r\nIl peut accepter des valeurs nulles ;\r\nEtat	Champ qui ne peut accepter que les valeurs suivantes : en_attente ou en_cours ou terminé\r\n-	Initialiser la table « tâches » par deux enregistrements à travers un fichier seeder ;\r\n-	Lors de l’ajout ou la modification d’une tâche, ajouter les contraintes de validation suivantes :\r\n	Le « titre » ne peut comporter que des caractères alphabétiques ou numériques.\r\n	« difficulté » est un entier positif compris entre 1 et 5 ;\r\n	Les champs : « durée_estimée » et « champs_réelle » valent au minimum 1 ;\r\n	« état » ne peut accepter que les valeurs suivantes : en_attente ou en_cours ou terminé ;\r\n2.	Ajouter à votre contrôleur les méthodes suivantes :\r\na.	tâchesTerminées : permettant de retourner une liste des tâches terminées avec un nouveau champ appelé « écart » : Ce champ calculera la différence entre la durée réelle et la durée estimée ;\r\nb.	nombreTâches : Le nombre de tâches de l’année en cours par état ;\r\nc.	tâchesDifficiles : Les tâches qui ont une difficulté de niveau supérieur ou égal à 4 ou leur durée de réalisation estimée est comprise entre 15 et 20 jours ; \r\n\r\n\r\n\r\n', NULL, 'THE', 20, 'public/images/_3105241157301.png', NULL);

-- --------------------------------------------------------

--
-- Structure de la table `users`
--

CREATE TABLE `users` (
  `cin` varchar(10) NOT NULL,
  `nom` varchar(45) NOT NULL,
  `prenom` varchar(45) NOT NULL,
  `email` varchar(65) NOT NULL,
  `pass` varchar(40) NOT NULL,
  `type` varchar(45) NOT NULL DEFAULT 'stg',
  `banned` int(11) DEFAULT 1,
  `id_g` int(11) DEFAULT NULL,
  `logine` int(11) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `users`
--

INSERT INTO `users` (`cin`, `nom`, `prenom`, `email`, `pass`, `type`, `banned`, `id_g`, `logine`) VALUES
('A12333', 'elhaanani', 'abdelmonim', 'elhaanani2@gmail.com', 'A12333', 'stagiaire', NULL, 52, 0),
('A1234', 'elhaanani', 'mohamed', 'elhaanani@gmail.com', 'A1234', 'stagiaire', NULL, 52, 0),
('AS20054', 'HACHIMI', 'HAYTEM', 'AS20054@gmail.com', 'AS20054', 'stagiaire', NULL, 4, 0),
('BB243891', 'EL KHATTABI', 'OUMAIMA', 'BB243891@gmail.com', 'BB243891', 'stagiaire', NULL, 3, 0),
('CB331919', 'EL HANINE', 'MOHAMMED', 'CB331919@gmail.com', 'CB331919', 'stagiaire', NULL, 6, 0),
('CB344902', 'RAHMANI', 'MARIAM', 'CB344902@gmail.com', 'CB344902', 'stagiaire', NULL, 7, 1),
('CB345929', 'CHARIF', 'MOHAMMED', 'CB345929@gmail.com', 'CB345929', 'stagiaire', NULL, 7, 1),
('CB346449', 'MANSOURI', 'HAMZA', 'CB346449@gmail.com', 'CB346449', 'stagiaire', NULL, 7, 1),
('CB346790', 'BOULAHFA', 'KHADIJA', 'CB346790@gmail.com', 'CB346790', 'stagiaire', NULL, 2, 0),
('CB348272', 'EL-YAMANI', 'KHADIJA', 'CB348272@gmail.com', 'CB348272', 'stagiaire', NULL, 4, 0),
('CB350275', 'EL MAHDI', 'LAÏLA', 'CB350275@gmail.com', 'CB350275', 'stagiaire', NULL, 7, 1),
('CB354012', 'OUBERRY', 'NASSIR', 'CB354012@gmail.com', 'CB354012', 'stagiaire', NULL, 5, 0),
('CB355407', 'AYOUGIL', 'MOHAMED', 'CB355407@gmail.com', 'CB355407', 'stagiaire', NULL, 1, 1),
('CI1143', 'AARAB', 'SAÏDA', 'CI1143@gmail.com', 'CI1143', 'stagiaire', NULL, 1, 1),
('CI1417', 'OUBENAZHA', 'ISSAM', 'CI1417@gmail.com', 'CI1417', 'stagiaire', NULL, 2, 1),
('CI1897', 'MACHHOUR', 'RACHIDA', 'CI1897@gmail.com', 'CI1897', 'stagiaire', NULL, 7, 1),
('CI1921', 'KHACHIAI', 'OTMANE', 'CI1921@gmail.com', 'CI1921', 'stagiaire', NULL, 2, 0),
('CI1945', 'AYOUJIL', 'BASMA', 'CI1945@gmail.com', 'CI1945', 'stagiaire', NULL, 5, 0),
('CI1990', 'AMELAL', 'SANAE', 'CI1990@gmail.com', 'CI1990', 'stagiaire', NULL, 4, 0),
('CI2026', 'EL-BAKKALI', 'ABDESSALAM', 'CI2026@gmail.com', 'CI2026', 'stagiaire', NULL, 4, 0),
('CI2067', 'AFAKHSSI', 'FATIMA ZAHRAA', 'CI2067@gmail.com', 'CI2067', 'stagiaire', NULL, 6, 0),
('CI2091', 'EL MESSAOUDI', 'YASSINE', 'CI2091@gmail.com', 'CI2091', 'stagiaire', NULL, 6, 0),
('CI2146', 'EL-BOUZIANI', 'SALMA', 'CI2146@gmail.com', 'CI2146', 'stagiaire', NULL, 3, 0),
('CI2249', 'ARHECHE', 'AMINE', 'CI2249@gmail.com', 'CI2249', 'stagiaire', NULL, 2, 0),
('CI2580', 'EL YOUSSEFI', 'HAYAT', 'CI2580@gmail.com', 'CI2580', 'stagiaire', NULL, 4, 0),
('CI2627', 'BOUOU', 'MAJDA', 'CI2627@gmail.com', 'CI2627', 'stagiaire', NULL, 4, 0),
('CI2772', 'DOUCHNI', 'IDRISS', 'CI2772@gmail.com', 'CI2772', 'stagiaire', NULL, 7, 1),
('CI2788', 'RADI', 'SANAE', 'CI2788@gmail.com', 'CI2788', 'stagiaire', NULL, 5, 0),
('CI2877', 'EL-MADANI', 'ABDELILAH', 'CI2877@gmail.com', 'CI2877', 'stagiaire', NULL, 2, 1),
('CI3049', 'EL-MONTASSIR', 'OTHMANE', 'CI3049@gmail.com', 'CI3049', 'stagiaire', NULL, 4, 0),
('CI3546', 'JABEUR', 'DOUHA', 'CI3546@gmail.com', 'CI3546', 'stagiaire', NULL, 1, 1),
('CI3660', 'ENOUR', 'TOURIA', 'CI3660@gmail.com', 'CI3660', 'stagiaire', NULL, 6, 0),
('CI3760', 'AMAADOR', 'FATIMA-ZOHRA', 'CI3760@gmail.com', 'CI3760', 'stagiaire', NULL, 3, 0),
('CI459', 'HEBRI', 'OTMANE', 'CI459@gmail.com', 'CI459', 'stagiaire', NULL, 1, 0),
('CN38976', 'BIAA', 'SOULAYMAN', 'CN38976@gmail.com', 'CN38976', 'stagiaire', NULL, 1, 0),
('CN51111', 'KADDOURI', 'HAMZA', 'CN51111@gmail.com', 'CN51111', 'stagiaire', NULL, 2, 1),
('CN51314', 'OUGAHI', 'OUSSAMA', 'CN51314@gmail.com', 'CN51314', 'stagiaire', NULL, 4, 0),
('CN54864', 'BOUIZERZAIN', 'NOUHA', 'CN54864@gmail.com', 'CN54864', 'stagiaire', NULL, 6, 0),
('CN58074', 'BOUTAGRA', 'WALID', 'CN58074@gmail.com', 'CN58074', 'stagiaire', NULL, 6, 0),
('CN63057', 'AMAHMEK', 'YOUSSEF', 'CN63057@gmail.com', 'CN63057', 'stagiaire', NULL, 5, 0),
('D689477', 'BENJAH', 'AMINE', 'D689477@gmail.com', 'D689477', 'stagiaire', NULL, 2, 1),
('DA100527', 'DIDISEDDIK', 'SAFAE', 'DA100527@gmail.com', 'DA100527', 'stagiaire', NULL, 3, 0),
('DA100623', 'OMARI', 'MOHAMED AMINE', 'DA100623@gmail.com', 'DA100623', 'stagiaire', NULL, 7, 1),
('DA101003', 'SOUSSI-ALAOUI', 'WALID', 'DA101003@gmail.com', 'DA101003', 'stagiaire', NULL, 1, 0),
('DA102284', 'FERROUHI', 'ZAKARIAE', 'DA102284@gmail.com', 'DA102284', 'stagiaire', NULL, 2, 1),
('DA102357', 'YAZIDI', 'SMAIL', 'DA102357@gmail.com', 'DA102357', 'stagiaire', NULL, 7, 1),
('DA102389', 'HAJJAOUI', 'FAYROUZ', 'DA102389@gmail.com', 'DA102389', 'stagiaire', NULL, 1, 1),
('DA102503', 'LAMZARTI', 'TALAL', 'DA102503@gmail.com', 'DA102503', 'stagiaire', NULL, 7, 0),
('DA102534', 'MALKI', 'MOHAMED', 'DA102534@gmail.com', 'DA102534', 'stagiaire', NULL, 1, 1),
('DA102541', 'DRAOUI', 'IBTISSAM', 'DA102541@gmail.com', 'DA102541', 'stagiaire', NULL, 7, 1),
('DA102626', 'MOUTAOUAKIL', 'ASMAE', 'DA102626@gmail.com', 'DA102626', 'stagiaire', NULL, 2, 0),
('DA103014', 'MABROUKI', 'YOUNES', 'DA103014@gmail.com', 'DA103014', 'stagiaire', NULL, 3, 0),
('DA103130', 'TAHIRI-EL ALAOUI', 'MOHAMED-TAHA', 'tahatahiri@gmail.com', 'DA103130', 'stagiaire', NULL, 7, 1),
('DA103720', 'AKAYOU', 'ABDELHAKIM', 'DA103720@gmail.com', 'DA103720', 'stagiaire', NULL, 7, 1),
('DA103770', 'LAAOUICHI', 'AHMED', 'DA103770@gmail.com', 'DA103770', 'stagiaire', NULL, 6, 0),
('DA104117', 'AMKOR', 'RHIZLANE', 'DA104117@gmail.com', 'DA104117', 'stagiaire', NULL, 1, 1),
('DA104138', 'RHANEM', 'FATIMA EZOHRAE', 'DA104138@gmail.com', 'DA104138', 'stagiaire', NULL, 4, 0),
('DA104211', 'AMQOR', 'BOUTAINA', 'DA104211@gmail.com', 'DA104211', 'stagiaire', NULL, 3, 0),
('DA104214', 'EL HAANANI', 'ABDELMOUNAIM', 'DA104214@gmail.com', 'DA104214', 'stagiaire', NULL, 7, 1),
('DA104318', 'BOUKRYM', 'HAJAR', 'DA104318@gmail.com', 'DA104318', 'stagiaire', NULL, 5, 0),
('DA104454', 'WAHI', 'HICHAM', 'DA104454@gmail.com', 'DA104454', 'stagiaire', NULL, 4, 0),
('DA104643', 'SAIDI HASSANI ALAOUI', 'WISSAL', 'DA104643@gmail.com', 'DA104643', 'stagiaire', NULL, 7, 1),
('DA104688', 'BOUTMOUCHOUT', 'ISMAIL', 'DA104688@gmail.com', 'DA104688', 'stagiaire', NULL, 6, 0),
('DA104704', 'TALEBMOH', 'ALI', 'DA104704@gmail.com', 'DA104704', 'stagiaire', NULL, 1, 1),
('DA104711', 'LOUALI', 'ABDESSAMAD', 'DA104711@gmail.com', 'DA104711', 'stagiaire', NULL, 2, 1),
('da104723', 'EL MOUSSAOUI', 'AYMANE', 'da104723@gmail.com', 'da104723', 'stagiaire', NULL, 7, 1),
('DA104789', 'GURNAZI', 'BOUCHRA', 'DA104789@gmail.com', 'DA104789', 'stagiaire', NULL, 3, 0),
('DA104864', 'BOUAZZAOUI', 'OMAR', 'DA104864@gmail.com', 'DA104864', 'stagiaire', NULL, 2, 1),
('DA104868', 'WAHIDI', 'RACHID', 'DA104868@gmail.com', 'DA104868', 'stagiaire', NULL, 6, 0),
('DA104908', 'DAFIR', 'ANAS', 'DA104908@gmail.com', 'DA104908', 'stagiaire', NULL, 4, 0),
('DA105094', 'LAHJIJ', 'RACHID', 'DA105094@gmail.com', 'DA105094', 'stagiaire', NULL, 6, 0),
('DA105115', 'AZOU', 'MEHDI', 'DA105115@gmail.com', 'DA105115', 'stagiaire', NULL, 2, 1),
('DA105203', 'JANAB', 'OMAR', 'DA105203@gmail.com', 'DA105203', 'stagiaire', NULL, 7, 1),
('DA105449', 'LKHAYAT', 'ANAS', 'DA105449@gmail.com', 'DA105449', 'stagiaire', NULL, 2, 0),
('DA105480', 'ASSI', 'FATIMA ZOHRA', 'DA105480@gmail.com', 'DA105480', 'stagiaire', NULL, 4, 0),
('DA105587', 'OUJAHAL', 'MOHAMED', 'DA105587@gmail.com', 'DA105587', 'stagiaire', NULL, 2, 0),
('DA105618', 'FARSSI', 'SALMA', 'DA105618@gmail.com', 'DA105618', 'stagiaire', NULL, 3, 0),
('DA105622', 'HIMMI', 'ADAM', 'DA105622@gmail.com', 'DA105622', 'stagiaire', NULL, 1, 1),
('DA105672', 'MAJDOUB', 'RABAB', 'DA105672@gmail.com', 'DA105672', 'stagiaire', NULL, 5, 0),
('DA105673', 'MAJDOUB', 'RIHAB', 'DA105673@gmail.com', 'DA105673', 'stagiaire', NULL, 4, 0),
('DA105676', 'HASSYOUA', 'NAIMA', 'DA105676@gmail.com', 'DA105676', 'stagiaire', NULL, 4, 0),
('DA105822', 'ACHEKKIR', 'MERIEM', 'DA105822@gmail.com', 'DA105822', 'stagiaire', NULL, 5, 0),
('DA106317', 'ARBANI', 'DOHA', 'DA106317@gmail.com', 'DA106317', 'stagiaire', NULL, 5, 0),
('DA106392', 'LAMALEM', 'TAHA', 'DA106392@gmail.com', 'DA106392', 'stagiaire', NULL, 2, 1),
('DA106399', 'EL BOUZIANI', 'YOSSRA', 'DA106399@gmail.com', 'DA106399', 'stagiaire', NULL, 4, 0),
('DA106571', 'HACHEM', 'BASMA', 'DA106571@gmail.com', 'DA106571', 'stagiaire', NULL, 1, 0),
('DA106935', 'JAZOULI', 'KHALIL', 'DA106935@gmail.com', 'DA106935', 'stagiaire', NULL, 1, 1),
('DA106939', 'OUAYAT', 'AMAL', 'DA106939@gmail.com', 'DA106939', 'stagiaire', NULL, 2, 0),
('DA107236', 'EL KHARRAK', 'WALID', 'DA107236@gmail.com', 'DA107236', 'stagiaire', NULL, 2, 0),
('DA107278', 'BELKASSI', 'SARA', 'DA107278@gmail.com', 'DA107278', 'stagiaire', NULL, 5, 0),
('DA107295', 'TAYBI', 'SALIM', 'DA107295@gmail.com', 'DA107295', 'stagiaire', NULL, 1, 0),
('DA107492', 'EL ACHCHAK', 'WAFAE', 'DA107492@gmail.com', 'DA107492', 'stagiaire', NULL, 3, 0),
('DA107633', 'FADILI', 'MOUNIA', 'DA107633@gmail.com', 'DA107633', 'stagiaire', NULL, 2, 1),
('DA107715', 'ETTAIBI', 'BILAL', 'DA107715@gmail.com', 'DA107715', 'stagiaire', NULL, 3, 0),
('DA107730', 'KHALLOU', 'MAROUANE', 'DA107730@gmail.com', 'DA107730', 'stagiaire', NULL, 3, 0),
('DA107735', 'AMQOR', 'LOUBNA', 'DA107735@gmail.com', 'DA107735', 'stagiaire', NULL, 6, 0),
('DA107777', 'ELMASOUDI', 'HAJAR', 'DA107777@gmail.com', 'DA107777', 'stagiaire', NULL, 1, 1),
('DA107792', 'MAGHRI', 'OTHMANE', 'DA107792@gmail.com', 'DA107792', 'stagiaire', NULL, 5, 0),
('DA107948', 'AOUKACH', 'HIND', 'DA107948@gmail.com', 'DA107948', 'stagiaire', NULL, 5, 0),
('DA108033', 'EZZARKA', 'NORA', 'DA108033@gmail.com', 'DA108033', 'stagiaire', NULL, 6, 0),
('DA108530', 'JAMHAMMED', 'LAMYAE', 'DA108530@gmail.com', 'DA108530', 'stagiaire', NULL, 5, 0),
('DA108545', 'DGHOUGHI', 'HAMZA', 'DA108545@gmail.com', 'DA108545', 'stagiaire', NULL, 1, 1),
('DA108696', 'EL KHAYATI', 'WALID', 'DA108696@gmail.com', 'DA108696', 'stagiaire', NULL, 5, 0),
('DA108915', 'OUCHRIF', 'FATIMA', 'DA108915@gmail.com', 'DA108915', 'stagiaire', NULL, 4, 0),
('DA109151', 'IZI', ' YASSINE', 'DA109151@gmail.com', 'DA109151', 'stagiaire', NULL, 1, 1),
('DA109371', 'HADAOUI', 'ILHAM', 'DA109371@gmail.com', 'DA109371', 'stagiaire', NULL, 6, 0),
('DA109489', 'OULMAATI', 'SALMA', 'DA109489@gmail.com', 'DA109489', 'stagiaire', NULL, 3, 0),
('DA109600', 'EL ABDELLAOUI', 'YOUSSEF', 'DA109600@gmail.com', 'DA109600', 'stagiaire', NULL, 3, 0),
('DA109818', 'BELHAJ', 'ASSYA', 'DA109818@gmail.com', 'DA109818', 'stagiaire', NULL, 6, 0),
('DA109903', 'EL-HADDIOUI', 'NOHA', 'DA109903@gmail.com', 'DA109903', 'stagiaire', NULL, 5, 0),
('DA88558', 'JABRI', 'ZAINAB', 'DA88558@gmail.com', 'DA88558', 'stagiaire', NULL, 5, 0),
('DA98134', 'CHEIKH', 'AMINE', 'DA98134@gmail.com', 'DA98134', 'stagiaire', NULL, 7, 0),
('DA99914', 'KANOUN ALAOUI', 'YASSINE', 'DA99914@gmail.com', 'DA99914', 'stagiaire', NULL, 3, 0),
('DB25853', 'BOUTAHRICHT', 'SAMIRA', 'DB25853@gmail.com', 'DB25853', 'stagiaire', NULL, 5, 0),
('DB28903', 'EL GHAZALY', 'FAICAL', 'DB28903@gmail.com', 'DB28903', 'stagiaire', NULL, 5, 0),
('DB29279', 'MEFTOUH', 'AYMANE', 'DB29279@gmail.com', 'DB29279', 'stagiaire', NULL, 4, 0),
('DB29786', 'AMEZIANE', 'CHARAF-EDDINE', 'DB29786@gmail.com', 'DB29786', 'stagiaire', NULL, 7, 1),
('DB30016', 'AMAANE', 'GHITA', 'DB30016@gmail.com', 'DB30016', 'stagiaire', NULL, 3, 0),
('DB30143', 'EL ATMANI', 'NISRINE', 'DB30143@gmail.com', 'DB30143', 'stagiaire', NULL, 1, 1),
('DB30200', 'ACHAK', 'AYA', 'DB30200@gmail.com', 'DB30200', 'stagiaire', NULL, 4, 0),
('DB30457', 'BOUMADIAN', 'AMINE', 'DB30457@gmail.com', 'DB30457', 'stagiaire', NULL, 7, 1),
('DB30508', 'KAMIL', 'SALAH-EDDINE', 'DB30508@gmail.com', 'DB30508', 'stagiaire', NULL, 5, 0),
('DB30546', 'AABID', 'SAMIRA', 'DB30546@gmail.com', 'DB30546', 'stagiaire', NULL, 6, 0),
('DB30569', 'AIT IKHALF', 'FATIMA ZAHRAA', 'DB30569@gmail.com', 'DB30569', 'stagiaire', NULL, 4, 0),
('DB30758', 'TACHEROUNE', 'MOHAMED', 'DB30758@gmail.com', 'DB30758', 'stagiaire', NULL, 1, 1),
('DB30759', 'GHAZAL', 'ACHRAF', 'DB30759@gmail.com', 'DB30759', 'stagiaire', NULL, 1, 1),
('DB30834', 'EL BOURKADI', 'DOUAA', 'DB30834@gmail.com', 'DB30834', 'stagiaire', NULL, 5, 0),
('DB30854', 'OUMIMOUNE', 'HANANE', 'DB30854@gmail.com', 'DB30854', 'stagiaire', NULL, 3, 0),
('DB30948', 'DINIOUN', 'AYA', 'DB30948@gmail.com', 'DB30948', 'stagiaire', NULL, 4, 0),
('DB30958', 'BENSMINA', 'YASSIR', 'DB30958@gmail.com', 'DB30958', 'stagiaire', NULL, 1, 1),
('DB30977', 'HARIGMA', 'HIBA', 'DB30977@gmail.com', 'DB30977', 'stagiaire', NULL, 3, 0),
('DB31001', 'BENYOUSSEF', 'LOUBNA', 'DB31001@gmail.com', 'DB31001', 'stagiaire', NULL, 2, 1),
('DB31061', 'BOUMAIZE', 'ELAZIZA', 'DB31061@gmail.com', 'DB31061', 'stagiaire', NULL, 6, 0),
('DB31165', 'SALHI', 'WAFAE', 'DB31165@gmail.com', 'DB31165', 'stagiaire', NULL, 5, 0),
('DB31174', 'LAISSIR', 'MERYEM', 'DB31174@gmail.com', 'DB31174', 'stagiaire', NULL, 6, 0),
('DB31223', 'RAMDAN', 'HIBA', 'DB31223@gmail.com', 'DB31223', 'stagiaire', NULL, 3, 0),
('DB31229', 'ICHOU', 'MOUNIA', 'DB31229@gmail.com', 'DB31229', 'stagiaire', NULL, 3, 0),
('DB31288', 'KHALEF', 'DOUAAE', 'DB31288@gmail.com', 'DB31288', 'stagiaire', NULL, 3, 0),
('DB31364', 'BERHAMANE', 'HAYAT', 'DB31364@gmail.com', 'DB31364', 'stagiaire', NULL, 4, 0),
('DB31463', 'BOUKHCHACH', 'KHAOULA', 'DB31463@gmail.com', 'DB31463', 'stagiaire', NULL, 5, 0),
('DB31472', 'BAKIR', 'DOUAA', 'DB31472@gmail.com', 'DB31472', 'stagiaire', NULL, 6, 0),
('DB31588', 'BENABBOU', 'ZAKARIAE', 'DB31588@gmail.com', 'DB31588', 'stagiaire', NULL, 4, 0),
('DB31636', 'MECHICHE', ' IKRAME', 'DB31636@gmail.com', 'DB31636', 'stagiaire', NULL, 3, 0),
('DB31699', 'BREK', 'MAJDA', 'DB31699@gmail.com', 'DB31699', 'stagiaire', NULL, 6, 0),
('DB31716', 'ICHOU', 'YATTOU', 'DB31716@gmail.com', 'DB31716', 'stagiaire', NULL, 3, 0),
('DB31720', 'DAHABI', 'WISSAL', 'DB31720@gmail.com', 'DB31720', 'stagiaire', NULL, 6, 0),
('DB31733', 'AARAB', 'ABDEL KHALEK', 'DB31733@gmail.com', 'DB31733', 'stagiaire', NULL, 4, 0),
('DB31778', 'MARZOUK', 'MOUNA', 'DB31778@gmail.com', 'DB31778', 'stagiaire', NULL, 3, 0),
('DB32014', 'EL ARFAOUI', 'ISMAIL', 'DB32014@gmail.com', 'DB32014', 'stagiaire', NULL, 3, 0),
('DI7710', 'EL HAJJAJI', 'YOUNES', 'DI7710@gmail.com', 'DI7710', 'stagiaire', NULL, 6, 0),
('DJ46625', 'LOUIZI', 'SOUHAYL', 'DJ46625@gmail.com', 'DJ46625', 'stagiaire', NULL, 4, 0),
('DM2002', 'HADOUCHANE', 'YOUSSEF', 'DM2002@gmail.com', 'DM2002', 'stagiaire', NULL, 5, 0),
('DN44306', 'BENOUDIFA', 'EL MEHDI', 'DN44306@gmail.com', 'DN44306', 'stagiaire', NULL, 7, 1),
('DN46699', 'EL ABBADY', 'MAROUA', 'DN46699@gmail.com', 'DN46699', 'stagiaire', NULL, 2, 0),
('DN50482', 'BOURRAY', 'SALAH-EDDINE', 'DN50482@gmail.com', 'DN50482', 'stagiaire', NULL, 7, 1),
('EE998490', 'ZOUHAIR', 'AMIN', 'EE998490@gmail.com', 'EE998490', 'stagiaire', NULL, 6, 0),
('IA207802', 'OUDOUCH ', 'MERIEME ', 'IA207802@gmail.com', 'IA207802', 'stagiaire', NULL, 4, 0),
('IA213723', 'ACHNID', 'MOHAMED KHALIL', 'IA213723@gmail.com', 'IA213723', 'stagiaire', NULL, 6, 0),
('IA220200', 'ABOUTAYEB', 'HIBA', 'IA220200@gmail.com', 'IA220200', 'stagiaire', NULL, 5, 0),
('J541371', 'IDYOUNES', 'CHAIMA', 'J541371@gmail.com', 'J541371', 'stagiaire', NULL, 7, 1),
('JM103258', 'BAYAQOUR', 'ANAS', 'JM103258@gmail.com', 'JM103258', 'stagiaire', NULL, 2, 0),
('lc2319', 'elhaanai', 'mohamed', 'elhaanani3@gmail.com', 'lc2319', 'stagiaire', NULL, 52, 0),
('lc231933', 'elhayyani', 'isam', 'elhayyanisam@gmail.com', 'lc231933', 'formateur', NULL, NULL, 0),
('SH219025', 'BAALI', 'ABDELALI', 'SH219025@gmail.com', 'SH219025', 'stagiaire', NULL, 2, 0),
('UB86543', 'SEGHIR', 'JIHAN', 'UB86543@gmail.com', 'UB86543', 'stagiaire', NULL, 5, 0),
('VA141925', 'HADDIOUI', 'OTHMANE', 'VA141925@gmail.com', 'VA141925', 'stagiaire', NULL, 3, 0),
('VA152083', 'OUKESSOU', 'RACHID', 'VA152083@gmail.com', 'VA152083', 'stagiaire', NULL, 6, 0),
('VA154626', 'TAOUIL', 'ABOUBAKR', 'VA154626@gmail.com', 'VA154626', 'stagiaire', NULL, 2, 0),
('VA155381', 'ALLA', 'BELAL', 'VA155381@gmail.com', 'VA155381', 'stagiaire', NULL, 1, 0),
('VA156190', 'BELGHIJOU', 'YOUSSEF', 'VA156190@gmail.com', 'VA156190', 'stagiaire', NULL, 5, 0),
('VA159550', 'AGHEZZAF', 'YOUNESS', 'VA159550@gmail.com', 'VA159550', 'stagiaire', NULL, 1, 1),
('VM18941', 'ELRHZOUANI', 'CHADI', 'VM18941@gmail.com', 'VM18941', 'stagiaire', NULL, 1, 1),
('X449131', 'BENCHAKOUK', 'ZAKARIYA', 'X449131@gmail.com', 'X449131', 'stagiaire', NULL, 2, 1),
('Z673521', 'EL HAMOUCHI', 'ABDELLAH', 'Z673521@gmail.com', 'Z673521', 'stagiaire', NULL, 2, 1),
('Z677551', 'DAHBI', 'BASMA', 'Z677551@gmail.com', 'Z677551', 'stagiaire', NULL, 6, 0),
('ZG166772', 'BENKHOUJA', 'IMAD EDDINE', 'ZG166772@gmail.com', 'ZG166772', 'stagiaire', NULL, 1, 1);

-- --------------------------------------------------------

--
-- Structure de la table `user_exam`
--

CREATE TABLE `user_exam` (
  `iduser_exam` int(11) NOT NULL,
  `id_user` varchar(10) NOT NULL,
  `id_exam` int(11) NOT NULL,
  `score` decimal(20,2) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `user_exam`
--

INSERT INTO `user_exam` (`iduser_exam`, `id_user`, `id_exam`, `score`) VALUES
(42, 'CI2877', 72, '5.00'),
(43, 'DA106392', 72, '9.00'),
(44, 'VA154626', 72, '10.00'),
(45, 'DA102284', 72, '11.50'),
(46, 'DA107236', 72, '1.00'),
(47, 'CI1417', 72, '7.50'),
(48, 'CI2249', 72, '13.50'),
(49, 'SH219025', 72, '1.00'),
(50, 'DA105115', 72, '14.50'),
(51, 'DA104711', 72, '17.50'),
(52, 'DA105587', 72, '5.00'),
(53, 'DA106939', 72, '12.00'),
(54, 'JM103258', 72, '13.50'),
(55, 'D689477', 72, '10.00'),
(56, 'DA107633', 72, '13.00'),
(57, 'DA102626', 72, '6.50'),
(58, 'Z673521', 72, '20.00'),
(59, 'DB31001', 72, '14.00'),
(60, 'CN51111', 72, '17.50'),
(61, 'DA105449', 72, '11.50'),
(62, 'CB346790', 72, '13.00'),
(63, 'X449131', 72, '16.00'),
(64, 'DN46699', 72, '14.50'),
(65, 'DA104864', 72, '17.50'),
(66, 'DA107295', 73, '8.00'),
(67, 'DA107777', 73, '8.00'),
(68, 'DA104704', 74, '17.00'),
(69, 'DB30143', 74, '18.00'),
(70, 'DA102534', 74, '17.50'),
(71, 'DA108545', 74, '17.00'),
(72, 'DA106935', 74, '18.00'),
(73, 'DA101003', 74, '13.00'),
(74, 'DA109151', 74, '12.00'),
(75, 'DB30758', 74, '14.50'),
(76, 'DB30958', 74, '14.50'),
(77, 'DA102389', 74, '13.50'),
(78, 'DA105622', 74, '12.00'),
(79, 'CI459', 74, '9.00'),
(80, 'DA107777', 74, '12.00'),
(81, 'VM18941', 74, '11.50'),
(82, 'DA107295', 74, '11.00'),
(83, 'DA106571', 74, '8.00'),
(84, 'VA159550', 74, '18.00'),
(85, 'CI1143', 74, '13.50'),
(86, 'DA104117', 74, '9.00'),
(87, 'ZG166772', 74, '10.50'),
(88, 'CB355407', 74, '15.00'),
(89, 'CI3546', 74, '4.00'),
(90, 'DA107236', 75, '0.00'),
(91, 'SH219025', 75, '0.00'),
(92, 'DB30759', 75, '18.00'),
(93, 'CB346790', 76, '0.00'),
(94, 'VA154626', 76, '11.50'),
(95, 'JM103258', 76, '11.50'),
(96, 'DA105449', 76, '0.00'),
(97, 'Z673521', 76, '19.00'),
(98, 'DA102284', 76, '0.00'),
(99, 'CI2877', 76, '0.00'),
(100, 'D689477', 76, '12.00'),
(101, 'SH219025', 76, '15.00'),
(102, 'CN51111', 76, '17.00'),
(103, 'DB31001', 76, '15.00'),
(104, 'DA105587', 76, '0.00'),
(105, 'DA107236', 76, '12.00'),
(106, 'DA106939', 76, '11.00'),
(107, 'CI1417', 76, '11.50'),
(108, 'DA105115', 76, '11.00'),
(109, 'CI2249', 76, '15.50'),
(110, 'DA104864', 76, '13.00'),
(111, 'X449131', 76, '11.00'),
(112, 'DA107633', 76, '13.00'),
(113, 'DA104711', 76, '16.00'),
(114, 'DA104704', 76, '16.00'),
(115, 'DA102534', 76, '17.50'),
(116, 'DA108545', 76, '14.00'),
(117, 'DB30143', 76, '20.00'),
(118, 'DA101003', 76, '10.00'),
(119, 'DB30958', 76, '10.00'),
(120, 'DA109151', 76, '10.00'),
(121, 'DA106571', 76, '5.00'),
(122, 'DA105622', 76, '10.50'),
(123, 'VA159550', 76, '20.00'),
(124, 'CI459', 76, '10.00'),
(125, 'VM18941', 76, '10.00'),
(127, 'DA107777', 76, '9.00'),
(128, 'DA106935', 76, '16.00'),
(129, 'DB30758', 76, '11.00'),
(130, 'CI1143', 76, '10.50'),
(131, 'DA102389', 76, '11.00'),
(132, 'DA107295', 76, '10.00'),
(133, 'CB355407', 76, '14.00'),
(134, 'DA104117', 76, '11.50'),
(135, 'DB30759', 76, '12.50'),
(137, 'CI3546', 76, '6.00'),
(138, 'ZG166772', 76, '14.00'),
(139, 'DA106392', 77, '0.00'),
(140, 'CB346790', 77, '0.00'),
(141, 'DA102626', 77, '0.00'),
(142, 'DN46699', 77, '0.00'),
(143, 'DA104711', 78, '19.00'),
(144, 'DA102284', 78, '19.00'),
(145, 'CI2249', 78, '15.00'),
(146, 'Z673521', 78, '20.00'),
(147, 'VA154626', 78, '19.00'),
(148, 'D689477', 78, '20.00'),
(149, 'DA106392', 78, '16.00'),
(150, 'CN51111', 78, '20.00'),
(151, 'CI1417', 78, '20.00'),
(152, 'DA105115', 78, '20.00'),
(153, 'X449131', 78, '19.00'),
(154, 'SH219025', 78, '20.00'),
(155, 'CI2877', 78, '17.00'),
(156, 'JM103258', 78, '18.00'),
(157, 'DA105449', 78, '18.00'),
(158, 'DA107236', 78, '15.00'),
(159, 'DA104864', 78, '19.00'),
(160, 'DA105587', 78, '17.00'),
(161, 'DA106939', 78, '16.00'),
(162, 'DA107633', 78, '18.00'),
(163, 'DB31001', 78, '17.00'),
(164, 'DA102626', 78, '18.00'),
(165, 'CB346790', 78, '14.00'),
(166, 'DN46699', 78, '17.00'),
(167, 'DA104704', 79, '18.00'),
(168, 'DA102534', 79, '18.00'),
(169, 'CB355407', 79, '18.00'),
(170, 'DA105622', 79, '11.00'),
(171, 'DA101003', 79, '15.00'),
(172, 'DA108545', 79, '18.00'),
(173, 'VA159550', 79, '20.00'),
(174, 'DB30143', 79, '20.00'),
(175, 'CI3546', 79, '10.00'),
(176, 'DB30758', 79, '17.00'),
(177, 'DB30759', 79, '17.00'),
(178, 'VM18941', 79, '17.00'),
(179, 'DA109151', 79, '17.00'),
(180, 'DB30958', 79, '17.00'),
(181, 'CI1143', 79, '13.00'),
(182, 'DA102389', 79, '17.00'),
(183, 'CI459', 79, '10.00'),
(184, 'DA107295', 79, '13.00'),
(185, 'DA106935', 79, '18.00'),
(186, 'DA107777', 79, '16.00'),
(187, 'ZG166772', 79, '17.00'),
(188, 'DA104117', 79, '18.00'),
(189, 'DA105203', 80, '0.00'),
(190, 'DA104643', 80, '0.00'),
(191, 'DA104214', 80, '0.00'),
(192, 'DN44306', 80, '0.00'),
(193, 'DA103130', 80, '0.00'),
(194, 'DA102541', 80, '0.00'),
(195, 'DN50482', 80, '0.00'),
(196, 'DA103720', 80, '0.00'),
(197, 'DB30457', 80, '0.00'),
(198, 'da104723', 80, '0.00'),
(199, 'CB350275', 80, '0.00'),
(200, 'CB344902', 80, '0.00'),
(201, 'CB346449', 80, '0.00'),
(202, 'J541371', 80, '0.00'),
(203, 'CB345929', 80, '0.00'),
(204, 'CI1897', 80, '0.00'),
(205, 'DB29786', 80, '0.00'),
(206, 'CI2772', 80, '0.00'),
(207, 'DA100623', 80, '0.00'),
(208, 'DA102357', 80, '0.00'),
(209, 'DA106392', 81, '0.50'),
(210, 'DA105587', 81, '0.50'),
(211, 'DA107236', 81, '0.00'),
(212, 'DA102284', 81, '0.00'),
(213, 'SH219025', 81, '0.00'),
(214, 'CI2249', 81, '0.00'),
(215, 'JM103258', 81, '0.50'),
(216, 'CI2877', 81, '0.00'),
(217, 'VA154626', 81, '0.00'),
(218, 'D689477', 81, '0.00'),
(219, 'DA104864', 81, '0.50'),
(220, 'DA104711', 81, '16.00'),
(221, 'DA105449', 81, '0.00'),
(222, 'Z673521', 81, '17.00'),
(223, 'CI1417', 81, '0.50'),
(224, 'CN51111', 81, '0.50'),
(225, 'X449131', 81, '0.50'),
(226, 'DA102626', 81, '0.50'),
(227, 'CB346790', 81, '0.00'),
(228, 'DA107633', 81, '0.00'),
(229, 'DA105115', 81, '14.50'),
(230, 'DB31001', 81, '0.00'),
(231, 'DA106939', 81, '0.50'),
(232, 'DN46699', 81, '0.00'),
(233, 'DA101003', 82, '13.00'),
(234, 'DA102534', 82, '19.00'),
(235, 'VA159550', 82, '19.00'),
(236, 'DA104704', 82, '19.00'),
(237, 'DA109151', 82, '12.00'),
(238, 'DA108545', 82, '15.00'),
(239, 'VM18941', 82, '13.00'),
(240, 'DB30143', 82, '19.00'),
(241, 'DA105622', 82, '13.00'),
(242, 'DB30759', 82, '19.00'),
(243, 'DB30758', 82, '15.00'),
(244, 'DA107295', 82, '10.00'),
(245, 'DA107777', 82, '15.00'),
(246, 'DB30958', 82, '14.00'),
(247, 'CI1143', 82, '8.00'),
(248, 'CI3546', 82, '6.00'),
(249, 'DA102389', 82, '15.00'),
(250, 'ZG166772', 82, '0.00'),
(251, 'DA104117', 82, '12.00'),
(252, 'CB355407', 82, '15.00'),
(253, 'DA106935', 82, '16.00'),
(254, 'CN51111', 82, NULL);

-- --------------------------------------------------------

--
-- Structure de la table `user_filles`
--

CREATE TABLE `user_filles` (
  `id` int(11) NOT NULL,
  `iduser` varchar(50) DEFAULT NULL,
  `idexam` int(11) DEFAULT NULL,
  `path` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Structure de la table `user_option`
--

CREATE TABLE `user_option` (
  `id` int(11) NOT NULL,
  `id_user` varchar(10) DEFAULT NULL,
  `id_O` int(11) DEFAULT NULL,
  `is_corect` decimal(20,2) DEFAULT NULL,
  `id_exam` int(11) DEFAULT NULL,
  `idq` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `user_option`
--

INSERT INTO `user_option` (`id`, `id_user`, `id_O`, `is_corect`, `id_exam`, `idq`) VALUES
(156, 'DA104117', 322, '1.00', 72, 326),
(157, 'DA104117', 326, '1.00', 72, 327),
(158, 'DA104117', 331, '0.00', 72, 328),
(159, 'DN46699', 322, '1.00', 72, 326),
(160, 'DA106939', 322, '1.00', 72, 326),
(163, 'DA104711', 322, '1.00', 72, 326),
(164, 'DA107236', 322, '1.00', 72, 326),
(167, 'DA107633', 322, '1.00', 72, 326),
(170, 'CI2249', 326, '1.00', 72, 327),
(172, 'DA104864', 322, '1.00', 72, 326),
(173, 'DA107633', 326, '1.00', 72, 327),
(174, 'DA104711', 330, '1.00', 72, 328),
(176, 'DB31001', 330, '1.00', 72, 328),
(180, 'DB31001', 322, '1.00', 72, 326),
(181, 'DA107633', 330, '1.00', 72, 328),
(182, 'CB346790', 322, '1.00', 72, 326),
(184, 'CB346790', 326, '1.00', 72, 327),
(185, 'CB346790', 330, '1.00', 72, 328),
(187, 'CI2249', 322, '1.00', 72, 326),
(188, 'CI2249', 330, '1.00', 72, 328),
(192, 'DN46699', 330, '1.00', 72, 328),
(193, 'DN46699', 326, '1.00', 72, 327),
(197, 'D689477', 322, '1.00', 72, 326),
(198, 'CI2877', 327, '0.00', 72, 327),
(199, 'CI2877', 322, '1.00', 72, 326),
(200, 'CI2877', 330, '1.00', 72, 328),
(201, 'D689477', 330, '1.00', 72, 328),
(202, 'CI1417', 322, '1.00', 72, 326),
(203, 'CI1417', 328, '0.00', 72, 327),
(204, 'DA106392', 331, '0.00', 72, 328),
(205, 'DA106392', 329, '0.00', 72, 327),
(207, 'DA106392', 322, '1.00', 72, 326),
(211, 'VA154626', 322, '1.00', 72, 326),
(212, 'DA106939', 326, '1.00', 72, 327),
(213, 'VA154626', 330, '1.00', 72, 328),
(214, 'DA102626', 322, '1.00', 72, 326),
(215, 'DA105115', 322, '1.00', 72, 326),
(216, 'VA154626', 326, '1.00', 72, 327),
(218, 'DA102284', 322, '1.00', 72, 326),
(219, 'DA102284', 326, '1.00', 72, 327),
(222, 'DA105587', 322, '1.00', 72, 326),
(223, 'DA106939', 330, '1.00', 72, 328),
(224, 'DA105587', 326, '1.00', 72, 327),
(225, 'DA105587', 330, '1.00', 72, 328),
(226, 'CI1417', 330, '1.00', 72, 328),
(230, 'Z673521', 322, '1.00', 72, 326),
(231, 'Z673521', 326, '1.00', 72, 327),
(232, 'Z673521', 330, '1.00', 72, 328),
(233, 'DA102284', 331, '0.00', 72, 328),
(234, 'DA102284', 330, '0.00', 72, 328),
(235, 'DA102626', 332, '0.00', 72, 328),
(236, 'DA102626', 326, '1.00', 72, 327),
(239, 'D689477', 327, '0.00', 72, 327),
(243, 'DA104711', 327, '0.00', 72, 327),
(244, 'SH219025', 322, '1.00', 72, NULL),
(245, 'DA104864', 330, '1.00', 72, 328),
(246, 'JM103258', 330, '1.00', 72, 328),
(247, 'DA104864', 326, '1.00', 72, 327),
(251, 'X449131', 322, '1.00', 72, 326),
(252, 'DA105115', 326, '1.00', 72, 327),
(253, 'X449131', 328, '0.00', 72, 327),
(254, 'DA105115', 330, '1.00', 72, 328),
(256, 'CN51111', 322, '1.00', 72, 326),
(257, 'JM103258', 322, '1.00', 72, 326),
(259, 'CN51111', 326, '1.00', 72, 327),
(261, 'CN51111', 330, '1.00', 72, 328),
(265, 'X449131', 331, '0.00', 72, 328),
(266, 'JM103258', 327, '0.00', 72, 327),
(267, 'DA105449', 330, '1.00', 72, NULL),
(268, 'DB31001', 326, '1.00', 72, 327),
(273, 'DA106935', 334, '1.00', 74, 344),
(275, 'DA102534', 334, '1.00', 74, 344),
(277, 'DA106935', 340, '0.00', 74, 345),
(278, 'DA102534', 340, '0.00', 74, 345),
(279, 'DA104704', 334, '1.00', 74, 344),
(281, 'DA104704', 340, '0.00', 74, 345),
(283, 'DA104704', 343, '0.00', 74, 346),
(284, 'DA107295', 334, '1.00', 74, 344),
(285, 'ZG166772', 334, '1.00', 74, 344),
(286, 'DA108545', 334, '1.00', 74, 344),
(287, 'CI1143', 334, '1.00', 74, 344),
(289, 'DB30143', 334, '1.00', 74, 344),
(290, 'CB355407', 335, '0.00', 74, 344),
(297, 'DA109151', 334, '1.00', 74, 344),
(298, 'DA101003', 334, '1.00', 74, 344),
(299, 'DA101003', 338, '1.00', 74, 345),
(300, 'DA101003', 342, '1.00', 74, 346),
(302, 'DA109151', 342, '1.00', 74, 346),
(303, 'DA109151', 338, '1.00', 74, 345),
(307, 'DA102389', 335, '0.00', 74, 344),
(310, 'DA108545', 340, '0.00', 74, 345),
(311, 'DB30143', 340, '0.00', 74, 345),
(312, 'DA106935', 342, '1.00', 74, 346),
(313, 'ZG166772', 340, '0.00', 74, 345),
(314, 'DA104117', 334, '1.00', 74, 344),
(318, 'DA104117', 340, '0.00', 74, 345),
(319, 'DA108545', 343, '0.00', 74, 346),
(320, 'ZG166772', 343, '0.00', 74, 346),
(321, 'VA159550', 334, '1.00', 74, 344),
(322, 'VA159550', 340, '0.00', 74, 345),
(323, 'VA159550', 344, '0.00', 74, 346),
(324, 'DA102389', 344, '0.00', 74, 346),
(326, 'DA102389', 340, '0.00', 74, 345),
(327, 'VM18941', 335, '0.00', 74, 344),
(328, 'VM18941', 338, '1.00', 74, 345),
(329, 'VM18941', 342, '1.00', 74, 346),
(330, 'DB30143', 344, '0.00', 74, 346),
(331, 'CI3546', 334, '1.00', 74, 344),
(332, 'CI3546', 340, '0.00', 74, 345),
(334, 'DB30958', 342, '1.00', 74, 346),
(335, 'DA105622', 335, '0.00', 74, 344),
(339, 'DA105622', 338, '1.00', 74, 345),
(341, 'DA105622', 342, '1.00', 74, 346),
(342, 'DA107295', 340, '0.00', 74, 345),
(347, 'CI3546', 344, '0.00', 74, 346),
(349, 'DA107777', 342, '1.00', 74, 346),
(358, 'CI1143', 340, '0.00', 74, 345),
(359, 'CI1143', 343, '0.00', 74, 346),
(360, 'DA102534', 343, '0.00', 74, 346),
(361, 'DB30958', 334, '1.00', 74, 344),
(363, 'DB30958', 338, '1.00', 74, 345),
(364, 'DB30758', 334, '1.00', 74, 344),
(365, 'DB30758', 338, '1.00', 74, 345),
(366, 'DB30758', 342, '1.00', 74, 346),
(367, 'CI459', 342, '1.00', 74, 346),
(368, 'CI459', 334, '1.00', 74, 344),
(369, 'CI459', 340, '0.00', 74, 345),
(375, 'DA107777', 335, '0.00', 74, 344),
(376, 'DA107777', 338, '1.00', 74, 345),
(377, 'DA106571', 334, '1.00', 74, 344),
(379, 'DA106571', 343, '0.00', 74, 346),
(380, 'DA106571', 340, '0.00', 74, 345),
(381, 'DA107295', 342, '1.00', 74, 346),
(382, 'DA104117', 342, '1.00', 74, 346),
(383, 'CB355407', 342, '1.00', 74, 346),
(384, 'CB355407', 338, '1.00', 74, 345),
(385, 'VA155381', 322, '0.00', 72, 326),
(386, 'VA155381', 324, '0.00', 72, 326),
(387, 'VA155381', 329, '0.00', 72, 327),
(388, 'VA155381', 326, '0.00', 72, 327),
(412, 'D689477', 347, '0.00', 81, NULL),
(417, 'CI1417', 354, '0.50', 81, NULL),
(442, 'DN46699', 361, '0.00', 81, NULL),
(452, 'DA107236', 353, '0.00', 81, NULL),
(456, 'DA102626', 358, '0.50', 81, NULL),
(469, 'DA106392', 358, '0.50', 81, NULL),
(485, 'CI2249', 361, '0.00', 81, NULL),
(495, 'DA105587', 358, '0.50', 81, NULL),
(499, 'DA104864', 358, '0.50', 81, NULL),
(510, 'JM103258', 358, '0.50', 81, NULL),
(511, 'DA104711', 351, '0.00', 81, NULL),
(513, 'CI2877', 352, '0.00', 81, NULL),
(514, 'VA154626', 360, '0.00', 81, NULL),
(515, 'CN51111', 346, '0.50', 81, NULL),
(516, 'DB31001', 353, '0.00', 81, NULL),
(522, 'DA107633', 353, '0.00', 81, NULL),
(525, 'CB346790', 353, '0.00', 81, NULL),
(526, 'Z673521', 353, '0.00', 81, NULL),
(527, 'X449131', 358, '0.50', 81, NULL),
(531, 'DA105115', 358, '0.50', 81, NULL),
(535, 'DA106939', 354, '0.50', 81, NULL);

-- --------------------------------------------------------

--
-- Structure de la table `user_rep`
--

CREATE TABLE `user_rep` (
  `id` int(11) NOT NULL,
  `iduser` varchar(50) NOT NULL,
  `id_Q` int(11) NOT NULL,
  `rep` longtext DEFAULT NULL,
  `note` float DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Déchargement des données de la table `user_rep`
--

INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(30, 'CN51111', 330, '    def __str__(self):\r\n        return f&amp;quot;numerodeserie ={self._numerodeserie} | prixhorstaxe ={self._prixhorstaxe} | quantiteenstock ={self._quantiteenstock} | quantiteminimale ={self._quantiteminimale}&amp;quot;', 1),
(31, 'JM103258', 329, 'class Article:\r\n    def __init__(self,n,p,q,qm):\r\n        self._nsérie = n\r\n        self._prixhtaxe =p\r\n        self._quantitésk = q\r\n        self._qmin =  qm\r\n', 1),
(32, 'JM103258', 330, '    def __str__(self):\r\n        return f&amp;#039;{self._nsérie} | {self._qmin} | {self._quantitésk} | {self._prixhtaxe}&amp;#039;', 1),
(33, 'DN46699', 329, 'class Article:\r\n    def __init__(self,numserie,prixht,quantitestock,quantitemin):\r\n        self._numserie=numserie\r\n        self._prixht=prixht\r\n        self._quantitestock=quantitestock\r\n        self._quantimin=quantitemin', 1),
(34, 'VA154626', 329, 'class Article:\r\n\r\n    def __init__(self,ns,pht,qte,qtem):\r\n        self.__numérodesérie = ns\r\n        self.__prixhtaxe = pht\r\n        self.__qte = qte\r\n        self.__qtemin = qtem\r\n\r\n    def __init__(self):\r\n        pass', 1),
(35, 'DA106392', 329, 'class Article:\r\n    def __init__(self, numero_serie, prix_hors_taxe, quantite_stock, quantite_minimale):\r\n        self.numero_serie = numero_serie\r\n        self.prix_hors_taxe = prix_hors_taxe\r\n        self.quantite_stock = quantite_stock\r\n        self.quantite_minimale = quantite_minimale\r\n\r\n    @classmethod\r\n    def create_empty_article(cls):\r\n        return cls(None, 0.0, 0, 0)\r\n\r\n    def s_approvisionner(self, qte):\r\n\r\n        self.quantite_stock += qte\r\n\r\n    def achat(self, qte):\r\n\r\n        if qte &amp;lt;= self.quantite_stock:\r\n            self.quantite_stock -= qte\r\n            if self.quantite_stock &amp;lt; self.quantite_minimale:\r\n                print(f&amp;quot;Attention : La quantité en stock ({self.quantite_stock}) est inférieure à la quantité minimale ({self.quantite_minimale}).&amp;quot;)\r\n        else:\r\n            print(&amp;quot;Erreur : La quantité demandée est supérieure à la quantité en stock.&amp;quot;)\r\n\r\n    def __str__(self):\r\n        return f&amp;quot;Article {self.numero_serie} - Prix: {self.prix_hors_taxe} € - Stock: {self.quantite_stock} unités - Quantité minimale: {self.quantite_minimale} unités&amp;quot;\r\n\r\n', 1),
(36, 'DA105115', 329, 'class Article :\r\n    def __init__(self,ns=None,pht=None,qes=None,qm=None):\r\n        self._numéro_de_série=ns\r\n        self._prix_hors_taxe=pht\r\n        self._quantité_en_stock=qes\r\n        self._quantité_minimal=qm\r\n', 1),
(37, 'DB31001', 329, 'class Article:\r\n    def __init__(self,numseri,prixhotax,qualitestock,quantitimini):\r\n        self._numsiri=numseri\r\n        self._prixhortax=prixhotax\r\n        self._qualitsetock=qualitestock\r\n        self._quantitiminimal=quantitimini', 1),
(38, 'DN46699', 330, '    def __str__(self):\r\n        return(str(self._numserie))+(str(self._prixht))+(str(self._quantimin))+(str(self._quantitestock))', 1),
(39, 'DA104711', 330, '  def __str__(self):\r\n        infos = &quot;&quot;\r\n        infos+=&quot;NUMSERIE: &quot; + str(self._numserie )+&quot;| &quot;\r\n        infos += &quot;PRIXHORTAXS: &quot; + str(self._prixhorstax) + &quot;| &quot;\r\n        infos += &quot;QANTITESTOCK: &quot; + str(self._qantitestock) + &quot;| &quot;\r\n        infos += &quot;QANTITE_MINIMAL: &quot; + str(self._qantiteminimal) + &quot;| &quot;\r\n        return infos', 1),
(40, 'CI2249', 330, ' def __str__(self):\r\n        return f&quot;{self.__numeroDeSerie}-{self.__prixHorsTax}-{self.__quantiteMinimal}&quot;', 1),
(41, 'D689477', 329, 'class Article  :\r\n    _quantiteminimal = None\r\n    _constructeur = None\r\n    def __init__(self,nu,pr,qs):\r\n        self._numeroserie = nu\r\n        self._prixhorstaxe = pr\r\n        self._quantitedestock = qs\r\n        self._quantiteminimal = Article._quantiteminimal\r\n        self._constructeur = Article._constructeur', 1),
(42, 'CI2249', 329, 'from abc import ABC,abstractmethod\r\nfrom datetime import date\r\nclass Article:\r\n    def __init__(self,n,pht,qtm):\r\n        self.__numeroDeSerie = n\r\n        self.__prixHorsTax = pht\r\n        self.__quantiteMinimal = qtm', 1),
(43, 'VA154626', 330, '    def __str__(self):\r\n        info = &quot; &quot;\r\n        info + &quot;num de serie&quot; + str(self.__numérodesérie) + &quot;//&quot;\r\n        info + &quot;prix hors taxe&quot; + str(self.__prixhtaxe) + &quot;//&quot;\r\n        info + &quot;quantity&quot; + str(self.__qte) + &quot;//&quot;\r\n        info + &quot;quantity minimal&quot; + str(self.__qtemin) + &quot;//&quot;', 1),
(44, 'D689477', 330, '    def __str__(self):\r\n        return f&quot;{self._constructeur} | {self._prixhorstaxe} | {self._quantiteminimal} | {self._numeroserie} | {self._quantitedestock}&quot;\r\n', 1),
(45, 'DA107633', 330, ' def __str__(self):\r\n        return f&quot;({ self.__numerodeserie}+/n { self.__prixhorstaxe}+/n{ self.__quantiteenstock}+/n{ self.__quantiteminimale})&quot;', 1),
(46, 'DA107633', 329, 'from datetime import date\r\nclass Article :\r\n    numerodeserie=None\r\n    prixhorstaxe=None\r\n    quantiteenstock=None\r\n    quantiteminimale=None\r\n    def __init__(self,ns,pht,qs,qm):\r\n        self.__numerodeserie = n\r\n        self.__prixhorstaxe = pht\r\n        self.__quantiteenstock = qs\r\n        self.__quantiteminimale = qm', 1),
(47, 'JM103258', 331, ' def Sapprovisionner(self,qte):\r\n        return self._quantitésk += qte\r\n    def Achat(self,qte):\r\n        return self._quantitésk -= qte', 2),
(48, 'DA105115', 330, '    def __str__(self):\r\n       info=&amp;#039;&amp;#039;\r\n       info+=&amp;#039;numéro_de_série&amp;#039;+ self._numéro_de_série\r\n       info+=&amp;#039;prix_hors_taxe&amp;#039;+self._prix_hors_taxe\r\n       info+=&amp;#039;quantité_en_stock&amp;#039;+self._quantité_en_stock\r\n       info+=&amp;#039;quantité_minimal&amp;#039;+self._quantité_minimal', 1),
(49, 'DA105115', 332, '\r\nclass Habit(Article):\r\n    def __init__(self,ns=None,pht=None,qes=None,qm=None,col=&#039;rouge&#039;,tal=45):\r\n        Article.__init__(self,ns=None,pht=None,qes=None,qm=None)\r\n        self.couleur=col\r\n        self.taille=tal\r\n', 2),
(50, 'VA154626', 333, '    def __str__(self):\r\n        info = &quot; &quot;\r\n        info + &quot;taille&quot; + self.__taille + &quot;//&quot;\r\n        info + &quot;color&quot; + self.__color + &quot;//&quot;', 0.5),
(51, 'DA104711', 331, '   def saprovisionner(self,qte):\r\n         self._qantitestock =+ qte\r\n    def Achat(self,qte):\r\n        if qte &amp;amp;lt;= self._qantitestock:\r\n              self._qantitestock =- qte\r\n        return &amp;amp;quot; Si la quantité qui reste est inférieure à la quantité minimale on avise par un message&amp;amp;quot;\r\n', 3.5),
(52, 'CI1417', 330, '    def __str__(self):\r\n        return self._NumeroSerie + &quot; &quot;+ self._PrixHorsTaxe + &quot; &quot;+ self._QuantiteStock + &quot;&quot; + self._QuantiteMini', 1),
(53, 'CI1417', 329, 'class article:\r\n    def __init__(self,nmrs=None,pht=None,qs=None,qm=None):\r\n        self._NumeroSerie = nmrs\r\n        self._PrixHorsTaxe = pht\r\n        self._QuantiteStock = qs\r\n        self._QuantiteMini = qm', 1),
(54, 'CB346790', 330, '   def __str__(self):\r\n        return f&quot;({self._numérosérie}+/n{ self._prixhorstaxe}+/n{ self._quantitéstock}+/n{self._quantitéminimale}+/n)&quot;\r\n', 1),
(55, 'CB346790', 329, 'class Article:\r\n    _numérosérie=None\r\n    _prixhorstaxe=None\r\n    _quantitéstock = None\r\n    _quantitéminimale= None\r\n  def __init__(self,ns,pht,qs,qm):\r\n        self._numérosérie =ns\r\n        self._prixhorstaxe=pht\r\n        self._quantitéstock=qs\r\n        self._quantitéminimale =qm', 1),
(56, 'DA107633', 331, ' @staticmethod\r\n    def Sapprovisionner(self,qte):\r\n        self.__quantiteenstock = qte + self.__quantiteenstock \r\n @staticmethod\r\n    def Achat (self,qte):\r\n        if  self.__quantiteenstock = self.__quantiteenstock - qte\r\n           if self.__quantiteenstock &gt;= self.__quantiteminimale\r\n            return f&quot;(bonne achat.....)&quot;\r\n           else self.__quantiteenstock &lt; self.__quantiteminimale\r\n               return f&quot;(achat impossible!!!)&quot;\r\n', 3),
(57, 'DA104864', 331, '      def approvisionner(self, qte):\r\n        if qte &amp;gt;=0:\r\n            self._quantitéenstock = self._quantitéenstock + qte\r\n\r\n    def achat(self, qte):\r\n        if self._quantitéminimale &amp;lt; qte:\r\n            print(f&amp;quot;la cantité minimale {self._uantitéminimale} et inferieur de la {qte}&amp;quot;)\r\n        else:\r\n            self._quantitéenstock = self._quantitéenstock - qte', 3.5),
(58, 'DN46699', 331, '        def afisionnerqte (self):\r\n            self._quantitestock+=self._qte\r\n            return self._quantitestock\r\n    def Achat (self):\r\n        self._quantitestock-=self._qtea\r\n        Si self._quantitestock &lt;self._quantimin\r\n        print(&quot;qte insufisant&quot;)\r\n        else:\r\n        return self._quantitestock\r\n        \r\n', 3),
(59, 'DA104864', 330, ' \r\n    def __str__(self):\r\n        return f&quot;{self._numerodeserie}, {self._prixhorstaxe},{self._quantitéenstock },{self._quantitéminimale}&quot;', 1),
(60, 'JM103258', 332, 'class Habit(Article) :\r\n    def __init__(self,n,p,q,qm ,c ,t):\r\n        self._couleur = c\r\n        self._taille = t\r\n        super().__init__(n,p,q,qm )\r\n        ', 2),
(61, 'DA105115', 333, ' def __str__(self):\r\n        info=&#039;&#039;\r\n        info += &#039;couleur :&#039; + self.couleur\r\n        info += &#039;la taille :&#039; + self.taille', 1),
(62, 'DA104864', 329, 'class Article:\r\n    def __init__(self, ns=None, pht=None, qe=None, qm=None):\r\n        self._numerodeserie = ns\r\n        self._prixhorstaxe = pht\r\n        self._quantitéenstock = qe\r\n        self._quantitéminimale = qm', 1),
(63, 'DA102626', 329, 'class Articl:\r\n    def __init__ (self,num,prx,qts,qtm):\r\n        self.numero=num\r\n        self.prix=prx\r\n        self.qstok=qts\r\n        self.qminimal=qtm\r\n', 1),
(64, 'JM103258', 333, '    def __str__(self):\r\n        return f&amp;#039;{self._couleur} | {self._taille} | &amp;#039;\r\n', 1),
(65, 'VA154626', 332, 'from classes.article import Article\r\nclass Habit(Article):\r\n\r\n    def __init__(self, t, c):\r\n        self.__taille = t\r\n        self.__color = c', 1),
(66, 'D689477', 332, 'from Classes.Article import Article\r\nclass Hait(Article):\r\n    def __init__(self,co,ta,nu,pr,qs):\r\n        self._couleur = co\r\n        self._taille  = ta\r\n        Article.__init__(self,nu,pr,qs)', 2),
(67, 'DA104711', 332, 'class habit(Article):\r\n    def __init__(self,nms,prtx,qntstk,mn,tl,colr):\r\n        super().__init__(nms,prtx,qntstk,mn)\r\n        self.__taille = tl\r\n        self.__coloure = colr\r\n', 2),
(68, 'DB31001', 331, '    def saprovitioner(self,qte):\r\n        self._qualitsetock +=qte\r\n    def sachat(self,qte):\r\n        if qte &amp;gt; self.quantitiminimal:\r\n            print( inpoussible )\r\n            \r\n        else:\r\n            self._qualitsetock -= qte\r\n', 3),
(69, 'DA104864', 332, 'class Habit(Article):\r\n    def __init__(self, ns=None, pht=None, qe=None, qm=None, c=None, t=None):\r\n        super().__init__(ns, pht, qe, qm)\r\n        self.couleur = c\r\n        self.taille = t', 2),
(70, 'DA106392', 330, 'class Article:\r\n    def __init__(self, numero_serie, prix_hors_taxe, quantite_stock, quantite_minimale):\r\n        self.numero_serie = numero_serie\r\n        self.prix_hors_taxe = prix_hors_taxe\r\n        self.quantite_stock = quantite_stock\r\n        self.quantite_minimale = quantite_minimale\r\n\r\n    @classmethod\r\n    def create_empty_article(cls):\r\n        return cls(numero_serie : None, prix_hors_taxe : 0.0, quantite_stock\r\n : 0, quantite_minimale : 0)\r\n\r\n    def __str__(self):\r\n        return f&amp;amp;amp;amp;amp;quot;Article {self.numero_serie} - Prix: {self.prix_hors_taxe} € - Stock: {self.quantite_stock} unités - Quantité minimale: {self.quantite_minimale} unités&amp;amp;amp;amp;amp;quot;\r\n\r\n\r\narticle1 = Article(numero_serie : &amp;amp;amp;quot;123456&amp;amp;amp;quot;,  prix_hors_taxe : 29.99, quantite_stock\r\n : 50, quantite_minimale : 10)\r\narticle2 = Article.create_empty_article()\r\n\r\nprint(article1)\r\nprint(article2)', NULL),
(71, 'VA154626', 334, 'from classes.article import Article\r\n\r\nclass Electroménager(Article):\r\n    def __init__(self,p,dg):\r\n        self.__piods = p\r\n        self.__dureegarant = dg', 1),
(72, 'DA104864', 333, ' def __str__(self):\r\n        return f&quot;{self._numerodeserie}, {self._prixhorstaxe},{self._quantitéenstock},{self._quantitéminimale},{self._taille},{self._couleur}&quot;\r\n', 1),
(73, 'CI2249', 331, ' def Sapprovisionner(self,qte):\r\n        self._quantiteEnStock += qte\r\n    def achat(self,qte):\r\n        self._quantiteEnStock -= qte\r\n        if self._quantiteEnStock &lt; self._quantiteMinimal :\r\n            print(&amp;quot;quantite insuffisante&amp;quot;)', 3),
(74, 'CN51111', 331, '    def Sapprovisionner(self,qd):\r\n        self._quantiteenstock += qd\r\n    def Achat(self,qa):\r\n        if (self._quantiteenstock - qa) &amp;gt; self._quantiteminimale:\r\n            self._quantiteenstock-=qa\r\n            return &amp;quot;bon achat&amp;quot;\r\n        elif (self._quantiteenstock - qa) &amp;lt; self._quantiteminimale:\r\n            return &amp;quot;la quantite n est pa valable&amp;quot;', 4),
(75, 'DA104711', 333, ' def __str__(self):\r\n       return super().__str__()  +&quot;TAILLE: &quot;+str(self.__taille)+&quot;|&quot;+&quot;COLOURE: &quot;+self.__coloure', 1),
(76, 'DA104864', 334, 'class Electroménager:\r\n    def __init__(self, ns=None, pht=None, qe=None, qm=None, p, dg):\r\n        super().__init__(ns, pht, qe, qm)\r\n        self.poids = p\r\n        self.duréedegarantie = dg', 1),
(77, 'DA106392', 331, 'class Article:\r\n    def __init__(self, numero_serie, prix_hors_taxe, quantite_stock, quantite_minimale):\r\n        self.numero_serie = numero_serie \r\n        self.prix_hors_taxe = prix_hors_taxe \r\n        self.quantite_stock = quantite_stock \r\n        self.quantite_minimale = quantite_minimale \r\n\r\n    @classmethod\r\n    def create_empty_article(cls):\r\n        return cls(numero_serie : None, prix_hors_taxe : 0.0, quantite_stock : 0, quantite_minimale : 0)\r\n\r\n    def s_approvisionner(self, qte):\r\n     \r\n        self.quantite_stock += qte\r\n\r\n    def achat(self, qte):\r\n      \r\n        if qte &amp;amp;amp;lt;= self.quantite_stock:\r\n            self.quantite_stock -= qte\r\n            if self.quantite_stock &amp;amp;amp;lt; self.quantite_minimale:\r\n                print(f&amp;amp;amp;quot;Attention : La quantité en stock ({self.quantite_stock}) est inférieure à la quantité minimale ({self.quantite_minimale}).&amp;amp;amp;quot;)\r\n        else:\r\n            print(&amp;amp;amp;quot;Erreur : La quantité demandée est supérieure à la quantité en stock.&amp;amp;amp;quot;)\r\n\r\n    def __str__(self):\r\n        return f&amp;amp;amp;quot;Article {self.numero_serie} - Prix: {self.prix_hors_taxe} € - Stock: {self.quantite_stock} unités - Quantité minimale: {self.quantite_minimale} unités&amp;amp;amp;quot;\r\n\r\n', 4),
(78, 'CN51111', 332, 'class Habit(Article):\r\n    def __init__(self,ns,pht,qs,qm,color=&quot;rouge&quot;,taille=23):\r\n        super().__init__(ns,pht,qs,qm)\r\n        self.color = color\r\n        self.taille =taille\r\n', 2),
(79, 'CN51111', 333, '\r\n    def __str__(self):\r\n        return (f&quot;numerodeserie ={self._numerodeserie} | prixhorstaxe ={self._prixhorstaxe} &quot;\r\n                f&quot;| quantiteenstock ={self._quantiteenstock} | quantiteminimale ={self._quantiteminimale} &quot;\r\n                f&quot;| le color ={self.color} | la taille ={self.taille}&quot;)', 1),
(80, 'DA104711', 334, 'class  Electromenager (Article):\r\n    def __init__(self,nms,prtx,qntstk,mn,poid,dtmois):\r\n        super().__init__(nms,prtx,qntstk,mn)\r\n        self.__poids = poid\r\n        self.__duree_de_garantie = dtmois', 1),
(81, 'DN46699', 332, 'class Habit(Article):\r\n    def __int__(self,numserie,prixht,quantitestock,quantitemin,qte,qtea,taille,couleur):\r\n        self._couleur=couleur\r\n        self._taille=taille\r\n        super().__int__(numserie,prixht,quantitestock,quantitemin,qte,qtea)', 2),
(82, 'CN51111', 334, 'class Electromenager(Article):\r\n    def __init__(self,ns,pht,qs,qm,poid,dg):\r\n        super().__init__(ns,pht,qs,qm)\r\n        self.poids =poid\r\n        self.dure_d_garantie = dg', 1),
(83, 'CB346790', 331, '  @staticmethod\r\n    def Sapprovisionne(self,qte):\r\n        self._quantitéstock= qte+ self._quantitéstock\r\n    @staticmethod\r\n    def  Achat(self,qte):\r\n        self._quantitéstock = self._quantitéstock - qte\r\n            if self.__quantitéstock &gt;= self._quantitéminimale\r\n            return f&quot;(Donne Acha)&quot;\r\n            else self.__quantitéstock &lt; self._quantitéminimale\r\n                return f&quot;(Acha immposible!)&quot;', 3),
(84, 'D689477', 333, '    def __str__(self,):\r\n        return f&quot;{self._couleur} | {self._taille} | {self.__str__()}&quot;', 0.5),
(85, 'CI1417', 332, 'class Habit(article):\r\n    def __init__(self,clr,tl):\r\n        self._couleur = clr\r\n        self._taille = tl\r\n        super().__init__(nmrs=None,pht=None,qs=None,qm=None)', 2),
(86, 'DA102284', 329, 'class Article :\r\n    def __init__(self, numéro_de_série = None , prix_ho = None , quantite_stock = None ,quantite_mini = None):\r\n        self._numéro_de_série = numéro_de_série\r\n        self._prix_hors_taxe =  prix_ho\r\n        self._la_quantité_en_stock =  quantite_stock\r\n        self._quantite_minimale = quantite_mini', 1),
(87, 'CI2249', 332, 'class Habit(Article):\r\n    def __init__(self,cl,t,n,pht,qtm,qtes):\r\n        super().__init__(n=n, pht=pht, qtm=qtm, qtes=qtes)\r\n        self._couleur = cl\r\n        self._taille = t', 2),
(88, 'DA105115', 334, '    def __init__(self,ns=None,pht=None,qes=None,qm=None,poid=None,dg=None):\r\n        Article.__init__(self,ns=None,pht=None,qes=None,qm=None)\r\n        self.__poid=poid\r\n        self.__durée_de_garantie=dg', 1),
(89, 'DA105115', 331, '    def method(self,qte):\r\n        if qte &gt;=self._quantité_en_stock:\r\n            qte+=self._quantité_en_stock\r\n        else:\r\n            print(&#039;imposible&#039;)\r\n    def methodtraiter(self,qte):\r\n        if qte &gt;=self._quantité_minimal:\r\n            qte-==self._quantité_minimal\r\n        else:\r\n            print(&#039;imposible&#039;)', 3),
(90, 'CI1417', 333, '    def __str__(self):\r\n        return self._couleur + &quot;&quot; + self._taille', 0.5),
(91, 'JM103258', 334, '    def garantie(self):\r\n        return date.today().year / 365.25\r\nclass Electroménager(Habit):\r\n    def __init__(self,n,p,q,qm ,c ,t,pl,po,d):\r\n        self._plus =pl\r\n        self._poids =po\r\n        self._durée = d\r\n        super().__init__(n,p,q,qm ,c ,t)', 1),
(92, 'VA154626', 336, '    def __str__(self):\r\n        info = &amp;quot; &amp;quot;\r\n        info + &amp;quot;poids&amp;quot; + self.__piods + &amp;quot;//&amp;quot;\r\n        info + &amp;quot;duree de garanti&amp;quot; + self.__dureegarant + &amp;quot;//&amp;quot;', 1),
(93, 'DN46699', 333, '    def __str__(self):\r\n        super().__str__()+self._taille+self._couleur', 1),
(94, 'D689477', 331, ' def Sapprovisionner(self,donnee):\r\n        return self._quantitedestock + donnee\r\n    def Achat(self,article ):\r\n        if self._quantiteminimal &gt; article :\r\n            return self._quantiteminimal - 1\r\n        return &quot;nest pas votre quantite&quot;\r\n', 2),
(95, 'DA102626', 330, ' def __str__(self):\r\n        return ((self._numero)|(self._prix)|(self._qstok)|(self._qminimal))', 1),
(96, 'CI2249', 333, '    def __str__(self):\r\n        return f&quot;{self._numeroDeSerie}-{self._prixHorsTax}-{self._quantiteMinimal}-{self._couleur}-{self._taille}&quot;', 0.5),
(97, 'Z673521', 334, 'class Electromenager(Article):\r\n    def __init__(self, poids, duree, num=None, pt=None, qs=None, qm=None):\r\n        Article.__init__(self, num, pt, qs, qm)\r\n        self.__poids = poids\r\n        self.__duree = duree', 1),
(98, 'JM103258', 335, 'def datefinGarantie (self):\r\nreturn date.today().year \r\n', 1),
(99, 'DA104864', 336, '     def __str__(self):\r\n        return f&quot;{self._numerodeserie}, {self._prixhorstaxe},{self._quantitéenstock},{self._quantitéminimale},{self._taille},{self._couleur},{self._poids},{self._duréedegarantie},{self.datefingarantie()}&quot;', 1.5),
(100, 'DA106392', 332, 'class Article:\r\n    def __init__(self, nom, prix):\r\n        self.nom = nom\r\n        self.prix = prix\r\n\r\n\r\nclass Habit(Article):\r\n    def __init__(self, nom, prix, couleur, taille):\r\n\r\n        super().__init__(nom, prix)\r\n\r\n\r\n        self.couleur = couleur\r\n        self.taille = taille\r\n\r\n        class Article:\r\n            def __init__(self, nom, prix):\r\n                self.nom = nom\r\n                self.prix = prix\r\n\r\n        class Habit(Article):\r\n            def __init__(self, nom, prix, couleur, taille):\r\n\r\n                super().__init__(nom, prix)\r\n\r\n                \r\n                self.couleur = couleur\r\n                self.taille = taille\r\n\r\n\r\n', 2),
(101, 'DA102284', 330, '    def __str__(self):\r\n        return super().__str__()+&quot;  la taille : &quot;+str(self._taille)+&quot;  la couleur est :&quot;+self._couleur\r\n    ', 1),
(102, 'CN51111', 336, '    def __str__(self):\r\n        return (f&amp;quot;numerodeserie ={self._numerodeserie} | prixhorstaxe ={self._prixhorstaxe} &amp;quot;\r\n                f&amp;quot;| quantiteenstock ={self._quantiteenstock} | quantiteminimale ={self._quantiteminimale} &amp;quot;\r\n                f&amp;quot;| le poids ={self.poids} | dure_d_garantie ={self.dure_d_garantie}&amp;quot;)', 1),
(103, 'CI2249', 334, 'class Elctromenager(Article):\r\n    def __init__(self,n,pht,qtm,qtes):\r\n        super().__init__(n=n, pht=pht, qtm=qtm, qtes=qtes)\r\n    \r\n    def __int__(self,pd,D):\r\n        self._poid = pd\r\n        self._dureeEnMois = D\r\n    ', 1),
(104, 'DN46699', 334, 'class Electromenager(Article):\r\n    def __int__(self,numserie,prixht,quantitestock,quantitemin,qte,qtea,poids,duree):\r\n        super().__int__(numserie, prixht, quantitestock, quantitemin, qte, qtea)\r\n        self._poids=poids\r\n        self._duree=duree', 1),
(105, 'D689477', 334, 'from Classes.Article import Article\r\n\r\nclass Electroménager(Article):\r\n    def __init__(self,po,du):\r\n        self._poids = po\r\n        self._durée = du\r\n        Article.__init__(self,nu,pr,qs)\r\n', 1),
(106, 'DA102284', 331, '    def Sapprovisionner (self ,qte) :\r\n        self._la_quantite_en_stock += qte\r\n\r\n    def Achat (self , qte) :\r\n        if (self._la_quantite_en_stock &gt; qte):\r\n            quantiter_rester=self._la_quantite_en_stock -= qte\r\n                return  quantiter_rester\r\n        if ( quantiter_rester&lt; self._quantite_minimale) :\r\n                return &quot; la quntiter est un sufisiont&quot;\r\n', 3),
(107, 'DA106939', 329, 'class Article:\r\n    _numeroSerie=None\r\n    _prixHorsTaxe=None\r\n    _quantiteStock=None\r\n    _quantiteMin=None\r\n    def __init__(self,nS,pT,qS,qM):\r\n        self._numeroSerie = nS\r\n        self._prixHorsTaxe = pT\r\n        self._quantiteStock = qS\r\n        self._quantiteMin = qM', 1),
(108, 'DA102284', 332, '  class Habit (Article) :\r\n    def __init__(self, numero_de_serie = None , prix_ho = None , quantite_stock = None ,quantite_mini = None , taille = None ,couleur = None):\r\n        super().__init__(numero_de_serie  , prix_ho , quantite_stock  ,quantite_mini )\r\n        self._taille = taille\r\n        self._couleur = couleur', 2),
(109, 'DA106939', 330, '  def __str__(self):\r\n        return f&quot;{self._numeroSerie}+\\n+ {self._prixHorsTaxe}+\\n+ {self._quantiteStock}+\\n+ {self._quantiteMin} &quot;', 1),
(110, 'DA106939', 331, ' @staticmethod\r\n    def Sapprovisionner(self,qte):\r\n        self._quantiteStock= qte +self._quantiteStock\r\n\r\n    @staticmethod\r\n    def Achat(self,qte):\r\n        if self._quantiteStock= self._quantiteStock - qte\r\n          if self._quantiteStock  &lt; self._quantiteMin\r\n            return (&quot;bien&quot;)\r\n        else:\r\n               (&quot;impossible&quot;)', 3),
(111, 'DA106939', 332, 'class Habit(Article):\r\n    def __init__(self,c,t):\r\n        self.__couleur=c\r\n        self.__taille=t\r\n\r\n    def get__taille(self):\r\n        self.__taille\r\n\r\n    def get__couleur(self):\r\n        self.__couleur', 1),
(112, 'DB31001', 332, 'class habit(Article):\r\ndef __init__(self,C,taile,couleur,numseri,prixhotax,qualitestock,quantitimini):\r\n    super.__init__(numseri,prixhotax,qualitestock,quantitimini)\r\n    self.taill=taile\r\n    self.couloure=couleur', 2),
(113, 'DA106939', 333, ' def __str__(self):\r\n        return f&quot;{str(self.__couleur)} + \\n + {str(self.__taille)}&quot;', 0.5),
(114, 'DA106939', 334, 'class Electromenager(Article):\r\n    def __init__(self , p,dG):\r\n        self.poids = p\r\n        self.dureeGarantie = dG', 1),
(115, 'DA107633', 333, '   def __str__(self):\r\n      return f&quot;({self._numerodeserie}+/n {self._prixhorstaxe}+/n{self._quantiteenstock}+/n{ self._quantiteminimale}+/n{ self.__taille }+/n{ self.  self.__couleur})&quot;', 1),
(116, 'DA102284', 333, '    def __str__(self):\r\n        return super().__str__()+&quot;  la taille : &quot;+str(self._taille)+&quot;  la couleur est :&quot;+self._couleur', 1),
(117, 'DA106939', 335, '    def datefinGarantie(self):\r\n        return { date.today -  self.dureeGarantie}', 0.5),
(118, 'CB346790', 333, ' def __str__(self):\r\n        return f&quot;({self._taille }+/n{ self._couleur}+/n)&quot;', 0.5),
(119, 'VA154626', 331, 'qte = 0\r\n    list = []\r\n    def Sapprovisionner(self):\r\n        list.append()\r\n        self._qte += 1\r\n\r\n    def Achat(self):\r\n        if self._qte &lt; self._qtemin:\r\n            return &quot;we don&#039;t have the quantity needed !!!&quot;', 1),
(120, 'JM103258', 337, 'class Program :\r\narticle = Article()\r\nprint(article.Achat())\r\ndef tllaja(self):\r\nreturn &#039;tllaja&#039;\r\n\r\n', 1.5),
(121, 'VA154626', 335, '    def datefinGarantie(self):\r\n        return date.today() - self.__dureegarant', 0.5),
(122, 'DA105115', 336, '    def __str__(self):\r\n       info=&#039;&#039;\r\n       info+=&#039;le poid&#039;+ self.__poid\r\n       info+=&#039;self.__durée_de_garantie :&#039;+self.__durée_de_garantie', 1),
(123, 'DB31001', 330, 'def __str__(self):\r\n    return\r\n(self._numsiri+&amp;quot; &amp;quot;+self._prixhortax+&amp;quot; &amp;quot;+self._qualitsetock+&amp;quot; &amp;quot;+self._quantitiminimal)\r\n\r\n', 1),
(124, 'DA107633', 334, '\r\nclass Electromenager(Article):\r\n    super(Article).(ns, pht, qs, qm)\r\n\r\n    def __init__(self, p, dg):\r\n        self.__poids = p\r\n        self.__dureegarantie = dg\r\n        ', 1),
(125, 'DA106939', 336, ' def __str__(self):\r\n        return f&quot;{self.poids} + \\n +{self.dureeGarantie} &quot;', 1),
(126, 'CI2877', 331, 'def Sapprovisionner(self.qte):\r\n    return self._quantitéSk += qte\r\ndef achat (self.qte):\r\n    return self._quantitéSk -= qte\r\ndef achat (self.qte):\r\n', 3),
(127, 'DA107633', 332, '    class Habit (Article):\r\n     super(Article).(ns,pht,qs,qm)\r\n     def __init__(self,t,c):\r\n         self.__taille = t\r\n         self.__couleur = c\r\n     def get__taille(self):\r\n      self.__taille\r\n\r\n\r\n     def get__taille(self):\r\n      self.__couleur\r\n', 1),
(128, 'DB31001', 333, 'def __str__(self):\r\n    return super.__str__(self._numsiri+&quot; &quot;+self._prixhortax+&quot; &quot;+self._qualitsetock+&quot; &quot;+self._quantitiminimal)+&quot;&quot;+self.taile+&quot;&quot;+self.couleur\r\n\r\n', 1),
(129, 'DN46699', 335, '    def finGarantie(self):\r\n        finGR=self._duree+datetime.date of today', 1),
(130, 'DA106392', 334, 'class Electromenager(Article):\r\n    def __init__(self, nom, prix, poids, garantie_mois):\r\n \r\n        super().__init__(nom, prix)\r\n\r\n      \r\n        self.poids = poids\r\n        self.garantie_mois = garantie_mois\r\n\r\n    def afficher_details(self):\r\n        \r\n        super().afficher_details()\r\n\r\n      \r\n        print(f&quot;Poids: {self.poids} kg&quot;)\r\n        print(f&quot;Durée de garantie: {self.garantie_mois} mois&quot;)\r\n', 1),
(131, 'DA102284', 334, 'class Electroménager(Article) :\r\n    def __init__(self, numero_de_serie=None, prix_ho=None, quantite_stock=None, quantite_mini=None, taille=None, couleur=None , poids = None , duree=None):\r\n        super().__init__(numero_de_serie, prix_ho, quantite_stock, quantite_mini ,taille ,couleur ,poids ,duree)\r\n        self._poids = poids\r\n        self._durée  = durée ', 1),
(132, 'CI2249', 335, '    def datefinGarentie(self,finDegarenti):\r\n         finDegarenti = ((date.today() + self._dureeEnMois).days )\r\n         return  finDegarenti', 0.5),
(133, 'CI1417', 334, 'class Electroménager(article):\r\n    def __init__(self,pd,grt):\r\n        self._poids = pd\r\n        self._garantie = grt\r\n\r\n', 1),
(134, 'JM103258', 336, 'def __str__(self):\r\n    return f&#039;{self._couleur} | {self._taille} | {self._plus} | {self._poids} | {self._durée}&#039;\r\n', 1),
(135, 'DA104711', 335, ' def datefinGarantie(self):\r\n        return date.today().month +  self.__duree_de_garantie', 1),
(136, 'DA105115', 335, '    def datefinGarantie (self):\r\n        return date.today().year+self.__durée_de_garantie', 0.5),
(137, 'DB31001', 334, 'class electrominager(Article):\r\n    def __init__(self,poid,dure):\r\n        self.poid=poid\r\n        self.dureGaranti=dure\r\n        super.__init__(numsiri,prixhortax,qualitsetock,quantitiminimal)\r\n\r\n\r\n\r\n\r\n)', 1),
(138, 'DA104711', 336, '  def __str__(self):\r\n       return super().__str__() +&quot;POIADS &quot;+ str(self.__poids) + &quot;| &quot;+str(self. datefinGarantie())', 2),
(139, 'DA102626', 333, ' def __str__(self):\r\n        return (super(Articl, self).__str__()(self._numero)|(self._prix)|(self._qstok)|(self._qminimal))', 1),
(140, 'CI2249', 336, '    def __str__(self):\r\n        return f&quot;{self._numeroDeSerie}-{self._prixHorsTax}-{self._quantiteMinimal}-{self._dureeEnMois}-{self._poid}-{self.datefinGarentie()}&quot;', 1.5),
(141, 'DA102284', 335, '    def datefinGarantie (self) \r\n        return date..today() - date(2020/02/12)', 0.5),
(142, 'DA102626', 332, 'a) class Habit:\r\n    def __init__(self,num,prx,qts,qtm)):\r\n    super().__init__(self,num,prx,qts,qtm)\r\n', 1.5),
(143, 'Z673521', 329, 'class Article:\r\n    def __init__(self, num=None, pt=None, qs=None, qm=None):\r\n        self._numero = num\r\n        self._prixHTaxe = pt\r\n        self._qStock = qs\r\n        self._qMinimale = qm', 1),
(144, 'DA104864', 337, 'A1 = Habit(123, 0.5, 10, 5, 150, &amp;quot;noir&amp;quot;)\r\nA1.approvisionner(5)\r\n\r\nA2 = Electroménager(124, 0.4, 15, 10, 70, 13)\r\nA2.achat(4)\r\nprint(A2.datefingarantie())\r\n\r\nprint(A2)\r\n', 2.5),
(145, 'DB31001', 336, 'def __str__(self,poid,dure,):\r\nreturn super.__str__(self._numsiri+&amp;quot; &amp;quot;+self._prixhortax+&amp;quot; &amp;quot;+self._qualitsetock+&amp;quot; &amp;quot;+self._quantitiminimal+&quot;&quot;+self.poid+&quot;&quot;+self.dure', 2),
(146, 'DA104864', 335, '    def datefingarantie(self):\r\n        date = datetime.now()\r\n        if self._duréedegarantie &gt; 12:\r\n            datetime.year +=1\r\n        else:\r\n            self\r\n        return date', 1),
(147, 'DN46699', 336, 'def __str__(self):\r\n   # def __str__(self,return(str(self._numserie))+(str(self._prixht))+(str(self._quantimin))+(str(self._quantitestock)))\r\n   super().__str__() + self._duree+self.poids\r\n   ', 1),
(148, 'DA106939', 337, 'class Programme:\r\n', 0),
(149, 'Z673521', 330, ' def __str__(self):\r\n        return f&quot;{self._numero}-{self._prixHTaxe}-{self._qStock}-{self._qMinimale}&quot;\r\n', 1),
(150, 'Z673521', 331, '    def approvisionneer(self, qte):\r\n        if qte &amp;gt;= 0:\r\n            self._qStock += qte\r\n\r\n    def achat(self, qte):\r\n        if self._qStock - qte &amp;gt; self._qMinimale:\r\n            self._qStock -= qte\r\n        else:\r\n            print(&amp;quot;la quantité qui reste est inférieure à la quantité minimale !!&amp;quot;)\r\n', 4),
(151, 'D689477', 335, '   def  methodedatefinGarantie(self):\r\n        pass', 0.5),
(152, 'Z673521', 332, 'class Habit(Article):\r\n    def __init__(self, tai=None, cou=None, num=None, pt=None, qs=None, qm=None):\r\n        Article.__init__(self,num, pt, qs, qm)\r\n        self.__taille = tai\r\n        self.__couleur = cou', 2),
(153, 'CB346790', 334, 'class  Electroménager(Article):\r\n    super(Article).(ns, pht, qs, qm)\r\n\r\n    def __init__(self,p , g):\r\n        self._poids = p\r\n        self._garantie = g', 1),
(154, 'DA104711', 337, 'art = Habit(125,200,20,15,50,&quot;black&quot;)\r\nprint(art.saprovisionner(20))\r\nprint(art)\r\nart2 = Electromenager(4525,300,25,19,30,4)\r\nprint(art2.Achat(10))\r\nprint(art2.datfinGarantie())\r\nprint(art2)\r\n', 3),
(155, 'Z673521', 336, '    def __str__(self):\r\n        return f&quot;{self.__poids}-{self.__duree}-{self.datefinGarantie()}-{Article.__str__(self)}&quot;\r\n', 2),
(156, 'CB346790', 332, '    class Habit(Article):\r\n      super(Article).(ns,pht,qs,qm)\r\n      def __init__(self,t,c):\r\n         self._taille = t\r\n         self._couleur = c\r\n        def get__taille(self):\r\n            self._taille\r\n\r\n      def get__couleur(self):\r\n          self._couleur\r\n', 1.5),
(157, 'CN51111', 329, 'class Article:\r\n    def __init__(self,ns=None,pht=None,qs=None,qm=None):\r\n        self._numerodeserie = ns\r\n        self._prixhorstaxe = pht\r\n        self._quantiteenstock = qs\r\n        self._quantiteminimale = qm', 1),
(158, 'Z673521', 333, 'def __str__(self):\r\n        return f&amp;quot;{self.__taille}-{self.__couleur}-{Article.__str__(self)}&amp;quot;\r\n', 1),
(159, 'DA107633', 336, 'def__str__(self):\r\n   return f&quot;({ self.poids }+/n{ self.dureegarantie})&quot;', 1),
(160, 'DA104711', 329, 'class Article:\r\n    def __init__(self,nms,prtx,qntstk,mn):\r\n        self._numserie = nms\r\n        self._prixhorstax = prtx\r\n        self._qantitestock = qntstk\r\n        self._qantiteminimal = mn', 1),
(161, 'CN51111', 337, 'class Program(Article,Habit,Electromenager,):\r\n    def __init__(self,ns,pht,qs,qm,color,taille,poid,dg):\r\n        super().__init__(ns,pht,qs,qm,color,taille,poid,dg)\r\n\r\n    def __str__(self):\r\n        return (f&quot;numerodeserie ={self._numerodeserie} | prixhorstaxe ={self._prixhorstaxe} &quot;\r\n                f&quot;| quantiteenstock ={self._quantiteenstock} | quantiteminimale ={self._quantiteminimale} &quot;\r\n                f&quot;| le poids ={self.poids} | dure_d_garantie ={self.dure_d_garantie} | le color ={self.color} &quot;\r\n                f&quot;| la taille ={self.taille}&quot;)\r\n\r\n\r\nh = Habit(12,200,100,10,&quot;jaune&quot;,15)\r\nh.Sapprovisionner(100)\r\nprint(h)\r\ne = Electromenager(13,133,300,12,19,12)\r\ne.Achat(20)\r\nprint(e.datefinGarantie())\r\nprint(e)\r\n', 3),
(162, 'DA107633', 335, ' def datefinGarantie ():\r\n        datefinGarantie = date(year=2024,month=01,day=12) + self._dureegarantie', 1),
(163, 'DA105587', 329, 'class Article :\r\n__num_serie =ns\r\n__prix_ht = pht\r\n__qte_s =qs\r\n__qte_min =qtemin\r\n\r\n    def __init__(self, self.__num_serie = ns,prix_ht = pht,__qte_s =qs,__qte_min =qtemin):\r\n        self.__num_serie = ns\r\n        self.__prix_ht = pht\r\n       self.__qte_s =qs\r\n       self.__qte_min =qtemin', 1),
(164, 'Z673521', 335, ' def datefinGarantie(self):\r\n        d = self.__duree\r\n        year = date.today().year\r\n        month = date.today().month\r\n        day =date.today().day\r\n\r\n        year += d // 12\r\n        month += d - (d//12) * 12\r\n        if month &gt; 12:\r\n            month -= 12\r\n            year += 1\r\n\r\n        return date(year, month, day)', 2),
(165, 'DA105587', 330, 'def __str__(self):', 1),
(166, 'Z673521', 337, '\r\nclass Program:\r\n    h = Habit(40, &quot;red&quot;, 123, 100, 20, 1)\r\n    print(h)\r\n    h.approvisionneer(3)\r\n\r\n    e = Electromenager(30, 60, 123, 100, 20, 1)\r\n    e.achat(12)\r\n    print(e.datefinGarantie())\r\n    print(e)', 3),
(167, 'DA105115', 337, 'h1=Habit(1234,500,77,22,&#039;rouge&#039;,55)\r\nh2=Electroménager(234,600,66,11,9,12)', 1),
(168, 'X449131', 329, 'class article:\r\n    def __init__(self,num,pr,qs,qtmin):\r\n        self._numéro_de_série = num\r\n        self._prixhorstaxe = pr\r\n        self._qtestock = qs\r\n        self._qtemin = qtmin', 1),
(169, 'DA105449', 329, 'class Article:\r\n    def __init__(self,nm,p,qa,qm):\r\n      self.numero_de_serie=nm\r\n      self.prix_hors_taxs=p\r\n      self.quantite_stock=qa\r\n      self.quantite_minimale=qm\r\n', 1),
(170, 'X449131', 330, ' def __str__(self):\r\n        afficher = &quot; &quot;\r\n        afficher += &quot;numrosiri&quot; + self._numéro_de_série\r\n        afficher += &quot;prixhorstaxe:&quot; + self._prixhorstaxe\r\n        afficher += &quot;quantité en stock&quot; + self._qtestock\r\n        afficher += &quot;la quantité minimale:&quot; + self._qtemin\r\n', 1),
(171, 'DA105449', 330, '  def __str__(self,nm,p,qa,qm):\r\n        return  f&quot;{self.quantite_minimale}--{self.numero_de_serie}--{self.quantite_stock}--{self.prix_hors_taxs}&quot;', 1),
(172, 'X449131', 331, '    def Ajouter(self,qte):\r\n        qte = self._qtestock + self._qtestock\r\n\r\n    def Achat(self,qte):\r\n        if qte &lt;= self._qtemin:\r\n            print(&quot;Si la quantité qui reste est inférieure à la quantité minimale on avise par un message ca&quot;)\r\n', 3),
(173, 'DA105449', 331, 'def saprovisioner(self,qa,qd):\r\n        self.quantite_donne = qd\r\n        return  self.quantite_stock += self.quantite_donne\r\n\r\n\r\n    def achat(self,quantite_dachat,qm,qr):\r\n            self.quantite_reste = quantite_reste\r\n          self.quantite_dachat = quantite_dachat\r\n         if self.quantite_reste &lt;  self.quantite_minimale :\r\n             return print(&quot;quantite vide&quot;)', 2),
(174, 'X449131', 332, 'class Habit(article):\r\n    def __init__(self,color,taille=12):\r\n        super().__init__(self,num,pr,qs,qtmin)\r\n        self._color = color\r\n        self._taille = taille\r\n\r\n    def __str__(self):\r\n        super().__str__() + &quot;afficher habit color&quot; + str(self._color) + &quot;la taille :&quot; +  int(self._taille)\r\n', 2),
(175, 'DA105449', 332, 'class habit(Article):\r\n    def __init__(self,c,t):\r\n     super(habit, self).__init__(nm,p,qa,qm)\r\n     self.couleur = c\r\n     self.taille =t', 2),
(176, 'DN46699', 337, 'h1=(123,145,123,&amp;amp;amp;quot;noir&amp;amp;amp;quot;)\r\nprint(h1)\r\nel=(123,4223,45)\r\nprint(el.finGarantie)\r\nprint(el.quntitestock)', 0.5),
(177, 'D689477', 336, '    def __str__(self):\r\n\r\n', 0),
(178, 'DA105449', 333, ' def __str__(self,c,t):\r\n       return\r\n       super(Article,self).__str__()\r\n       f&quot;{self.couleur}--{self.taille}&quot;', 1),
(179, 'X449131', 333, ' def __str__(self):\r\n        super().__str__() + &quot;afficher habit color&quot; + str(self._color) + &quot;la taille :&quot; +  int(self._taille)\r\n', 1),
(180, 'X449131', 334, 'class Electroménager(article):\r\n    def __init__(self,poid,durre,dateact,dtg,df,dc):\r\n        super().__init__(self,num,pr,qs,qtmin)\r\n        self.__poid = poid\r\n        self.__duree = durre\r\n        self.dateactule = dateact\r\n        self.dategarantie = dtg\r\n        self.datefin = df\r\n        self.datecourant = dc\r\n\r\n    def getpoid(self):\r\n        return self.__poid\r\n    def getduere(self):\r\n        return self.__duree\r\n\r\n    def dureegarante(self,dure):\r\n        dure = (self.dategarantie - self.dateactule) / 12\r\n        return dure', 1),
(181, 'DA105449', 334, 'class Electromenage(Article):\r\n    def __init__(self,poids,durégarantie ):\r\n       super(Electromenage, self).__init__(nm,p,qa,qm)\r\n         self.poids =poids\r\n         self.durégarantie =durégarantie', 1),
(182, 'X449131', 335, '    def dureegarante(self,dure):\r\n        dure = (self.dategarantie - self.dateactule) / 12\r\n        return dure\r\n', 1),
(183, 'X449131', 336, '    def __str__(self):\r\n        super().__str__() + &quot;date de fin &quot; + str(self.datefin) + &quot;la date de garentie :&quot; +  int(self.dategarantie) + &quot;la date courant&quot; + int(self.datecourant)\r\n\r\n', 2),
(184, 'CB346790', 336, 'def__str__(self):\r\n   return if&quot;({self.poids}+/n{self.dureegarantie})&quot;', 1),
(185, 'DA105449', 336, 'def __str__(self,poids,taille):\r\n       return\r\n       super(Article,self).__str__()\r\n       f&quot;{self.couleur}--{self.poids}&quot;\r\nh1', 2),
(186, 'CN51111', 335, '    def datefinGarantie(self):\r\n        date.today() + self.dure_d_garantie\r\n', 0.5),
(187, 'DA105449', 337, 'h1 = habit()\r\nh1.__str__()\r\n', 0.5),
(188, 'CB346790', 335, '    def datefinGarantie():\r\n        datefinGarantie=date():', 1),
(189, 'X449131', 337, 'from CLASS.Article import Article\r\nfrom CLASS.Habit import Habit\r\nfrom CLASS.Electroménager import Electroménager\r\nfrom datetime import date\r\n\r\np1 = Electroménager(123,432,20,23,3,4)\r\nprint(p1)\r\np2 = article()\r\np2.habit()\r\np2.afficher()\r\nElectroménager.dategarentie()\r\np2.Article.afficher()\r\n\r\n', 3),
(190, 'DA107295', 338, '6 11 20', 1),
(191, 'DA107295', 339, '8\r\n9\r\n4\r\n7\r\n3\r\n', 4),
(192, 'DA107777', 338, '6,11,20\r\n\r\n', 0),
(193, 'DA107777', 339, '8,9,4,7,3', 4),
(194, 'DA102534', 330, 'def __str__(self):\r\n    return f\"{self.__aaa}\";', NULL),
(195, 'DA107295', 343, 'def algorithm_ex(n):\r\nu,ul,u2,i = 0,0,1,0\r\nT = [0] * n\r\nif n &amp;amp;gt; 2:\r\nT[0],T[1] = ul,u2\r\nfor i in range(2,n)\r\nT[i] = T[i - 1] +  T[i - 2] \r\nreturn T\r\nelse:\r\nprint(&amp;amp;quot;the input...&amp;amp;quot;)\r\nreturn None\r\nprint(&amp;amp;quot;Enter a number :&amp;amp;quot;)\r\nn= int(input())\r\nresult = algorithm_ex()\r\nif result is nut None:\r\nfor i in range(len(result))\r\nprint(result[i],end=&amp;amp;quot;&amp;amp;quot;)', 3),
(196, 'DA107295', 340, 'et affichera la valuer 6', 0),
(197, 'DA107295', 341, 'S = 2 + 3 + -1 = 7', 0),
(198, 'DA107777', 340, 'il va affichier 6', 1),
(199, 'DA107777', 341, 'affichier 7', 0),
(200, 'DA107777', 343, 'n = int (input (&quot;taper un nombre &quot;)\r\n ul &lt;-- 0\r\nul2 &lt;-- u\r\n if n &gt; 2\r\nt[0] = u1\r\nt[1] = u 2\r\nfor i in range [2] :\r\nu = u1 + u2 \r\nu2 = u\r\nelse : n = 1\r\nt[0] = u1\r\nt[1] = u2\r\n elif  n µµ+ 2 \r\nt[0] = u1 \r\nt[1]  = u2\r\nprint(t[i],&quot;&quot;)', 3),
(201, 'DA102534', 331, 'def __str__(self):\r\n    return f\"{self.__aaa}\";\r\ndef __str__(self):\r\n    return f\"{self.__aaa}\";\r\ndef __str__(self):\r\n    return f\"{self.__aaa}\";\r\ndef __str__(self):\r\n    return f\"{self.__aaa}\";', NULL),
(202, 'DA104704', 347, 'class AppElectrique:\r\n    def __init__(self, r=None, p=None, pd=None, px=None):\r\n        self._référence = r\r\n        self._puissance = p\r\n        self._poids = pd\r\n        self._prix = px', 1),
(203, 'DA104704', 348, '    def __str__(self):\r\n        return f\"_référence {self._référence} _puissance {self._puissance} _poids {self._poids} _prix {self._prix} \"', 1),
(204, 'DA102534', 347, 'class AppElectrique:\r\n    def __init__(self, référence=None, puissance=None, poids=None):\r\n        self._référence = référence\r\n        self._puissance = puissance\r\n        self._poids = poids\r\n', 1),
(205, 'DA106935', 347, 'class AppElectrique :\r\n    _reference = None\r\n    _puissance = None\r\n    _poids = None\r\n    _prix = None\r\n    def __init__(self,r=_reference,pui=_puissance,poi=_poids,pri=_prix):\r\n        self._reference = r\r\n        self._puissance = pui\r\n        self._poids = poi\r\n        self._prix = pri', 1),
(206, 'CI1143', 347, ' class AppElectrique:\r\n     def __init__(self, re, pd, pu):\r\n         self._reference = re\r\n         self._poids = pd\r\n         self._puissance = pu\r\n         self._constructeur = AppElectrique._constructeur\r\n     ', 1),
(207, 'VA159550', 347, 'class AppElectrique:\r\n    def __init__(self, référence = None, puissance = None, poids = None):\r\n        self._référence = référence\r\n        self._puissance = puissance\r\n        self._poids = poids', 1),
(208, 'DA102534', 348, '    def __str__(self):\r\n        return f\"{self._référence};{self._puissance};{self._poids}\"', 0.5),
(209, 'DA108545', 347, 'class AppElectrique :\r\n    def __init__(self,r=None, pui=None ,poi=None ,pr=None):\r\n        self._référence =r\r\n        self._puissance =pui\r\n        self._poids = poi\r\n        self._prix = pr', 1),
(210, 'DA106935', 348, '    def __str__(self):\r\n        return f\"reference: {self._reference} | puissance: {self._puissance} | poids: {self._poids} | prix: {self._prix}\"', 1),
(211, 'DA104704', 349, '    def ClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n            print(\"la class A\")\r\n        if 300 < self._puissance < 1000:\r\n            print(\"la classe B\")\r\n        if self._puissance > 1000:\r\n            print(\"la classe C\")', 2),
(212, 'DA108545', 348, ' def __str__(self):\r\n        return f\"la référence{self._référence} la puissance{self._puissance} le poids{self._poids} la prix{self._prix}\"\r\n', 1),
(213, 'DA102389', 347, 'class AppElectrique:\r\n    def __init__(self,référence,puissance,poids,prix):\r\n        self.référence=référence\r\n        self.puissance=puissance\r\n        self.poids=poids\r\n        self.prix=prix', 1),
(214, 'CI1143', 348, '    def __str__(self):\r\n        return f\"{self._constructeur} | {self._reference } | {self._poids} | {self._puissance} \"\r\n', 1),
(215, 'VA159550', 348, '    def __str__(self):\r\n        return f\"référence: {self._référence} | puissance: {self._puissance} | poids: {self._poids} | prix: {self._prix}\"', 1),
(216, 'DA104117', 347, 'class AppElectrique:\r\n    def __int__(self,référence, puissance,  poids, prix):\r\n        self.référence=référence\r\n        self.puissance=puissance\r\n        self.poids=poids\r\n        self.prix=prix', 1),
(217, 'DA102534', 349, '    def ClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n            return \"classe A\"\r\n        if 300 <= self._puissance <= 1000:\r\n            return \"classe B\"\r\n        if self._puissance > 1000:\r\n            return \"classe C\"', 2),
(218, 'DA104117', 348, ' def __str__(self):\r\n            return f\"Rèfèrence:{self.référence}/n , Puissance:{self.puissance}/n,Poinds:{self.poids},Prix:{self.prix}\"\r\n\r\n', 1),
(219, 'DB30958', 347, 'class AppElectrique :\r\n    def __init__(self,ref,pui,poid,prix):\r\n        self._référence = ref\r\n        self._puissance = pui\r\n        self._poid = poid\r\n        self._prix = prix\r\n#constructeur sans parametre\r\n    def __init__(self):\r\n        self._référence = 0\r\n        self._puissance = 0\r\n        self._poid = 0\r\n        self._prix = 0', 1),
(220, 'DA106571', 348, '    def __str__(self):\r\n        info = \" \"\r\n        info + \" la référence\" + str(self._référence) + \"//\"\r\n        info + \" la puissance en watt\" + str(self._puissance) + \"//\"\r\n        info + \" le poids\" + str(self._poids) + \"//\"\r\n        info + \" le prix\" + str(self._prix) + \"//\"', 1),
(221, 'DA104704', 351, 'class Television(AppElectrique):\r\n    def __init__(self, type, fréquence, r, p, pd, px):\r\n        super().__init__(r, p, pd, px)\r\n        self._type_ecran = type\r\n        self._fréquence = fréquence', 2),
(222, 'DB30958', 348, ' def __str__(self):\r\n        return f\"la reference :{self._référence}||la puissance : {self._puissance}|| le poid : {self._poid} le prix : {self._prix}\"', 1),
(223, 'DA106935', 349, '    def ClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n           return \"classe A\"\r\n        elif self._puissance >= 300 and self._puissance<=1000:\r\n           return \"classe B\"\r\n        return \"classe C\"', 1),
(224, 'DA104704', 352, '    def __str__(self):\r\n        return super().__str__() + f\"le types est {self._type_ecran} et la fréquence est {self._fréquence}\"', 1),
(225, 'DA106571', 347, 'class AppElectrique :\r\n    def __init__(self,référence=None,puissance=None,poids=None ,prix=None):\r\n        self._référence=référence\r\n        self._puissance =puissance\r\n        self._poids =poids\r\n        self._prix = prix', 1),
(226, 'VA159550', 349, '    def ClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n            print(\"Class A\")\r\n        elif 300 < self._puissance < 1000:\r\n            print(\"Class B\")\r\n        elif self._puissance > 1000:\r\n            print(\"Class C\")', 2),
(227, 'DA108545', 349, '    def ClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n            print(\"la classe A\")\r\n        if self._puissance >= 300 and self._puissance <= 1000:\r\n            print(\"la classe B\")\r\n        if self._puissance > 1000:\r\n            print(\"la classe C\")', 2),
(228, 'CI459', 347, 'class AppElectrique\r\n    def __init__(self,refarance,puissanse,piods,prix):\r\n        self.refarance = refarance\r\n        self.puissanse =puissanse\r\n        self.piods =piods\r\n        self.prix =prix\r\n    def creat_empty(cls):\r\n        return cls(none,non,non,non)\r\n    appariel_vide = AppElectrique.creat_empty()', 1);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(229, 'DA102389', 348, '    def __str__(self):\r\n        return f\"la référence: {self.référence}\\n la puissance:{self.puissance}\\n le poids:{self.poids}\\n le prix:{self.prix}\"', 1),
(230, 'DA107777', 347, 'class AppElectrique  ():\r\n   def __init__(self=None,reference=None,puissance=None,poids= None,prix=None) :\r\n      self.__reference = reference\r\n      self.__puissance = puissance\r\n      self.__poids = poids\r\n      self.__prix = prix\r\n   def __init__():', 0.5),
(231, 'DA102534', 351, 'class Television(AppElectrique):\r\n    def __init__(self, référence, puissance, poids,\r\n                 type =None, fréquence=None):\r\n        super().__init__(référence, puissance, poids)\r\n        self._type = type\r\n        self._fréquence = fréquence', 2),
(232, 'DA104704', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self, auto, kilo, r, p, pd, px):\r\n        super().__init__(r, p, pd, px)\r\n        self._lautonomie = auto\r\n        self._kilométrage = kilo', 2),
(233, 'DB30758', 347, 'class AppElectrique:\r\n    def __init__(self,refe,puis,pds,prx):\r\n        self._référence = refe\r\n        self._puissance = puis\r\n        self._poids = pds\r\n        self._prix = prx\r\n    @classmethod\r\n        def create_empty(cls):\r\n            return cls(None,None,None,None)', 0.5),
(234, 'VM18941', 347, 'class Appareil:\r\n def __init__(self,réf,puiss,poid,prix):\r\n  self.référence = réf\r\n  self.puissance = puiss\r\n  self.poid = poid\r\n  self.prix = prix\r\n class AppElectrique:\r\n     def __init__(self):\r\n         self.référence = \"\"\r\n         self.puissance = 0\r\n         self.poid = 0\r\n         self.prix = 0', 1),
(235, 'DA102534', 352, '    def __str__(self):\r\n        return super().__str__() + f\'{self._type};{self._fréquence}\'', 1),
(236, 'VA159550', 351, 'class Television(AppElectrique):\r\n    def __init__(self, référence = None, puissance = None, poids = None, prix = None, type=\"LCD\", fréquence=560):\r\n        super().__init__(référence, puissance, poids, prix)\r\n        self._type = type\r\n        self._fréquence = fréquence', 2),
(237, 'DA106935', 351, 'class Television (AppElectrique):\r\n    __typedecran = None\r\n    __fréquence = None\r\n    def __init__(self,r,pui,poi,pri,td=__typedecran,fre=__fréquence):\r\n        AppElectrique.__init__(r,pui,poi,pri)\r\n        self.__typedecran = td\r\n        self.__fréquence = fre', 2),
(238, 'CB355407', 347, 'class AppElectrique:\r\n    def __init__(self):\r\n        self._référence = \"\"\r\n        self._puissance = \"\"\r\n        self._poids = \"\"\r\n        self._prix = \"\"\r\n    def __init__(self, référence, puissance, poids, prix):\r\n        self._référence = référence\r\n        self._puissance = puissance\r\n        self._poids = poids\r\n        self._prix = prix', 1),
(239, 'VA159550', 352, ' def __str__(self):\r\n        return f\"{super().__str__()} | type: {self._type} | fréquence: {self._fréquence}\"', 1),
(240, 'CB355407', 348, 'def __str__(self):\r\n        return \"la référence est : \"+str(self._référence)+\"la puissance est : \"+str(self._puissance)+\"le poids est : \"+str(self._poids)+\" le prix est : \"+str(self._prix)', 1),
(241, 'DB30758', 348, 'def __str__(self):\r\n    f\'\'la référence :{self_refe} la puissance :{self_puis} le poids :{self_pds} le prix :{self_prx}\'\'', 1),
(242, 'DA101003', 347, 'class AppElectrique :\r\n    def__init__(self,référence,puissance,poids,prix):\r\n       self.référence = reference\r\n       self.puissance = puissance\r\n     self.poids = poids\r\n      self.prix = prix\r\n      def create_empty(cls):\r\n          return cls (None,None,None,None)\r\n      appareil1 = AppElectrique(\"Ref123\",1000,5,199.99)\r\n      appareil1_vide= AppElectrique.create_empty()', 1),
(243, 'DA102534', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self, référence, puissance, poids,\r\n                 autonomie =None, kilométrage=None):\r\n        super().__init__(référence, puissance, poids)\r\n        self._autonomie = autonomie\r\n        self._kilométrage = kilométrage', 2),
(244, 'DA108545', 352, ' def __str__(self):\r\n            super().__str__()+self.__type_écran+str(self.__fréquence)\r\n        ', 1),
(245, 'DA108545', 351, 'class Television(AppElectrique ) :\r\n    def __init__(self,r=None, pui=None ,poi=None ,pr=None, typ=None,fr=None):\r\n        super().__init__(r=None, pui=None ,poi=None ,pr=None)\r\n        self.__type_écran = typ\r\n        self.__fréquence = fr', 2),
(246, 'DA104704', 354, '\r\n    def Rouler(self, distance):\r\n        return self._kilométrage - distance\r\n    def Charger(self, nbrminute):\r\n        ds = ( nbrminute / 60 ) * 10\r\n        return self._lautonomie - ds', 3),
(247, 'DA109151', 347, 'class AppElectrique:\r\n    def __init__(self,référence,puissance,poids,prix):\r\n        self.__référence = référence\r\n        self.__puissance = puissance\r\n        self.__poids = poids\r\n        self.__prix = prix', 1),
(248, 'DA109151', 348, 'def __str__(self):\r\n        return f\"reférence:{self.référence} | puissance{self.puissance} | poids:{self.poids} | prix:{self.__prix}\"', 1),
(249, 'DA105622', 347, 'class AppElectrique:\r\n    def __init__(self,reference, puissance, poids , prix\r\n                 ):\r\n        self.reference = reference\r\n        self.puissance = puissance\r\n        self.poids = poids\r\n        self.prix = prix\r\n     def __int__(self):\r\n         self.reference= \"\"\r\n         self.puissance= 0\r\n         self.poids= 0\r\n         self.prix= 0\r\n\r\n', 1),
(250, 'DA104704', 355, '    def __str__(self):\r\n        return super().__str__() + f\"lautonomie est {self._lautonomie} kilométrage est {self._kilométrage}\"', 1),
(251, 'CI1143', 351, 'from Classes.AppElectrique import AppElectrique\r\n\r\nclass Television(AppElectrique):\r\n    def __init__(self,Te,f):\r\n        self._Typeecran =Te\r\n        self._fréquence=f\r\n        AppElectrique. __init__(self, re, pd, pu)', 2),
(252, 'DB30958', 349, '    def ClasseEneergetique(self,puissance):\r\n        if self._puissance < 300 :\r\n            print(\"puisque la puissance est inférieure strictement a 300 watt donc elle apartient a la class A \")\r\n        elif self._puissance > 300 and self._puissance < 1000 :\r\n            print(\"puisque la puissance est comprise entre 300 watt et 1000 watt donc elle appartient a la class B\")\r\n        else :\r\n            print(\"la puissance appartient a la class C\")', 1.5),
(253, 'CI459', 348, 'class AppElectrique :\r\n    def __init__(self,type_appariel,marque,model):\r\n        self.type_appariel = type_appariel\r\n        self.marque =marque\r\n        self.model = model\r\n    def __str__(self):\r\n        return f\'\'type: {self.type_appariel},marque:{self.marque},model:{self.model}\r\n        televition = AppElectrique(\"televition\",\"smart\",2000)\r\n        print(televition)', 1),
(254, 'DA106935', 352, '    def __str__(self):\r\n        return AppElectrique.__str__() + f\"type d’écran: {self.__typedecran} |  fréquence: {self.__fréquence}\"\r\n', 1),
(255, 'VA159550', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self, référence = None, puissance = None, poids = None, prix = None, autonomie=None, kilométrage=None):\r\n        super().__init__(référence, puissance, poids, prix)\r\n        self._autonomie = autonomie\r\n        self._kilométrage = kilométrage', 2),
(256, 'DA108545', 353, 'class VeloElec (AppElectrique ):\r\n    def __init__(self, r=None, pui=None ,poi=None ,pr=None, aut=None, kl=None):\r\n        super().__init__(r=None, pui=None ,poi=None ,pr=None)\r\n        self.__autonomie = aut\r\n        self.__kilométrage = kl', 2),
(257, 'DA102389', 351, 'class Television(AppElectrique) :\r\n    def __init__(self,référence,puissance,poids,prix,typedécran,lafréquence):\r\n        super().__init__(self,référence,puissance,poids,prix)\r\n        self.typedécran=typedécran\r\n        self.lafréquence=lafréquence', 2),
(258, 'DA102534', 354, '    def Rouler(self, distance):\r\n        self._kilométrage += distance\r\n        self._autonomie -= distance \r\n        return f\"nouveau kilométrage:{self._kilométrage}\\n\"\r\n\r\n    def Charger(self, nbrminute):\r\n        self._autonomie += (nbrminute/60) * 10\r\n        return f\"nouveau autonomie apres charger:{self._autonomie}\"', 4),
(259, 'DA102534', 355, '    def __str__(self):\r\n        return super().__str__() + f\'{self._kilométrage};{self._autonomie}\'', 1),
(260, 'DA106935', 353, 'class VeloElec (AppElectrique):\r\n    __autonomie = None\r\n    __kilometrage = None\r\n    def __init__(self, r, pui, poi, pri, aut=__autonomie, kiloe=__kilometrage):\r\n        AppElectrique.__init__(r, pui, poi, pri)\r\n        self.__autonomie = aut\r\n        self.__kilometrage = kiloe\r\n        ', 2),
(261, 'DA101003', 348, 'def __str__(self)\r\n          return f\"référence: {self.référence},puissance: {self.puissance} w,poids:{self.poids}\"\r\n      appareil1 = AppElectrique(\"Ref123\",1000,5,199.99)\r\nprint(appareil1)', 1),
(262, 'CI1143', 352, '    def __str__(self,):\r\n        return f\"{self._Typeecran} | {self._fréquence} | {self.__str__()}\"', 1),
(263, 'DB30958', 351, 'class Television(AppElectrique):\r\n    def __init__(self,referance,puissance,poid,prix,type,frequence):\r\n        AppElectrique.__init__(self,referance,puissance,poid,prix)\r\n        self._type = type\r\n        self._frequence = frequence', 2),
(264, 'DA102389', 352, '    def __str__(self):\r\n        return f\"la référence: {self.référence}\\nla puissance:{self.puissance}\\n le poids:{self.poids}\\n le prix:{self.prix}type d’écran:{ self.typedécran}\\n la fréquence:{ self.lafréquence}\"', 0.5),
(265, 'DA104117', 351, 'class Television(AppElectrique) :\r\n    def __int__(self, référence, puissance, poids,prix,fréquence,typeécran ):\r\n       super(). __int__( référence, puissance, poids,prix)\r\n       self.fréquence=fréquence\r\n       self.typeécran =typeécran ', 2),
(266, 'DB30758', 349, 'def ClasseEneergetique(self):\r\n    if self_puissance < 300\r\n         print( \" classe A\")\r\n    elif 300 < self_puissance < 1000\r\n          print (\"classe B \")\r\n    else self_puissance >1000\r\n          print (\"classe C\")', 1),
(267, 'ZG166772', 347, 'class AppElectrique :\r\n    def __init__(self,poids,puissance,réfèrence,prix):\r\n        self._poids = poids\r\n        self._puissance = puissance\r\n        self._réfèrence = réfèrence\r\n        self._prix = prix', 0.5),
(268, 'CI459', 352, 'class Television :\r\n    def __init__(self,marque,model,taill):\r\n    \r\n        self.marque =marque\r\n        self.taill =taill\r\n        self.model = model\r\n    def __str__(self):\r\n        return f\'\'Television - marque :{self.marque},model: {self.model},taill:{self.taill}\r\n        televition =Television(\"samsung\",\"smart\", \"55pauce\" )\r\n', 0),
(269, 'DA105622', 348, 'def __str__(self):\r\n     returne f\"reference;\r\n{self.reference}, puissance:\r\n{self.puissance} watt, poids:\r\n{self.poids} kg , prix : {self.prix} euros \"', 1),
(270, 'DA106571', 349, 'class énergétique (AppElectrique):\r\n    def __init__(self ,puissance=None):\r\n        self._puissance=puissance\r\n    def __str__(self):\r\n        if self._puissance > 300 :\r\n            print(\"c\'est la classe A\")\r\n        elif self._puissance \r\n            print(\"c\'est la classe B\")\r\n        else:print(\"c’est la classe C \")', 1),
(271, 'DA102389', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self,référence,puissance,poids,prix,lautonomie,kilométrage ):\r\n        super().__init__(self, référence, puissance, poids, prix)\r\n        self.lautonomie=lautonomie\r\n        self.kilométrage=kilométrage', 2),
(272, 'CB355407', 349, 'def ClasseEneergetique(self):\r\n        if self._puissance < 300 :\r\n            return \"class A\"\r\n        elif self._puissance <= 1000 and self._puissance >= 300 :\r\n            return \"class B\"\r\n        elif self._puissance > 1000 :\r\n            return \"class C\"', 2),
(273, 'DA107777', 349, 'class A ():\r\n   def__init__(self , pui300= classA):\r\n      self.__puissanceinferieurea300 = classA\r\nclass B ():\r\n  def__init__(self , puis300à1000= classB):\r\n   self.__puissanceinferieurea300 = classc B\r\n  class C ():\r\n   def__init__(self , puis>1000 = classc):\r\n   self.__puissance = class c\r\nclass AppElectrique (): \r\n    def __init__ (self,puissance(watt)=None):\r\n       if puissance <300 :\r\n          return  A\r\n        \r\n       if puissance <1000 and puissance > 300:\r\n          return  B\r\n         if puissance >1000 :\r\n          return  C', 1.5),
(274, 'CI3546', 347, 'sfbcxfbcbvvc', 0),
(275, 'DB30758', 351, 'classe Television(AppElectrique);\r\n    def__init__(self,refe,puis,pds,prx,typ,frq):\r\n        AppElectrique__init__(self,refe,puis,pds,prx)\r\n        self._type=typ\r\n        self._fr(équence=frq', 2),
(276, 'DA101003', 349, ' def class_energetique(self):\r\n          if self.puissance < 300:\r\n              return \"Class A\"\r\n          elif 300 <= self.puissance <=1000:\r\n              return \"Class B\"\r\n          else:\r\n              return \"Class C\"\r\nappareil1 = AppElectrique(\"Ref123\",1000,5,199.99)\r\nprint(appareil1.class_energetique())', 2),
(277, 'DB30958', 352, '    def __str__(self):\r\n        return f\"la reference : {self._référence}|| la puissance : {self._puissance}|| le poid : {self._poid} || le prix : {self._prix} || le type : {self._type} || la frequence : {self._frequence}\"\r\n', 0.5),
(278, 'DA104117', 352, '    def __str__(self):\r\n        base_info = super().__str__()\r\n        return f\"{base_info}\\n Fréquence: {self.fréquence}/n typeécran:{self.typeécran}\"\r\n\r\n', 1),
(279, 'DB30758', 352, 'def__str__(self):\r\n    return f \" la référence :{self_refe} la puissance :{self_puis} le poids :{self_pds} le prix :{self_prx} le type : {self_typ} la fréquence : {self_frq} \"', 0.5),
(280, 'DA108545', 355, '    def __str__(self):\r\n        super().__str__() +str(self.__autonomie)+str(self.__kilométrage)', 1),
(281, 'CI3546', 349, 'la puissance inférieure=300\r\nla puissance inférieure=300\r\nla puissance supérieure =1000\r\n', 0.5),
(282, 'VA159550', 354, '    def Rouler(self, distance):\r\n        self._kilométrage += distance\r\n        self._autonomie -= distance\r\n        return f\"le nouveau kilométrage: {self._kilométrage}\"\r\n\r\n    def Charger(self, nbrminute):\r\n        self._autonomie += (nbrminute / 60) * 10\r\n        return f\"la nouvelle autonomie : {self._autonomie}\"', 4),
(283, 'DA109151', 349, '    def ClasseEneergetique(self):\r\n        if self.__puissance < 300:\r\n            return \"class A\"\r\n        elif self.__puissance <= 300 and self.__puissance <= 1000 :\r\n            return \"class B\"\r\n        elif self.__puissance <= 1000 :\r\n            return \"class C\"', 2),
(284, 'VM18941', 348, 'def __str__(self):\r\n    return f\"Reférance :{self.référence}|Puissance {self.puissance} | Poid : {self.poid}| Prix : {self.prix}\"', 1),
(285, 'DB30958', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self,referance,puissance,poid,prix,autonomie,kilometrage):\r\n        AppElectrique.__init__(self,referance,puissance,poid,prix)\r\n        self._l_autonomie = autonomie\r\n        self._kilometrage = kilometrage\r\n\r\n\r\n', 2),
(286, 'VA159550', 355, '    def __str__(self):\r\n        return f\"{super().__str__()} | autonomie: {self._autonomie} | kilométrage: {self._kilométrage}\"', 1),
(287, 'ZG166772', 348, '\r\n    def __str__(self):\r\n        return f\"poids: {self._poids}\\n\" \\\r\n               f\"puissance :{self._puissance}\\n\" \\\r\n               f\" prix :{self._prix}\\n\" \\\r\n               f\"réfèrence: {self._réfèrence}\"\r\nmonapp = AppElectrique(100,100,1234567,1000)\r\nprint(monapp)', 1),
(288, 'CI1143', 353, 'class VeloElec (AppElectrique ):\r\n    def __init__(self.reference.puissance.poid.prix.autonomie._kilométrage):\r\n    super().__init__(self,reference,puissance,poid,prix)\r\n             self._outonomie=outonomie\r\n             self._kilométrage=kilométrage', 2),
(289, 'DA101003', 351, 'class Television(AppElectrique):\r\n    def __init__(self,référence,puissance,poids,prix,type_ecran,Frequence):\r\n        super() __init__(référence,puissance,poids,prix)\r\n        self.type_ecran = type_ecran\r\n        self.Frequence = Frequence\r\nTelevision1 = Television(\"TV123\",200,10,499.99,\"LED\",60)\r\nprint(Television1)', 2),
(290, 'DA105622', 349, 'def ClasseEnnergertique(self):\r\n     if self.puissance <300 :\r\n             return \"Classe A\"\r\n      elif 300<= self.puissance<=\r\n1000:\r\n            return \" Classe B\"\r\n      else:\r\n          return \" Classe C\" \r\n', 1),
(291, 'DA102389', 355, '        def __str__(self):\r\n            return f\"la référence: {self.référence}\\nla puissance:{self.puissance}\\n le poids:{self.poids}\\n le prix:{self.prix}\\nl’autonomie :{self.lautonomie}\\n le kilométrage:{self.kilométrage}\"', 0.5),
(292, 'DA107777', 351, 'class Television ():\r\n    \r\n\r\n def __init__(self,type=LCD ,frequence=enhertz,reference=None,puissance=None,poids=None,prix=None):\r\n   AppElectrique.__init__(self=None,reference=None,puissance=None,poids= None,prix=None)\r\n   self.type = LCD\r\n   self.frequence =enhertz', 2),
(293, 'DA107295', 347, 'class AppElectrique:\r\n    __constructeur = None\r\n    __précisera = None\r\n    __puissance = None\r\n    __poids = None\r\n    def __int__(self,const=__constructeur,préc=__précisera,puis=__puissance,poid=__poids):\r\n        self.__constructeur=const\r\n        self.__précisera=préc\r\n        self.__puissance=puis\r\n        self.__poids=poid\r\n    def __str__(self):\r\n        return f\" {self.__constructeur} | {self.__précisera} | {self.__puissance} | {self.__poids}\"', 1),
(294, 'DB30758', 353, 'class  VeloElec (AppElectrique ) :\r\n    def__init__(self,refe,puis,pds,prx,autono,kelom):\r\n        AppElectrique__init__(self,refe,puis,pds,prx)\r\n        self._l_autonomie= autono\r\n        self__kélometrage = kelom', 2),
(295, 'DA107295', 348, 'class l’appareil:\r\n    def__init__(self,marqque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution\r\n\r\n    def __str__(self):\r\n        return f\"l’appareil de: {self.marque} taille: {self.taille} resolution: {self.resolution}\"', 1),
(296, 'DA106935', 355, '    def __str__(self):\r\n        return AppElectrique.__str__() + f\"l’autonomie: {self.__autonomie} | kilométrage: {self.__kilometrage}\"\r\n', 1),
(297, 'DB30143', 347, 'class AppElectrique :\r\n    _référence = None\r\n    _puissance = None\r\n    _poids = None\r\n    _prix = None\r\n    def __init__(self,r=_référence,p = _puissance,poi = _poids,pri=_prix):\r\n        self._référence =r\r\n        self._puissance = p \r\n        self._poids=poi \r\n        self._prix = pri', 1),
(298, 'CI459', 349, 'class AppElecrtique:\r\n    def __init__(self,referance,puissans,poid,prix)\r\n        self.referance =referance\r\n        self.puissans = puissans\r\n        self.poid =poid\r\n        self.prix =prix\r\n    def __str__(self):\r\n        return f\"\"referance:{self.referance}\r\n        puissans:{self.puissans} W,poid\r\n        {self.poid} prix:{self.prix}\r\n    def class_energetique(self):\r\n        if self.puissans< 300\r\n            return \"class A\"\r\n        elif 300<= self.puissans <= 1000\r\n            return \"claa b\"\r\n        else:\r\n            return \"class c\"\r\n        appariel =AppElecrtique(\"Ref123\",1000,5,10000)\r\n        print(appariel.class_energetique())', 1),
(299, 'DB30143', 348, '    def __str__(self) :\r\n        return f\"{self._référence} | {self._puissance} | {self._poids} | {self._prix}\"', 1),
(300, 'DA107295', 352, 'class télévision:\r\n    def__init__(self,marqque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution\r\n\r\n    def __str__(self):\r\n        return f\"télévision de {self.marque} taille: {self.taille} resolution: {self.resolution}\"', 1),
(301, 'DA104117', 353, 'class VeloElec(AppElectrique ) :\r\n    def __int__(self, référence, puissance, poids,autonomie,kilométrage ):\r\n       super(). __int__( autonomie, puissance,autonomie, kilométrage)\r\n       self. autonomie=autonomie\r\n       self.kilométrage =kilométrage', 2),
(302, 'CB355407', 351, 'class Television(AppElectrique) :\r\n    def __init__(self, référence, puissance, poids, prix, type_écran, fréquence):\r\n        AppElectrique.__init__(self, référence, puissance, poids, prix)\r\n        self._type_écran = type_écran\r\n        self._fréquence = fréquence', 2),
(303, 'DB30143', 349, ' def ClasseEneergetique(self):\r\n        if self._puissance <= 300:\r\n            return \"c\'est la classe A\"\r\n        elif 300<self._puissance <= 1000:\r\n            return \"c\'est la classe B\"\r\n        elif self._puissance > 1000:\r\n            return \"c\'est la classe C\"\r\n        else:\r\n            return \"error\"', 2),
(304, 'CI1143', 355, ' def __str__(self):\r\n        return f\"{self._reference} | {self._puissance} | {self._poids} | {self._prix} | {self._outonomie}| {self._kilométrage}\"', 0.5),
(305, 'DA102534', 356, 'class Program:\r\n    tl = Television(\"JJlm44\", 600,10,\"LED\",800)\r\n    print(tl.__str__(), tl.ClasseEneergetique())\r\n    vE = VeloElec(\"KFg14F\", 400,5,200,1000)\r\n    print(vE.Rouler(20))\r\n    print(vE.Charger(360))\r\n    print(vE.__str__())', 3),
(306, 'DA107777', 348, 'def __str __(self):\r\n return le reference:{self__refenrece } le poid  :\r\n{self__poid }le prix  :{self__prix}', 1),
(307, 'DA106571', 351, 'class Television (AppElectrique):\r\n    def __init__(self,référence=None,puissance=None,poids=None ,prix=None,typedecran =None ,fréquence=None ):\r\n        self._référence=référence\r\n        self._puissance=puissance\r\n        self._poids=poids\r\n        self._prix=prix\r\n        self._typedecran=typedecran\r\n        self._fréquence =fréquence\r\n', 1.5),
(308, 'DB30143', 351, 'class Television (AppElectrique):\r\n    __type_écran = None\r\n    __fréquence=None\r\n    def __init__(self, r=AppElectrique._référence, p=AppElectrique._puissance, poi=AppElectrique._poids, pri=AppElectrique._prix,t=__type_écran,f=__fréquence):\r\n        super().__init__(r, p, poi, pri)\r\n        self.__type_écran  = t \r\n        self.__fréquence = f', 2),
(309, 'DB30143', 352, '    def __str__(self):\r\n        return super().__str__() + f\" | {self.__type_écran} | {self.__fréquence}\"', 1),
(310, 'DA109151', 351, 'class Television(AppElectrique):\r\n    def __init__(self,référence,puissance,poids,prix,type_ecran,frequence):\r\n        super().__init__(référence,puissance,poids,prix)\r\n        self.type_ecran = type_ecran\r\n        self.frequence = frequence', 2),
(311, 'DA107295', 355, 'class vélo électrique:\r\n    def __init__(self,marqque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution\r\n\r\n    def __str__(self):\r\n        return f\"vélo électrique de {self.marque} taille: {self.taille} resolution: {self.resolution}\"', 1),
(312, 'DA101003', 352, 'def __str__(self):\r\n    return (f\"{super().__str__()},\"\r\n            f\"Type decran: {self.type_ecran},Frequence:{self.Frequence}Hz\")\r\nTelevision1 = Television(\"TV123\",200,10,499.99,\"LED\",60)\r\nprint(Television1)', 1),
(313, 'DB30958', 354, '    def Rouler(self,distance):\r\n        self._kilometrage +=distance\r\n        return f\"le nouveau kilomertage\"\r\n     def Charger (self,nbrminute):\r\n     self._l_autonomie +=  (nbrminute*60) * 10\r\n     return f\"la nouvele autonomie est : {self._l_autonomie}\"\r\n\r\n\r\n', 3),
(314, 'CB355407', 352, 'def __str__(self):\r\n        return super().__str__()+\"le type est : \"+str(self._type_écran)+\"la fréquence est : \"+str(self._fréquence)', 1),
(315, 'DA102389', 356, 'class Program :\r\n t1=Television(12,6,123,130,85,156)\r\nt1.__init__()\r\nv1=VeloElec(12,25,123,78,15,63)\r\nv1.Rouler()\r\nv1.charger()\r\nv1.__init__()', 1.5),
(316, 'DA106935', 354, ' def set_autonomie(self,newautonomie):\r\n        self.__autonomie = newautonomie\r\n\r\n    def set_kilometrage(self, newkilometrage):\r\n        self.__kilometrage = newkilometrage\r\n\r\n    def Rouler(self,distance):\r\n        dest = self.__kilometrage + distance\r\n        return self.set_kilometrage(dest)\r\n\r\n    def Charger(self,nbrminute):\r\n        battery = self.__autonomie + (nbrminute / 60) * 10\r\n        return self.set_kilometrage(battery)', 4),
(317, 'DB30143', 353, 'class VeloElec (AppElectrique):\r\n    __autonomie = None\r\n    __kilométrage = None\r\n    def __init__(self,r=AppElectrique._référence, p=AppElectrique._puissance, poi=AppElectrique._poids, pri=AppElectrique._prix,a = __autonomie,k=__kilométrage):\r\n        super().__init__(r, p, poi, pri)\r\n        self.__autonomie =a \r\n        self.__kilométrage = k', 2),
(318, 'DB30143', 354, '   def Rouler (self,distance) :\r\n        self.__kilométrage+=distance\r\n        d = distance/10\r\n        self.__autonomie -= d*(60)\r\n        return self.__kilométrage\r\n    \r\n    \r\n    def Charger (self,nbrminute):\r\n            nbrH= nbrminute/60\r\n            self.__autonomie = nbrH*10\r\n            return self.__autonomie \r\n    ', 4),
(319, 'DB30143', 355, '    def __str__(self):\r\n        return super().__str__() + f\" | {self.__autonomie} | {self.__kilométrage}\"', 1),
(320, 'ZG166772', 351, 'class Television(AppElectrique):\r\n    def __init__(self,poids,puissance,réfèrence,prix,type_decran,fréquence):\r\n        super().__init__(poids,puissance,réfèrence,prix)\r\n        self._type_decran = type_decran\r\n        self._fréquence = fréquence\r\ntele = Television(20,200,600032,6700,\'LCD\',23890)\r\nprint(tele)\r\n', 2),
(321, 'DA107777', 353, 'class  VeloElec  ():\r\n AppElectrique.__init__(self=None,reference=None,puissance=None,poids= None,prix=None):\r\n def __init___(self,lautonomie(exprimeeenkm)=None,kilometrage= None):\r\n          self.lautonomie=lautonomie\r\n          self.kilometrage=kilometrage ', 1),
(322, 'DA105622', 351, 'class Television(AppElectrique):\r\n        def __init__(self, reference,puissance,poids,prix, type_ecran,frequence):\r\n                     super().__init__ (reference,puissance,poids,prix)\r\n                     self.type_ecran = type_ecran\r\n                     self.frequence= frequence', 2),
(323, 'DA109151', 352, '    def __str__(self):\r\n        return f\"{self.type_ecran}\"', 0),
(324, 'DA109151', 353, 'class Veloel(AppElectrique):\r\n    def __init__(self, référence, puissance, poids, prix, type_ecran, frequence,autonomie,kilometrage):\r\n        super().__init__(référence, puissance, poids, prix)\r\n        self.autonomie = autonomie\r\n        self.kilometrage = kilometrage', 2),
(325, 'CB355407', 353, 'class VeloElec(AppElectrique):\r\n    def __init__(self, référence, puissance, poids, prix, autonomie, kilométrage):\r\n       AppElectrique.__init__(self, référence, puissance, poids, prix)\r\n       self._autonomie = autonomie\r\n       self._kilométrage = kilométrage', 2),
(326, 'DA101003', 353, 'class VeloElec(AppElectrique)\r\n    def __init__(self, référence, puissance, poids, prix,autonomie,kilometrage):\r\n        super().__init__(référence,puissance,poids,prix)\r\n        self.autonomie = autonomie\r\n        self.kilometrage = kilometrage\r\nVeloElec1 = VeloElec(\"VE001\",250,15,799.99,50,1000)\r\nprint(VeloElec1)\r\n    ', 2),
(327, 'DB30758', 354, 'def Rouler(self,distance)\r\n    self_kilométrage +=distance\r\n    return f \"le nouveau kilométrage {self_kilométrage} \r\ndef Charger(self,nbrminute)\r\n    self_autonomie += (nbrminute *60 ) *10\r\n    return f \"le nouvelle autonomie {self_autonome}\r\n', 4),
(328, 'DB30758', 355, 'def__str__(self):\r\n    return f \"la référence ::{self_refe} la puissance :{self_puis} le poids :{self_pds} le prix:{self_prx} l\'autonomie : {self_autono} le kilométrage: {self_kelom} \"', 0.5),
(329, 'DA107777', 355, '', 0),
(330, 'CI459', 351, 'class Television (AppElecrtique)\r\n    def __int__(self,referance,pissance,poids,prix,type)\r\n        super().__int__(referance,pissance,poids,prix)\r\n        self.type = type\r\n        self.referance =referance\r\n        televition1 = Television(\"TV123\",200,10,499.99,\"LED\",60)\r\n\r\n\r\n', 2),
(331, 'ZG166772', 352, '    def __str__(self):\r\n        return f\"poids: {self._poids}\\n\" \\\r\n               f\"puissance :{self._puissance}\\n\" \\\r\n               f\"réfèrence : {self._réfèrence}\"\\\r\n               f\" prix :{self._prix}\\n\" \\\r\n               f\"type_decran :{self._type_decran} \"\\\r\n               f\"fréquence : {self._fréquence}\"\\\r\ntele = Television(20,200,600032,6700,\'LCD\',23890)\r\nprint(tele)', 0.5),
(332, 'DA105622', 352, 'def __str__(self):\r\n      return f\"{super().__str__()},\r\ntype d\'ecran: {self.type_ecran} ,\r\nfrequence: {self.frequence} hz\"', 1),
(333, 'VM18941', 349, 'def ClasseEneergetique(self):\r\n    if self.puissance < 300:\r\n        return \"class A\"\r\n    elif 300 <= self.puissance and self.puissance <= 1000 :\r\n        return \"class B\"\r\n    else :\r\n        return \"class c\"\r\nprint(Appareil.ClasseEneergetique)', 2),
(334, 'VM18941', 351, 'class Television(AppElectrique) :\r\n    def __init__(self,référence,puissance,poid,prix,typEcr,freq):\r\n        super()__init__(référence,puissance,poid,prix,typEcr,freq)\r\n        self.typEcr = typeecran\r\n        self.freq = fréquence', 2),
(335, 'DA106571', 353, 'class Television  (AppElectrique):\r\n    def __init__(self, référence=None, puissance=None, poids=None, prix=None,Lautonomie =None,kilométrage=None):\r\n        self._référence = référence\r\n        self._puissance = puissance\r\n        self._poids = poids\r\n        self._prix = prix\r\n        self._lautonomie =Lautonomie\r\n        self._kilométrage = kilométrage\r\n', 1.5),
(336, 'DA106571', 352, '    def __str__(self):\r\n        info = \" \"\r\n        info + __import__(str.AppElectrique)\r\n        info + \"le type d’écran \" +(self._typedecran) +\"//\"\r\n        info + \"la fréquence \" + (self._fréquence) +\"//\"', 1),
(337, 'ZG166772', 353, 'class VeloElec(AppElectrique) :\r\n    def __init__(self,poids,puissance,réfèrence,prix,lautonomie,kilométrage):\r\n        super().__init__(poids,puissance,réfèrence,prix)\r\n        self._lautonomie = lautonomie\r\n        self.kilométrage = kilométrage', 2),
(338, 'DA108545', 354, '    def Rouler (self, distance):\r\n        self.__kilométrage+= distance\r\n    def Charger (self, nbrminute):\r\n        a = (nbrminute*10)/60\r\n        self.__autonomie+a', 3),
(339, 'DB30958', 355, 'def __str__(self):\r\n        return f\"la reference : {self._référence}|| la puissance : {self._puissance}|| le poid : {self._poid} || le prix : {self._prix} || le kilometrage : {self._kilometrage} || l\'autonomie : {self._l_autonomie}\"', 0.5),
(340, 'DA104704', 356, 'from cc1 import AppElectrique, Television, VeloElec\r\n\r\n\r\nclass Program:\r\n    def test(self):\r\n        t1 = Television(\"LCD\", \"90hz\", 400, 1234, \"8kg\", 3500)\r\n        print(t1, t1.ClasseEneergetique())\r\n        v1 = VeloElec(200, 400, 300, 18, 4000, 3500)\r\n        v1.Rouler(200)\r\n        v1.Charger(120)\r\n        print(v1)', 3),
(341, 'DA107295', 353, 'class VeloElec :\r\n    def __init__(self,marque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution', 2),
(342, 'DA101003', 355, 'def __str__(self):\r\n    return (f\"{super().__str__()},\"\r\n            f\"Autonomie:{self.Autonomie}km,kilometrage:{self.kilometrage}km\")\r\nVeloElec1 = VeloElec(\"VE001\",250,15,799.99,50,1000)\r\nprint(VeloElec1)', 1),
(343, 'DB30143', 356, 'class Program :\r\n def test():\r\n    app1= Television(123,300,50,2000,\"LED\",324)\r\n    print(app1)\r\n    print( app1.ClasseEneergetique())\r\n    art1= VeloElec(456,1000,100,5000,3000,90)\r\n    print(art1.Rouler(300))\r\n    print(art1.Charger(120))\r\n    print(art1)\r\n\r\nProgram.test()', 3),
(344, 'VM18941', 352, '    def __str__(self):\r\n        return f\"super().__str__() |type ecran {self.typEcr} | frequance {self.freq}hz\"', 1),
(345, 'CI1143', 349, '        def methodClasseEneergetique(self):\r\n        if self._puissance < 300:\r\n            return\" laclass A\"\r\n        elif 1000 < self._puissance < 300:\r\n            return \"laclasseB\"\r\n        elif self._puissance > 1000:\r\n            return \"laclassC\"', 2),
(346, 'CB355407', 354, '    def Rouler(self, distance):\r\n        return self._kilométrage += distance\r\n    def Charger(self, nbrminute):\r\n        return self._autonomie = nbrminute * 10 / 60', 3),
(347, 'DA105622', 353, 'class VeloElec(AppElectrique):\r\n        def __init__(self, reference,puissance,poids,prix,autonomie,kilometrage):\r\n                    super().__init__(reference,puissance,poids,prix)\r\n                    self.autonomie= autonomie\r\n                    self.kilometrage = kilometrage', 2),
(348, 'DA102389', 349, '    def ClasseEneergetique(self,puissance):\r\n        if self.puissance<300:\r\n            print(\"la classe A\")\r\n        elif self.puissance>=300 and self.puissance>=1000\r\n            print(\"la classe B\")\r\n        elif self.puissance>1000\r\n            print(\"la classe C\")', 2),
(349, 'DA107777', 352, 'def__str___ (self)\r\n  return la reference:{self__reference }lapuissance:{self__pussance}|||le poids=:{self__pois}||le prix :{self__type}||la frequnce{self__frequnce}', 0.5),
(350, 'DB30758', 356, 'class Program\r\n     ', 0),
(351, 'DA108545', 356, '\r\nclass Program\r\ntele=Television(1548,12,66,7000,\"LED\",1234)\r\nprint(tele, tele.ClasseEneergetique)\r\nvelo=VeloElec(321, 54, 14, 3000, 50, 30)\r\nprint(velo,)\r\nvelo.Rouler(15)\r\nvelo.Charger(60)\r\n', 3),
(352, 'DA109151', 355, '    def __str__(self):\r\n        return f\"{super().__str__()}\"\r\n    f\"autonnomie:{self.autonomie}km,kilometrage:{}\"', 1),
(353, 'CI3546', 348, 'réécrire la méthode_str_()donnant les caractéristiques dun electrominagere la date de fin desa  garantie  a partire de date caurante', 0.5),
(354, 'DA106935', 356, 'import Television\r\nimport VeloElec\r\nclass Program:\r\n    def test():\r\n        televition = Television(12,1000,\"tec\",150000,\"hhd\",50)\r\n        print(televition)\r\n        print(televition.ClasseEneergetique())\r\n\r\n        velo = VeloElec(12, 1500, \"good\", 150000, 100, 10)\r\n        print(velo.Rouler(100))\r\n        print(velo.Charger(120))\r\n        print(velo)', 3),
(355, 'DA107295', 349, 'class Eneergetique:\r\n    def __init__(self,marque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution\r\n\r\n\r\n    def __str__(self):\r\n        return f\"l’appareil de: {self.marque} taille: {self.taille} resolution: {self.resolution}\"\r\n\r\n\r\n    def get_marque(self):\r\n        return self.marque\r\n\r\n    def get_taille(self):\r\n        return self.taille\r\n\r\n    def get_superficie(self):\r\n        return self.resolution', 2),
(356, 'VM18941', 353, 'class VeloElec(AppElectrique):\r\n         def __init__(self,réféferance,puissance,poid,prixl’,autonomie ,kilométrage):\r\n                  super()__init__(self,réféferance,puissance,poid,prixl):\r\n                  self.autonomie = aut\r\n                  self.kilométrage = klm', 2),
(357, 'CI459', 353, 'class VeloElect(AppElecrtique)\r\n    def __int__(self,referance,pissance,poids,prix,auoutonomi,kilometrag):\r\n        super().__int__(referance,pissance,poids,prix)\r\n        self.auoutonomi = auoutonomi\r\n        self.kilometrag = kilometrag\r\n        def __str__(self)\r\n            return (f\'\'{}())\"\r\n            f\'\'Aoutomoni : {self.auoutonomi}km\r\n            kilometrag: {self.auoutonomi}\r\n', 2),
(358, 'DA102389', 354, '    def Rouler(self,distance):\r\n        return self.kilométrage+= distance\r\n    def Charger(self,nbrminute):\r\n       V= (nbrminute *10)/6\r\n       self.lautonomie=V', 3),
(359, 'ZG166772', 354, '    def Rouler(self,somme):\r\n        self._lautonomie = self._lautonomie + somme\r\n        print(\"rouler : \" + self.rouler)\r\nAppElectrique.Rouler(50)\r\n\r\ndef charger(self,nb):\r\n       nb h = nb/60\r\n       self._autonomie = nb h * 10\r\n      return self._autonomie\r\nAppElectrique.charger()\r\n\r\n', 3),
(360, 'DA107777', 354, 'def ROuler (self,dictance)\r\n\r\n self__kilomitrage  += distance\r\n return \"le nouveau kilomitrage\"\r\ndef CHarger (self,lautonomie)\r\ndef __lautounomie += (nbminute*60)*10\r\nreturn la nouvelle autonomi est :{self,autonomie}', 3.5),
(361, 'DA105622', 354, 'def rouler(self, distance): \r\n  self.kilometrage +=distance\r\n  return self.kilolmetrage', 2),
(362, 'CI3546', 351, 'réécrire la méthode_str_()donnant les caractéristiques dun electrominagere la date de fin desa  garantie  a partire de date caurant', 0.5),
(363, 'VM18941', 354, 'def Rouler(self,distance):\r\n      self.kilométrage', 0.5),
(364, 'VA159550', 356, 'class Program:\r\n    appTel = Television(12345, 550, 250, 12000, \"LCE\", 700)\r\n    print(appTel)\r\n    appTel.ClasseEneergetique()\r\n    vel = VeloElec(12345, 550, 250, 12000, 10, 30)\r\n    vel.Rouler(9)\r\n    vel.Charger(60)\r\n    print(vel)', 3),
(365, 'DA107295', 351, 'class télévision:\r\n    def __init__(self,marqque,taille,resolution):\r\n       self.marque = marque\r\n       self.taille = taille\r\n       self.resolution = resolution\r\n\r\n    def __str__(self):\r\n        return f\"télévision de {self.marque} taille: {self.taille} resolution: {self.resolution}\"', 1),
(366, 'CI1143', 354, ' def Rouler(self,distance):\r\n         return self.kilométrage+= distance\r\n    def Charger(self,nbrminute):\r\n        return self.autonomie +=nbrminute', 3),
(367, 'CI3546', 352, 'réécrire la méthode_str_()donnant les caractéristiques dun electrominagere la date de fin desa  garantie  a partire de date caurant', 0.5),
(368, 'CB355407', 355, 'def __str__(self):\r\n        return super().__str__()+\" autonomie est : \"+str(self._autonomie)+\" kilométrage est : \"+str(self._kilométrage)', 1),
(369, 'CI3546', 353, 'class veloElec :\r\nrécrire le constructeur(exprimée en km)', 0.5),
(370, 'DA104117', 356, 'class Program:', 0),
(371, 'CI3546', 355, 'réécrire la méthode _str_donnant les caractéristiques d,un vélo électrique  dun electrominagere la date de fin desa  garantie  a partire de date caurant', 0.5),
(372, 'DA104117', 354, ' def Rouler(self):\r\n        today = kilométrage.now()', 0),
(373, 'ZG166772', 355, 'def __str__(self):\r\n    return f\"poids: {self._poids}\\n\" \\\r\n           f\"lautonomie :{self.lautonomie}\\n\" \\\r\n           f\" charger :{self.Charger}\\n\" \\\r\n           f\"réfèrence: {self._réfèrence}\"\r\nmonapp=AppElectrique()', 0.5),
(374, 'VA155381', 329, 'a)  Ecrire la classe « Article ». \r\nkuhdkjrghfdkjgn kjdfhgkjfg', NULL),
(375, 'DA107236', 357, 'class Emploiye :\r\n    def __init__(self,nom,dn,da,salaireBase):\r\n        self._mtle = mtle\r\n        self._nom = nom\r\n        self._dn = dn\r\n        self._da = da\r\n        self._salaireBase = salaireBase\r\n        ', NULL),
(376, 'SH219025', 357, '\r\nclass Employe():\r\n    def __init__(self,mtle,nom,dateNaissance,dateEmbauche,Salairebase ) :\r\n        self._Nom = nom\r\n        self._Matricule = mtle\r\n        self._Date_naissance= dateNaissance\r\n        self._Date_dembauche = dateEmbauche\r\n        self._Salaire_base = Salairebase ', NULL),
(377, 'SH219025', 358, '    def getdateEmbauche(self):\r\n       return self.__dateEmbauche\r\n\r\n    def getdateNaissance(self) :\r\n       return self.__dateNaissance\r\n\r\n       @staticmethod\r\n       def afficherlagedemployé():\r\n           daterecrutement =  dateEmbauche - dateNaissance\r\n           if  daterecrutement >= 16 :\r\n               print(\"valid\")\r\n           else:\r\n                   print(\"lAge doit être supérieur à 16 ans\"  )', NULL),
(378, 'DA107236', 358, '    def getDateEmbauche (self):\r\n        return self.__DateEmbauche\r\n    def getDateNaissance (self):\r\n        return self.__DateNaissance', NULL),
(379, 'SH219025', 361, '    def __str__(self):\r\n        return f\"{self._Nom} - {self._Matricule} - {self._Date_naissance} - {self._Date_dembauche} - {self._Salaire_base}\"', NULL),
(380, 'DA107236', 361, ' def __str__(self):\r\n        return \"Matricule \" - str(self._mtel)-\"Nom: \"- (self._nom)-\" Date de naissance:\"-str(self._dn)-\" Date d’embauche \"-str(self._de)-\"Salaire de base\"-str(self._salaireBase)', NULL),
(381, 'DA107236', 363, '    class Formateur :\r\n        def __init__(self,heureSup,remunerationHSup):\r\n            self._heureSup = heureSup\r\n            self._remunerationHSup = remunerationHSup\r\n            \r\n', NULL),
(382, 'DA107236', 360, '   class Emploiy :\r\n        def __init__(self,nom,salairedebase,tauxIR):\r\n            self._nom = nom\r\n            self._salairedebase = salairedebase\r\n            self._tauxIR = tauxIR\r\n        def  SalaireAPayer(self):\r\n            salaire_net  =  (self._SalaireBase  )  *  (1  - self._tauxIR)\r\n            \r\n            return salaire_net\r\n\r\n', NULL),
(383, 'SH219025', 360, 'class Employe()\r\n   def__init__(self,nom,salairebase,tauxIR) :\r\n      self._nom = nom\r\n      self._salaire = salairebase \r\n      self._tauxIR = tauxIR \r\n   def salairepayer (self) :\r\n       salaire_net = self._salairebase * (1 - self._tauxIR)\r\n       return \r\n         print(\"le salaire net dun employe est\", salaire_net )', NULL),
(384, 'SH219025', 363, 'class Formateur ():\r\n    def __init__(self,heureSup,remunerationHSup ):\r\n        self._nombre_heures = heureSup\r\n        self._rémunération_supplémentaire = remunerationHSup\r\n', NULL),
(385, 'DA107236', 359, 'class Emploiye :\r\n    def __init__(self=None,nom=None,dn=None,da=None,salaireBase=None):\r\n        self._mtle = mtle\r\n        self._nom = nom\r\n        self._dn = dn\r\n        self._da = da\r\n        self._salaireBase = salaireBase', NULL),
(386, 'SH219025', 367, '    def __str__(self):\r\n        return f\"{self._nombre_heures} - {self._rémunération_supplémentaire} ', NULL),
(387, 'DA107236', 362, '    def __eq__(self,other):\r\n        return (self._mtel == other._mtel )\r\n', NULL),
(388, 'SH219025', 359, 'class Employe():\r\n    def __init__(self,mtle=none,nom=none,dateNaissance=none,dateEmbauche=none,Salairebase=none) :\r\n        self._Nom = nom\r\n        self._Matricule = mtle\r\n        self._Date_naissance= dateNaissance\r\n        self._Date_dembauche = dateEmbauche\r\n        self._Salaire_base = Salairebase ', NULL),
(389, 'SH219025', 362, 'def __eq__(self,other) :\r\n   return (self._mtel == other._mtel )', NULL),
(390, 'DA107236', 367, '    def __str__(self):\r\n        super().__str__()', NULL),
(391, 'SH219025', 366, 'class Formateur ():\r\n    def __init__(self,NbrHS,remunerationHSup,SalaireBase ):\r\n        self._nombre_heures =  NbrHS\r\n        self._remunerationHSupe = remunerationHSup\r\n        self._SalaireBase = SalaireBase\r\ndef salairepayer (self) :\r\n    Salaire_net = (SalaireBase + NbrHS  *   remunerationHSup * (1  -  tauxIR )\r\n       return salaire_net', NULL),
(392, 'SH219025', 365, 'class Formateur ():\r\n    def __init__(self,heureSup= none,remunerationHSup=none ):\r\n        self._nombre_heures = heureSup\r\n        self._rémunération_supplémentaire = remunerationHSup\r\n', NULL),
(393, 'DB30759', 357, 'class Employe:\r\n    pass', 1),
(394, 'DB30759', 360, 'def salaire_a_payer(self, taux_R):\r\n        salaire_net = self._salaire_base * (1 - taux_R)\r\n        return salaire_net', 3),
(395, 'DB30759', 361, 'def __str__(self):\r\n        return f\"{self._matricule} - {self._nom} - {self._date_naissance} - {self._date_embauche} - {self._salaire_base}\"', 1),
(396, 'DB30759', 362, 'def __eq__(self, other):\r\n        if isinstance(other, Employe):\r\n            return self._matricule == other._matricule\r\n        return False', 2),
(397, 'DB30759', 363, 'class Formateur(Employe):\r\n    def __init__(self, matricule=None, nom=None, date_naissance=None, date_embauche=None, salaire_base=0, heure_sup=0,\r\n                 remuneration_hsup=120):\r\n        super().__init__(matricule, nom, date_naissance, date_embauche, salaire_base)\r\n        self._heure_sup = heure_sup\r\n        self._remuneration_hsup = remuneration_hsup', 2),
(398, 'DB30759', 364, 'def RemunerationHSup(self):\r\n        return self._remuneration_hsup', 1),
(399, 'DB30759', 366, 'def salaire_a_payer(self, taux_R):\r\n        salaire_net = (self._salaire_base + self._heure_sup * self._remuneration_hsup) * (1 - taux_R)\r\n        return salaire_net', 3),
(400, 'DB30759', 367, 'def __str__(self):\r\n        return f\"{super().__str__()} - {self._heure_sup} - {self._remuneration_hsup}\"', 1),
(401, 'DB30759', 358, 'def date_embauche(self):\r\n        return self._date_embauche\r\n\r\n    def date_embauche(self, value):\r\n        age_at_recrutement = (value - self._date_naissance).days // 365\r\n        if age_at_recrutement < 16:\r\n            print(\"L\'âge doit être supérieur à 16 ans.\")\r\n        else:\r\n            self._date_embauche = value', NULL),
(402, 'DB30759', 359, 'def __init__(self, matricule=\"\", nom=\"\", date_naissance=None, date_embauche=None, salaire_base=0.0):\r\n        self._matricule = matricule\r\n        self._nom = nom\r\n        self._date_naissance = date_naissance\r\n        self._date_embauche = date_embauche\r\n        self._salaire_base = salaire_base', 2),
(403, 'DB30759', 365, 'class Formateur(Employe):\r\n    def __init__(self, matricule=None, nom=None, date_naissance=None, date_embauche=None, salaire_base=0, heure_sup=0,\r\n                 remuneration_hsup=120):\r\n        super().__init__(matricule, nom, date_naissance, date_embauche, salaire_base)\r\n        self._heure_sup = heure_sup\r\n        self._remuneration_hsup = remuneration_hsup', 2),
(404, 'VA154626', 369, 'import re\r\n\r\nclass Article:\r\n    def __init__(self):\r\n        self.__code = re.findall(r&quot;^[ART]+_+[0-9]{5}$&quot;)\r\n        self.__désignation = re.findall(r&quot;^{300}$&quot;)\r\n        self.__prix = re.findall()\r\n        self.__qte = re.findall()\r\n        self.__catégorie = re.findall(r&quot;^(Informatique|Bureautique)$&quot;)\r\n\r\n', 2),
(405, 'DA107236', 369, 'class Article:\r\n    def __init__(self,code,désignation,prix,qte,catégorie):\r\n        self.__code = code\r\n        self.__désignation = désignation\r\n        self.__prix = prix\r\n        self.__qte = qte\r\n        self.__catégorie = catégorie', 1),
(406, 'SH219025', 369, 'class Article :\r\n    def __init__(self, code,désignation,prix,qte,catégorie ):\r\n         self._code = code\r\n         self._designation = désignation\r\n         self._prix =round( prix, 3)\r\n         self._qte =qte\r\n         self._categorie = catégorie\r\n\r\n          if not code.startswith(&amp;amp;amp;quot;ART_&amp;amp;amp;quot;):\r\n            raise error\r\n\r\n         if len(désignation) &amp;amp;amp;gt; 300:\r\n            raise error', 3),
(407, 'DA105449', 371, '    def __str__(self):\r\n        return f&quot;{self.__code};{self.__designation};{self.__prix};{self.__qte}&quot;', NULL),
(408, 'DA107236', 371, ' def __str__(self):\r\n        return f&amp;quot;Code: {self.__code}, Désignation: {self.__désignation}, Prix: {self.__prix}, Qte : {self.__qte}, Catégorie: {self.__catégorie}&amp;quot;\r\n\r\n\r\n', 1),
(409, 'DA105587', 369, 'class Article:\r\n    def __init__(self,cod,des,prx,qte,cat):\r\n        self.__code=cod\r\n        self.__désignations=des\r\n        self.__prix=prx\r\n        self.__qte=qte\r\n        self.__ catégorie=cat\r\n           if len(désignations&gt;300)\r\n            print(&quot;erreur&quot;)', NULL),
(410, 'DB31001', 369, 'class article():\r\n    def __init__(self,c=&amp;amp;quot;&amp;amp;quot;,d=&amp;amp;quot;&amp;amp;quot;,p=&amp;amp;quot;&amp;amp;quot;,qt=&amp;amp;quot;&amp;amp;quot;):\r\n        self.__code=c\r\n        self.__disegnaition=d\r\n        self .prix=p\r\n\r\n        self.qte=qt\r\n\r\nwille true:\r\nres=re.search(r&quot;^[ART]\\_[0001]$&quot;)\r\nwille true:\r\nif res=false:\r\n    raise &quot;erruer&quot;\r\nwille true\r\nrs=re.search(r&quot;^[1-300]&quot;)\r\nif rs=false:\r\n    raise &quot;erruer&quot;\r\nwille true\r\nrese=re.search(r&quot;^[0-9](\\.)[0-9]{3}&quot;)\r\nif rese=false:\r\n    raise &quot;errur&quot;\r\n', 3),
(411, 'DA106939', 369, 'import re\r\nclass Article:\r\n    def __init__(self,code,designation,prix,qte,categorie):\r\n        self.__code = code\r\n        self.__designation = designation\r\n        self.__prix = prix\r\n        self.__qte = qte\r\n        self.__categorie = categorie\r\n    def __str__(self):\r\n        try:\r\n            self.__code(&amp;quot;^[ART]_{6}$&amp;quot;)\r\n            self.__designation = len(self.__designation) &amp;lt; 300\r\n            self.__prix =\r\n            self.__qte &amp;gt;0\r\n            self.__categorie = &amp;quot;Informatique&amp;quot; or &amp;quot;Bureautique&amp;quot;\r\n         except:\r\n            print(&quot;&quot;)\r\n            ', 2),
(412, 'SH219025', 370, 'def get_code(self):\r\n        return self._code\r\n\r\n    def get_designation(self):\r\n        return self._désignation\r\n\r\n    def get_prix(self):\r\n        return self._prix\r\n\r\n    def get_qte(self):\r\n        return self._qte\r\n    \r\n    def get_categorie(self):\r\n        return self._catégorie\r\n    \r\n    def set_designation(self, nw_désignation):\r\n        self._désignation = nw_désignation\r\n\r\n    def set_prix(self, nw_prix):\r\n        self._prix = nw_prix', 2),
(413, 'SH219025', 371, 'def __str__(self):\r\n        return f&amp;amp;amp;quot;{self._code};{self._désignation};{self._prix};{self._qte};{self._catégorie}&amp;amp;amp;quot;', 1);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(414, 'Z673521', 369, 'class Article:\r\n    def __init__(self, c=None, d=None, p=None, q=None, cate=None):\r\n        codeTest = re.search(&quot;^ART_[0-9][0-9][0-9][0-9][1-9]$&quot;, c)\r\n        priceTest = re.search(r&quot;^\\d+\\.\\d{3}$&quot;,p)\r\n        qteTest = re.search(r&quot;^[1-9]+$&quot;, q)\r\n        if codeTest and len(d) &lt;= 300 and priceTest and qteTest and (cate == &quot;Informatique&quot; or cate == &quot;Bureautique&quot;) :\r\n            self.__code = c\r\n            self.__designation = d\r\n            self.__prix = p\r\n            self.__qte = q\r\n            self.__categorie = cate\r\n        else:\r\n            raise ArticleInvalideException()', 3),
(415, 'DA107236', 370, '   def setCode(self,code):\r\n        self.__code = code\r\n        \r\n    def getCode(self):\r\n        return self.__code\r\n    \r\n    def setDésignation(self,désignation):\r\n        self.__désignation = désignation\r\n        \r\n    def getDésignation(self):\r\n        return self.__désignation \r\n    \r\n    def setPrix(self,prix):\r\n        self.__prix = prix \r\n    \r\n    def getPrix(self):\r\n        return self.__prix \r\n    \r\n    def setQte(self,qte):\r\n        self.__qte = qte\r\n        \r\n    def getQte(self):\r\n        return self.__qte\r\n\r\n    def setCatégorie(self, catégorie):\r\n        self.__catégorie = catégorie\r\n\r\n    def getCatégorie(self):\r\n        return self.__catégorie\r\n', 2),
(416, 'CI2877', 369, 'class Article:\r\n    def __init__ (self, code, designation, prix, qte, categorie):\r\n    self.code = code\r\n    self.designation = designation\r\n    self.prix = prix\r\n    self.qte = qte\r\n    self.categorie = categorie\r\n    article =Article (&amp;amp;quot;ART_00001&amp;amp;quot;, &amp;amp;quot;ordinateure portable&amp;amp;quot;,&amp;amp;quot;999.999&amp;amp;quot;,&amp;amp;quot;10&amp;amp;quot;,&amp;amp;quot;Informatique&amp;amp;quot;)', NULL),
(417, 'CI2249', 369, 'class articl():\r\n    def __init__(self,cd,desi,prx,qte,categ):\r\n        self.__code = cd\r\n        self.__designation = desi\r\n        self.__prix = prx\r\n        self.__quantite = qte\r\n        self.__categorie = categ', 3),
(418, 'DA105587', 370, '  \r\n    def getcode(self):\r\n        self.__code\r\n    def setcode(self,code):\r\n        return self.__code=code\r\n\r\n    def getdésignations(self):\r\n        self.__désignations\r\n    def setcode(self,des):\r\n        return self.__désignations=des\r\n\r\n\r\n    def getprix(self):\r\n        self.__prix\r\n    def setcode(self,prix):\r\n        return self.__prix=prix\r\n\r\n    def getqte(self):\r\n        self.__qte\r\n    def setcode(self,qte):\r\n        return self.__qte=qte\r\n\r\n    def getcatégorie(self):\r\n        self.__catégorie\r\n    def setcode(self,cat):\r\n        return self.__catégorie=cat\r\n', NULL),
(419, 'D689477', 372, 'class ArticleInvalideException(Exception):\r\n        def __init__(self, m=&quot;Article est invalid&quot;):\r\n            super().__init__(m)', 2),
(420, 'DA105587', 371, '    def __str__(self):\r\n        return (self.__code+&quot;;&quot;+ self.__désignations+&quot;;&quot;+ self.__prix+&quot;;&quot;+ self.__qte+&quot;;&quot;+ self.__catégorie)', NULL),
(421, 'D689477', 369, 'class Article:\r\n\r\n    __prix = re.search(r&quot;[1-9].{3}&quot;)\r\n    __catgorie = (&quot;informatique &quot;or &quot;Bureautique&quot;)\r\n    __qte = re.search(r&quot;^[1-9]*&quot;)\r\n    num = re.search([A-Z]{3}-[0-9]{5})\r\n    def __init__(self,d = len(d)&gt;300,p = __prix,c = __catgorie,q=__qte):\r\n        self.__code = Article.num\r\n        Article.num+=1\r\n        self.__designation = d\r\n        self.__prix = p\r\n        self.__catgorie = c\r\n        self.__qte = q', 2),
(422, 'Z673521', 370, '    def getCode(self):\r\n        return self.__code\r\n\r\n    def getDesignation(self):\r\n        return self.__designation\r\n\r\n    def getPrix(self):\r\n        return self.__prix\r\n\r\n    def getQte(self):\r\n        return self.__qte\r\n\r\n    def getCategorie(self):\r\n        return self.__categorie\r\n    # =================\r\n    def setCode(self, new):\r\n        self.__code = new\r\n\r\n    def setDesignation(self, new):\r\n        self.__designation = new\r\n\r\n    def setPrix(self, new):\r\n        self.__prix = new\r\n\r\n    def setQte(self, new):\r\n        self.__qte = new\r\n\r\n    def getCategorie(self, new):\r\n        self.__categorie = new', 2),
(423, 'DA105449', 369, 'class Article:\r\n    def __init__(self,code,designation,prix,qte,catégorie):\r\n        self.__code=code\r\n        self.__designation=designation\r\n        self.__prix =prix\r\n        self.__qte=qte\r\n        self.__catégorie =catégorie\r\n', NULL),
(424, 'D689477', 371, '    def __str__(self):\r\n        return f&quot;{self.__code}| {self.__prix}|{self.__catgorie}|{self.__designation}&quot;\r\n', 1),
(425, 'JM103258', 369, '# 1\r\n\r\nclass Article :\r\n    def __init__(self,ch,d,p,q,ca):\r\n        self.__code =ch\r\n        self.__désignation=d\r\n        self.__prix = p\r\n        self.__qte =q\r\n        self.__categorie = ca\r\n\r\n    def code(self):\r\n        import re\r\n        self.__code = &amp;quot;ART_00001&amp;quot;\r\n        res = re.search(r&amp;quot;^([A-Z]{3}\\_|\\-[0-9]{5}$&amp;quot;, self.__code)\r\n        if res:\r\n         res = re.search(r&amp;quot;^([A-Z]{3}\\_|\\-[0-9]{5}$&amp;quot;, self.__code)\r\n        print(res)\r\n    def désignation(self):\r\n        if len(self.__désignation) == 300 :\r\n            print(&amp;quot;est les bien 300 Ca :&amp;quot;,self.__désignation)\r\n\r\n    def prix(self):\r\n        import re\r\n         self.__prix = int(float(&amp;quot;donner un nombre ?&amp;quot;))\r\n            ref= re.compile(r&amp;quot;^([1-9]+\\.[0-9]{3})&amp;quot;,self.__prix)\r\n            if ref:\r\n                ref= re.compile(r&amp;quot;^([1-9]+\\.[0-9]{3})&amp;quot;,self.__prix)\r\n                print(ref)\r\n\r\n    def qte(self):\r\n        if self.__qte &amp;gt;= 0 :\r\n            print(&amp;quot;positif&amp;quot;)\r\n\r\n', 3),
(426, 'D689477', 370, '    def getPrix(self):\r\n        return self.__prix\r\n    def getDesignation(self):\r\n        return self.__designation\r\n    def getCategorie(self):\r\n        return self.__catgorie\r\n    def getCode(self):\r\n        return self.__code\r\n    def setPrix(self,NvrPrix):\r\n        self.__prix = NvrPrix\r\n    def setDes(self,NvrDesi):\r\n        self.__prix = NvrDesi\r\n    def setCate(self,NvrCate):\r\n        self.__catgorie = NvrCate\r\n    def setCode(self,NvrCode):\r\n        self.__code = NvrCode', 2),
(427, 'DA105449', 370, '    def getcode(self):\r\n        return self.code\r\n\r\n    def setcode(self,ncode):\r\n        self.__code=ncode\r\n    def getdésignation(self):\r\n        return  self.__designation\r\n    def setdésignation(self,ndesignation):\r\n        self.__designation =ndesignation\r\n\r\n    def getprix(self):\r\n        return self.__prix\r\n    def setprix(self,nprix):\r\n        self.__prix =nprix\r\n\r\n    def setqte(self):\r\n        return self.__qte\r\n\r\n    def getqte(self, nqte):\r\n        self.__qte = nqte\r\n\r\n    def setcategorie(self):\r\n        return self.catégorie\r\n    def setcategorie(self,ncategorie):\r\n        self.__catégorie =ncategorie', NULL),
(428, 'DA106939', 373, 'from datetime import date\r\nclass Facture :\r\n    collection = []\r\n    def __init__(self,num,date,collection):\r\n        self.__num_facture = num\r\n        self.__date_facture = date\r\n        self.__collection_achats = collection\r\n\r\n    def __str__(self):\r\n        return f&quot;str{self.__num_facture} ; {date.today()} ; {self.__collection_achats}&quot;', 1),
(429, 'Z673521', 371, '    def __str__(self):\r\n        return  f&quot;{self.__code}; {self.__designation}; {self.__prix}; {self.__qte}; {self.__categorie}      \r\n', 1),
(430, 'DA107236', 374, '    def ajouter(self,article):\r\n        if article in self.article:\r\n            print(&quot;il y a l&#039;article !!&quot;)\r\n        else:\r\n            self.article.append(article)', 2),
(431, 'X449131', 371, 'def __str__():\r\n    return f&quot;{self.__designation} ; {self.__prix} ; {self.__qte} ; {self.__categorie}&quot;\r\n', 1),
(432, 'DB31001', 373, 'from datetime import date\r\n\r\nclass Facture:\r\narticle=[]\r\n\r\n\r\n    numero=0\r\n    def __init__(self):\r\n        self.numero_facture=Facture.numero+=1\r\n        self.date_facture=datetime.today\r\n        self.colletion=[article]', 1),
(433, 'CN51111', 371, '\r\n    def __str__(self):\r\n        return f&quot;{self.__code};{self.__designation} ;{self.__prix};{self.__qte}; {self.__categorie} &quot;', 1),
(434, 'X449131', 369, 'import re \r\n\r\nclass Article:\r\n code = 1\r\n    def __init__(self,code,designation = &quot;&quot;,prix=0,qte=0,categorie=None):\r\n        code = Article.code\r\n        Article.code+=1\r\n        self.__designation = designation \r\n        self.__prix = prix\r\n        self.__qte = qte \r\n        self.__categorie = categorie ', 2),
(435, 'X449131', 370, 'def getdesi(self):\r\n    return self.__designation\r\ndef getprix(self):\r\n    return self.__prix\r\ndef getqte(self):\r\n    return self.__qte\r\ndef getcategorie(self):\r\n    return self.__categorie\r\n\r\ndef set_desi(self,value):\r\n    value = self.__designation\r\ndef setdesi(self,new):\r\n    new = self.__designation\r\ndef setprix(self,l):\r\n    l = self.__prix\r\ndef setqte(self,b):\r\n    b = self.__qte\r\ndef setcategorie(self,f):\r\n    f = self.__categorie', 2),
(436, 'DA105587', 374, 'def Ajouter(self,article):\r\n    if article in self.articles:\r\n        print(&amp;quot;deja exist&amp;quot;)\r\n    else:\r\n          self.articles.append(article)', NULL),
(437, 'DB31001', 370, 'def get_code(self):\r\n        return self.__code\r\n\r\n\r\ndef set_code(self, newcode):\r\n    self.__code = newcode\r\n\r\ndef get__desegnaition(self):\r\n        return self.__desegnaition\r\n\r\n\r\ndef set_prix(self, newdes):\r\n    def get__desegnaition(self):\r\n        return self.__desegnaition\r\n\r\n\r\ndef set_prix(self, newprix):\r\n    self.__code = newprix\r\n\r\n', 2),
(438, 'Z673521', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.message = &quot;l’article est invalide&quot;', 2),
(439, 'VA154626', 370, '    def getcode(self):\r\n        return self.__code\r\n    def getdesi(self):\r\n        return self.__désignation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getqte(self):\r\n        return self.__qte\r\n    def getcate(self):\r\n        return self.__catégorie\r\n\r\n---------------------------------------\r\n\r\n    def setcode(self,nvcode):\r\n        self.__code = nvcode\r\n    def setdesi(self,nvdesi):\r\n        self.__désignation = nvdesi\r\n    def setprix(self,nvpri):\r\n        self.__prix = nvpri\r\n    def setqte(self,nvqte):\r\n        self.__qte = nvqte\r\n    def setcate(self,nvcate):\r\n        self.__catégorie = nvcate', 2),
(440, 'DA107236', 372, '    class ArticleInvalideException(Exeption):\r\n        def __init__(self,message=&amp;quot;l&amp;#039;article est invalide&amp;quot;):\r\n            self.message = message\r\n        super().__init__(self.message)', 2),
(441, 'JM103258', 370, '    def getPrix(self):\r\n        return self.__prix\r\n    def setPrix(self,n):\r\n        self.__prix = n\r\n\r\n\r\n    def getQte(self):\r\n        return self.__qte\r\n\r\n\r\n    def setQte(self, o):\r\n        self.__qte = o', 2),
(442, 'DB31001', 371, '   def __str__(self,):\r\n       return f&#039;code&#039;{self.__code} ;&#039;disegnaition&#039;{self.__desegnaition} ;&#039;prix&#039;{self.__prix} ;&#039;qte&#039;{self.qte}\r\n', 1),
(443, 'CI2249', 370, '  def get_cd(self):\r\n        return self._cd\r\n\r\n    def get_desi(self):\r\n        return self._desi\r\n\r\n    def get_prx(self):\r\n        return self._prx\r\n  def get_qte(self):\r\n        return self._qte\r\n\r\n    def get_categ(self):\r\n        return self._categ\r\n  def get_cd(self):\r\n        return self._cd\r\n\r\n    def get_desi(self):\r\n        return self._desi\r\n\r\n    def get_prx(self):\r\n        return self._prx\r\n  def get_qte(self):\r\n        return self._qte\r\n\r\n    def get_categ(self):\r\n        return self._categ\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n    \r\n    ', 2),
(444, 'CN51111', 370, '    def getcode(self):\r\n        return self.__code\r\n    def setcode(self,new):\r\n        self.__code=new\r\n    def getdesigniation(self):\r\n        return self.__designation\r\n    def setdesignation(self,new):\r\n        self.__designation=new\r\n\r\n    def getprix(self):\r\n        return self.__prix\r\n\r\n    def setprix(self, new):\r\n        self.__prix = new\r\n    def getqte(self):\r\n        return self.__qte\r\n\r\n    def setqte(self, new):\r\n        self.__qte = new\r\n    def getcategorie(self):\r\n        return self.__categorie\r\n\r\n    def setcategorie(self, new):\r\n        self.__categorie = new', 2),
(445, 'VA154626', 371, '    def __str__(self):\r\n        info = &quot;&quot;\r\n        info += &quot;code&quot; + &quot;;&quot; + Article.getcode() + &quot;;&quot;\r\n        info += &quot;designation&quot; + &quot;;&quot; + Article.getdesi() + &quot;;&quot;\r\n        info += &quot;price&quot; + &quot;;&quot; + Article.getprix() + &quot;;&quot;\r\n        info += &quot;Qte&quot; + &quot;;&quot; + Article.getqte() + &quot;;&quot;\r\n        info += &quot;categorie&quot; + &quot;;&quot; + Article.getcate() + &quot;;&quot;\r\n        return info', 1),
(446, 'VA154626', 373, 'from date import datetime\r\n\r\nclass Facture:\r\n    cpt = 1\r\n    l = []\r\n    def __init__(self):\r\n        self.numfact = Facture.cpt\r\n        self.date = date.today()\r\n        Facture.cpt += 1\r\n        self.coll = l', 1),
(447, 'JM103258', 371, '    def __str__(self):\r\n        return f&amp;amp;amp;quot;{self.__code} ; {self.__désignation} ; {self.__prix} ; {self.__qte}&amp;amp;amp;quot;', 1),
(448, 'VA154626', 375, 'sum = 0\r\n    def montant(self):\r\n        for i in l:\r\n            sum += l[i]\r\n        return sum', 0.5),
(449, 'DA104711', 370, ' def getcode(self):\r\n        return self.__code\r\n\r\n\r\ndef getdesiniation(self):\r\n    return self.__designation\r\n  def getprix(self):\r\n        return  self.__prix\r\n  def getqte(self):\r\n        return   self.__qte\r\n  def getcategorie(self):\r\n        return   self.__catégorie\r\ndef setcode(self,newcod):\r\n    self.__code = newcod\r\n\r\ndef setprix(self,newdesiniation):\r\n   self.__designation = newdesiniation\r\n  def setprix(self,neworix):\r\n       self.__prix = neworix\r\n  def setqte(self,newqte):\r\n      self.__qte = newqte\r\n  def setcategorie(self,necate):\r\n    self.__catégorie = necate\r\n', 2),
(450, 'CI2249', 371, ' def __str__(self):\r\n        return f&#039;{self._code}; {self._designation}; {self._prix}; {self._categorie};{self._quantite}&#039;', 1),
(451, 'Z673521', 373, 'class Facture:\r\n    number = 1\r\n    listAricles = []\r\n    def __init__(self):\r\n        self.__numFacture = Facture.number\r\n        Facture.number += 1\r\n        self.__datFActure = datetime.now()', 1),
(452, 'VA154626', 376, '    def Enregistrer_Articles(self):\r\n        with open(&#039;facture.txt&#039;,&#039;a&#039;) as fichier:\r\n            fichier.write(self.__str__()+&quot;\\n&quot;)', 1),
(453, 'SH219025', 374, ' def ajouter(self, article):\r\n    for aticle in self.articles\r\n        if article_code == code \r\n            print(&amp;quot;il y a deja &amp;quot;)\r\n        else:\r\n            self.articles.append(article)\r\n', 1),
(454, 'JM103258', 372, '    def prix(self):\r\n        import re\r\n         self.__prix = int(float(&amp;amp;quot;donner un nombre ?&amp;amp;quot;))\r\n            ref= re.compile(r&amp;amp;quot;^([1-9]+\\.[0-9]{3})&amp;amp;quot;,self.__prix)\r\n            if ref:\r\n                ref= re.compile(r&amp;amp;quot;^([1-9]+\\.[0-9]{3})&amp;amp;quot;,self.__prix)\r\n                print(ref)\r\n            raise ArticleInvalideException()', 0.5),
(455, 'CN51111', 369, 'import re\r\nclass Article:\r\n    def __init__(self,res,ds,pri,qte,cat):\r\n\r\n        res =  re.search(&amp;quot;[A-z]{3}_[0-9]{5}$&amp;quot;,res)\r\n        if res and len(ds) &amp;lt; 300  and (pri,3) and qte&amp;gt;0 and cat == &amp;quot;Informatique&amp;quot; or &amp;quot;Bureautique&amp;quot;:\r\n            self.__code = res\r\n            self.__designation = ds\r\n            self.__prix = pri\r\n            self.__qte = qte\r\n            self.__categorie = cat\r\n        else:\r\n            raise ArticleInvalideException()', 3),
(456, 'DA104711', 369, 'class Article:\r\n    \r\n        def __init__(self, code, designation, prix, qte, ):\r\n\r\n            code = input(&quot;donner le code &quot;)\r\n            designation = input(&#039;donner un désignation :&#039;)\r\n            qte = int(input(&#039;donner la contiter&#039;))\r\n            categogie = input(&quot;donner la catégorie &quot;)\r\n            res2 = re.search(r&#039;^(Informatique | Bureautique )$&#039;, categogie)\r\n            res = re.search(r&#039;^[ART_][0-1]{5}&#039;, code)\r\n            if res:\r\n                print(&#039;valid&#039;)\r\n\r\n            elif len(designation) &gt; 300 and len(designation) &lt; 0:\r\n                raise ArticleInvalideException\r\n\r\n            elif qte &lt; 0:\r\n                print(&quot;qte must be positive &quot;)\r\n\r\n            elif res2:\r\n                print(&#039;valid&#039;)\r\n\r\n            else:\r\n                self.__code = code\r\n                self.__designation = designation\r\n                self.__prix = prix\r\n                self.__qte = qte\r\n                self.__categorie = categogie\r\n', 3),
(457, 'D689477', 373, 'class Facture(Article):\r\n    numero = 1\r\n    article =[]\r\n    def __init__(self):\r\n        self.numero = Facture.numero\r\n        Facture.numero +=1\r\n        self.date = datetime.today()\r\n', 1),
(458, 'DB31001', 374, 'def article():\r\n    collection_art=[]\r\n    for i in range collection_art:\r\n        if obj==collection_art:\r\n            break\r\n        else:\r\n            collection_art.append(obj) \r\n', 2),
(459, 'DA106939', 371, '    def __str__(self):\r\n        return f&quot;str{self.__code} ; {self.__designation} ; str{self.__prix} ; str{ self.__qte} ; {self.__categorie}&quot;', 1),
(460, 'DA104711', 371, '    def __str__(self):\r\n        return f&amp;quot;{self.__code} .{self.__designation} .{self.__prix} .{self.__qte} .{self.__catégorie} . &amp;quot;', 1),
(461, 'CI2249', 373, 'from datetime import date\r\nclass facture():\r\n    article = []\r\n    num = 1\r\n\r\n    def __init__(self,num,date):\r\n       self._num = num\r\n       self._date = date.today()\r\n     \r\n       facture.num += 1', 1),
(462, 'CI2249', 372, 'import re \r\ndef articleInvalideException()\r\ntry:\r\n    def valider(self):\r\n        cd = re.compile(r&amp;#039;^([A-Z]+)|[-]|[0-9]+(1)$&amp;#039;)\r\n        pre = re.compile(r&amp;#039;^([0-9]+)|[,]|[0-9](3)$&amp;#039;)\r\n        cat = re.compile(r&amp;#039;[Informatique]|[Bureautique]$&amp;#039;)\r\n        if cd.match(cd):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n\r\n    def validate(designation):\r\n        if len(designation) &amp;lt; 300:\r\n            return True\r\n        else:\r\n                return False\r\nexcept Exception:\r\n    raise (&amp;quot;something wet wrong&amp;quot;)\r\n', 2),
(463, 'SH219025', 375, '    def montant_facture(self):\r\n        montant_total = 0\r\n        for article in self.articles:\r\n            montant_total += article.prix * article.qte\r\n        return montant_total', 2),
(464, 'DA106939', 377, '    def __str__(self):\r\n        return f&quot;Numéro facture {self.__num_facture} date facture {date.today()} \\n Liste des articles &quot;', 1),
(465, 'CI1417', 369, 'class Articl():\r\n\r\n    def __init__(self,code,designation,prix,qte,categorie):\r\n\r\n\r\n        self.__code = code\r\n        self.__designation = designation[:300]\r\n        self.__prix = round(prix,3)\r\n        self.__qte = qte\r\n        self.__categorie = categorie\r\n        if categorie in [&quot;informatique&quot; , &quot;bureautique&quot;]', 2),
(466, 'VA154626', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.msg = &quot;Erreur !!!&quot;', 2),
(467, 'DA105115', 370, '    def get_code(self):\r\n        return self.__code\r\n    def get_designation(self):\r\n        return self.__designation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getqte(self):\r\n        return  self.__qte\r\n    def getcategorie(self):\r\n       return self.__categorie\r\n\r\n    def set_code(self,new):\r\n        self.__code =new\r\n    def set_designation(self,new):\r\n        self.__designation=new\r\n    def setprix(self,new):\r\n         self.__prix=new\r\n    def setqte(self,new):\r\n         self.__qte=new\r\n    def setcategorie(self,new):\r\n       self.__categorie=new', 2),
(468, 'DA102284', 369, 'import re\r\n\r\nclass Article:\r\n    def __init__(self,code=None,desi=None,prix=None,qte=None,categorie=None):\r\n        self._code =code\r\n        self._designation =desi\r\n        self._prix =prix\r\n        self._qte=qte\r\n        self._categorie= categorie\r\n        x = self._code\r\n        if x:\r\n            re.search(&quot;^ART.*0...1$&quot;,x)\r\n            print(&quot;code valide&quot;)\r\n        else:\r\n            print(&quot;code non valide&quot;)\r\n\r\n        t = self._designation\r\n        if t:\r\n            re.search(&quot;[a-zA-Z](300)&quot;,t)\r\n            print(&quot;pass&quot;)\r\n        else:\r\n            print(&quot;depasser&quot;)\r\n', NULL),
(469, 'DA105115', 371, '    def __str__(self):\r\n        info = &quot;&quot;\r\n        info += &quot;fuctore&quot;\r\n        info += f&quot;code : {self.__code} ;&quot;\r\n        info += f&quot;designation : {self.__designation};&quot;\r\n        info += f&quot;prix : {self.__prix};&quot;\r\n        info += f&quot;qte : {self.__qte};&quot;\r\n        info += f&quot;categorie : {self.__categorie};&quot;\r\n        return info', 1),
(470, 'CN51111', 373, 'from  datetime import datetime\r\nclass Facture:\r\n    num = 1\r\n    date = datetime.today()\r\n    art = []\r\n    def __init__(self):\r\n        self.__num = Facture.num\r\n        Facture.num+=1\r\n        self.__date = Facture.date\r\n        self.__listedart = Facture.art', 1),
(471, 'DA106939', 375, 'def Montant_facture(self):\r\n    return self.__qte * self.__prix', 1),
(472, 'DA105115', 369, 'class artical :\r\n    def __init__(self,cod=None,designation=None, prix=None,qte=None,categorie=None ):\r\n        self.__code=cod\r\n        self.__designation=designation\r\n        self.__prix=prix\r\n        self.__qte=qte\r\n        self.__categorie=categorie', 1),
(473, 'DA102284', 370, '    def getcode(self):\r\n        return self._code\r\n    def getdesignation(self):\r\n        return self._designation\r\n    def setdesignation(self,d):\r\n        self._designation=d\r\n    def getprix(self):\r\n     return self._prix\r\n    def setprix(self,p):\r\n        self._prix = p\r\n\r\n    def getqte(self):\r\n        return self._qte\r\n    def setqte(self,q):\r\n        self._qte=q\r\n\r\n    def getcategorie(self):\r\n        return self._categorie\r\n    def setcategorie(self,c):\r\n        self._categorie=c\r\n', NULL),
(474, 'DA102284', 371, '    def __str__(self):\r\n        return f&quot;code is ;{self._code}; desination ;{self._designation }; prix ;{self._prix}; lq qte ;{self._qte};categorie;{self._categorie} &quot;\r\n', NULL),
(475, 'DA104711', 373, 'class Facture:\r\n    listeDachate = []\r\n    numFacture = 0\r\n    def __init__(self):\r\n        self._facture = Facture.numFacture\r\n        Facture.numFacture+=1\r\n        self._date = date.today()\r\n    ', 1),
(476, 'CI1417', 370, '    def getcode(self):\r\n        return self.__code\r\n\r\n    def getdesignation(self):\r\n        return self.__designation\r\n\r\n    def getprinx(self):\r\n        return self.__prix\r\n\r\n    def getqte(self):\r\n        return self.__qte\r\n\r\n    def getcateg(self):\r\n        return self.__prix\r\n\r\n    def setcode(self,new):\r\n        new = self.__code\r\n\r\n    def setdesignation(self,new):\r\n        new = self.__designation\r\n\r\n    def setprix(self,new):\r\n        new = self.__prix\r\n\r\n    def setqte(self,new):\r\n        new = self.__qte\r\n\r\n    def setcategorie(self,new):\r\n        new = self.__categorie', 2),
(477, 'SH219025', 372, 'class ArticleInvalideException(Exception)\r\n     def __init__(self,message=&amp;amp;quot;l’article   est invalide&amp;amp;quot;\r\n           self.message\r\n     super().__init__(self.message)', 2),
(478, 'CI2877', 370, 'def getcode (self):\r\n    return self.__code\r\n    def setDésignation (self,désignation):\r\n        self.__désignation =,désignation\r\n    self.__désignation(self):\r\n    return self.__désignation\r\ndef setPrix(self, prix):\r\n    self.__prix = prix\r\n    def getPrix(self):\r\n        return self.__prix\r\n    def setQte (self,qte):\r\n        self.__qte = qte\r\n        def getQte(self):\r\n            return self.__qte\r\n', NULL),
(479, 'CN51111', 374, '    @staticmethod\r\n    def Ajouter(article):\r\n        if article not in Facture.art:\r\n            Facture.art.append(article)\r\n        else:\r\n            print(&quot;erreur&quot;)', 2),
(480, 'CI2249', 374, 'def ajouter(articl):\r\n    articl = int(input(&quot;donner larticle que tu veux ajouter&quot;))\r\n    for i in range(len(collection)):\r\n        if articl = collection[i]:\r\n        raise &#039;article deja exister&#039;\r\n    else:\r\n        collection.append(articl)', 2),
(481, 'D689477', 374, '    def ajouter_un_article(Art):\r\n        if(isinstance(Art,Article)):\r\n            Facture.article.append(art)\r\n            print(&quot;ajouter bien&quot;)\r\n        else:\r\n            print(&quot;erreur&quot;)\r\n', 1.5),
(482, 'DA105115', 373, 'from datetime import date\r\nclass Facture:\r\n    articale=[]\r\n    num=1\r\n    def __init__(self):\r\n        self.Numero=Facture.num\r\n        self.date=date.today()\r\n        Facture.num+=1', 1),
(483, 'DA105587', 375, '\r\ndef Montant_facture(self):\r\n    montantTotal=0\r\nfor article in self.articles:\r\n     montantTotal+=article.prix * article.qte\r\nreturn montantTotal', NULL),
(484, 'Z673521', 374, '    def ajouter(self, article):\r\n        if not Facture.ArcticleExist(article):\r\n            Facture.listAricles.append(article)\r\n        else:\r\n            print(&quot;article deja exist!!!&quot;)\r\n\r\n    @staticmethod\r\n    def ArcticleExist(artic):\r\n        for art in Facture.listAricles:\r\n            if art.getCode() == artic.getCode():\r\n                return True\r\n        return False', 2),
(485, 'DA107236', 373, 'from datetime import date\r\nclass Facture :\r\n        article = []\r\n        numero = 1\r\n        \r\n        def __init__(self):\r\n            self.numeroFacture = Facture.numero\r\n            self.dateFacture = date.today()\r\n            Facture.numero += 1\r\n', 1),
(486, 'CI2877', 373, 'from datetime import date\r\nclass Facture:\r\narticle = [ ]\r\nnum = 1 \r\ndef __init__(self):\r\nself.numeroF = Facture.num\r\nself.dateF = date.today()\r\nFacture.num+=1', NULL),
(487, 'X449131', 373, 'from datetime import date\r\nclass Facture:\r\n Num = 1\r\n collectionachats = []\r\n    def __init__(self):\r\n        self.num = Facture.Numf\r\n        Facture.Num+=1\r\n        self.dateF = date.today()', 1),
(488, 'DA105449', 373, 'class Facture:\r\n    list = []\r\n    num=1\r\n    def __init__(self):\r\n        self.numerof=Facture.num\r\n        self.datef=date.today()\r\n        Facture.num+=1', NULL),
(489, 'JM103258', 373, 'from datetime import date\r\nclass Facture :\r\n p = []\r\n num  = 1\r\n def __init__(self,Nu):\r\n     self.NuméroF = Nu.num\r\n     self.DateF = date.today()\r\n     Nu.num += 1', 1),
(490, 'Z673521', 375, '@staticmethod\r\n    def montant_facture():\r\n        montant = 0\r\n        for art in Facture.listAricles:\r\n            montant += art.getPrix()\r\n        return montant', 2),
(491, 'DA107633', 373, 'from datetime import date\r\nclass Facture:\r\n\r\n\r\n    articles = []\r\n    num = 1\r\n    def __init__(self ,num , dat ,cl):\r\n        self.Numero = Facture.num\r\n        self.Date = date.today()\r\n        Facture.num+=1', 1),
(492, 'CI1417', 371, '\r\n    def __str__(self):\r\n        return f&quot;{self.__code} ; {self.__designation} ; {self.__prix} ; {self.__qte} ; {self.__categorie}&quot;', 1),
(493, 'SH219025', 373, 'class Facture\r\n    num = 0\r\n    \r\n    def __init__(self, ):\r\n       \r\n        self.numero_facture = Facture.num\r\n        self.date_facture = date.today()\r\n         Facture.num += 1\r\n\r\n', 1),
(494, 'CN51111', 377, '    def __str__(self):\r\n        return f&amp;quot;Numéro facture {self.__num}   date facture {self.__date} \\n {self.__listedart} \\n Désignation       prix(en DH)       quantité     prix Total\\n{self.getdesigniation()}    {self.getprix()}  {self.getqte()}   {self.getprix()}\\nIMPRIMANTE    1500, 003    10    48004, 008\\n Montant de la facture: {self.Montant_facture()} DH.&amp;quot;\r\n \r\n', 2),
(495, 'DA107633', 369, '\r\nimport re\r\n\r\n\r\nclass Article:\r\n    def __init__(self, c, des, px, qte, cat):\r\n        self.code = c\r\n        self.designation = des\r\n        self.prix = px\r\n        self.quantite = qte\r\n        self.categorie = cat\r\n\r\n    def __str__(self):\r\n        return f&quot;{self.code};{self.designation };{self.prix};{self.quantite};{self.categorie }&quot;\r\n\r\n        try:\r\n            self.code = re.search(&quot;^([A-Z]{3}_(\\d{5})&quot;,code)\r\n            self.designation &gt; len(300)\r\n            self.quantite &gt;= 0\r\n            self.categorie == Informatique or  Bureautique\r\n        except ValueError as e:\r\n            print(e)\r\n        else:\r\n            pass', 3),
(496, 'DB31001', 375, 'def mantant_facture():\r\n    res=0\r\n    total=0\r\n    for i in facture:\r\n        total+=get_prix\r\n    return total\r\n', 1),
(497, 'DA105587', 373, 'class Facture:\r\n    def __init__(self,nf,df=date.today(),ca):\r\n        self.__NumFacture =nf\r\n        self.__DateFacture  = df\r\n        self.__CollectionAchats  = ca', NULL),
(498, 'DA104711', 374, ' def Aouter(articel):\r\n       if isinstance(Facture.listeDachate,articel):\r\n           print(&amp;quot;l article deja exicte...&amp;quot;)\r\n       else:\r\n           Facture.listeDachate.append(articel)', 1),
(499, 'DA102284', 372, '   class ArticleInvalideException(Exeption):\r\n        def __init__(self,z=&quot;invalid&quot;):\r\n            super().__init__(z)\r\n', NULL),
(500, 'VA154626', 374, '    def addlist(self):\r\n        if i in l:\r\n            Facture.l.append(Facture.__init__())\r\n        else:\r\n            raise ArticleInvalideException()', 1),
(501, 'CI1417', 373, 'from datetime import date\r\nclass Facture():\r\n    cpt = 1\r\n    list = []\r\n    def __init__(self, ):\r\n       self.__Numero_facture = Facture.cpt\r\n       self.__Date_facture = date.today()\r\n       self.__Collectio_achats = Facture.list\r\n        Facture.cpt+=1', 1),
(502, 'DA102284', 373, 'from  datetime import date\r\nclass Facture:\r\n    article =[]\r\n    num =1\r\n    def __init__(self):\r\n        self.numract=Facture.num\r\n        self.datefact=date.today()\r\n        Facture.num+=1', NULL),
(503, 'DA106939', 374, 'def Ajouter(Article):\r\n    try:\r\n        articles = []\r\n        for i in range (len(articles)):\r\n            articles.append(Article)\r\n    except:\r\n        print(&quot;article ajouter !!&quot;)\r\n        \r\n    else:\r\n        print(&quot;erreur !!&quot;)\r\n    finally:\r\n        print(&quot;fin de programme&quot;)', 1),
(504, 'D689477', 375, '    @staticmethod\r\n    def Montant_facture():\r\n        prix = 0\r\n        for qte in Facture.article:\r\n            prix += qte\r\n', 1),
(505, 'DA107633', 375, 'def Mantant_facture(self):\r\n      return self.__qte * self.__prix', 1),
(506, 'DB31001', 372, 'class  ArticleInvalideException():\r\n    raise erticle est invalide\r\n', 1),
(507, 'DA107236', 375, '    def Montant_facture(self):\r\n            montant_totale = 0\r\n            for article in self.article:\r\n                montant_totale += article.prix * article_qte\r\n                return montant_totale', 2),
(508, 'CI2249', 375, 'articles = []\r\nmontant = 0\r\ndef Mantant_facture():\r\n    for i in range(len(articles)):\r\n        montant = montant+ articles[i]\r\n    return montant', 1),
(509, 'CN51111', 372, 'class ArticleInvalideException(Exeption):\r\n    def getMessage(self):\r\n        return  &quot;l’article   est invalide&quot;', 2),
(510, 'JM103258', 374, ' @staticmethod\r\n def Ajouter(m):\r\n     for i in p:\r\n         p.append(m[i])\r\n ', 1),
(511, 'DA104711', 375, '    def Montant_Fcture(self):\r\n        s =0\r\n        for i in Facture.listeDachate:\r\n            s+=Article.getprix()\r\n        return s   \r\n        ', 2),
(512, 'DA105115', 374, '@staticmethod\r\ndef Ajouter (Article):\r\n    if isinstance(Facture.articales):\r\n        print(&quot;articale deje exict&quot;)\r\n    else:\r\n        Facture.articales.append(Article)', 1),
(513, 'DA105449', 374, ' def ajouterarticle(self,articl):\r\n        list.append(articl)', NULL),
(514, 'JM103258', 375, ' def  Montant_facture(self):\r\n     return Facture.__init__()\r\n', 0.5),
(515, 'VA154626', 377, '    def prixtot(self):\r\n        return Article.getprix() * Article.getqte()   \r\n\r\n def __str__(self):\r\n        return (f&amp;quot;designation | prix(en DH) | Qte | prix total&amp;quot;\r\n                f&amp;quot;{Article.getdesi()} | {Article.getprix()} | {Article.getqte()} | {Article.prixtot()}&amp;quot;\r\n                f&amp;quot; Montant de la facture {Article.montant()}&amp;quot;)', 1),
(516, 'DA107633', 370, '    def __getCode__(self):\r\n        return self.code\r\n    def __getPrix__(self):\r\n        return self.prix\r\n    def __getquantite__(self):\r\n        return self.quantite\r\n\r\n    def __getcategorie__(self):\r\n        return self.categorie\r\n    def __setcode__(self):\r\n        code = self.code\r\n    def __setPRIX__(self):\r\n        px = self.prix\r\n    def __setquantite__(self):\r\n        qte = self.quantite\r\n    ', 2),
(517, 'DA105449', 372, 'class  ArticleInvalideException(Exception) :\r\n    print(&quot;l’article   est invalide&quot;)', NULL),
(518, 'DA107633', 371, ' def __str__(self):\r\n        return f&quot;{self.code};{self.designation };{self.prix};{self.quantite};{self.categorie }&quot;\r\n', 1),
(519, 'DA106939', 370, '    def __getCode__(self):\r\n        return self.__code\r\n\r\n    def __getDesignation__(self):\r\n        return self.__designation\r\n\r\n    def __getPrix__(self):\r\n        return self.__prix\r\n\r\n    def __getQte__(self):\r\n        return self.__qte\r\n\r\n    def __getCategorie__(self):\r\n        return self.__categorie\r\n\r\n    def __setCode__(self,c):\r\n        c = self.__code\r\n    def __setDesignation__(self,d):\r\n        d = self.__designation\r\n        \r\n    def __setPrix__(self,p):\r\n        p = self.__prix\r\n\r\n    def __setQte__(self, q):\r\n        q = self.__qte\r\n        \r\n    def __setCategorie__(self, c):\r\n        c = self.__categorie', 2),
(520, 'D689477', 376, '    @staticmethod\r\n    def ajoutertxt():\r\n        with open(&amp;#039;ajouter.txt&amp;#039;, &amp;#039;a&amp;#039;) as file:\r\n            file.write(self.__str__() + &amp;#039;\\n&amp;#039;)\r\n\r\n', 1),
(521, 'JM103258', 376, ' def Enregistrer_Articles(self,anas):\r\n     with open(&amp;amp;quot;anas.txt&amp;amp;quot;,&amp;amp;quot;w&amp;amp;quot;) as file:\r\n         r = file.write(p)\r\n         print(r)', 1.5),
(522, 'D689477', 377, ' def __str__(self):\r\n        return f&quot;Numéro facture{self.num};date facture{self.date}+\\n+{ajouter_un_article}&quot;\r\n', 0.5),
(523, 'CI1417', 372, 'class ArctcleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.msg = &quot;Article invalide&quot;', 2),
(524, 'DA104864', 369, 'class Article:\r\n    def __init__(self, prix, code, designation, qte, categorie):\r\n        self.__code = code\r\n        res = re.search(r&quot;^ART_\\d{5}$&quot;, self.__code)\r\n        if res:\r\n            print(&quot;valid&quot;)\r\n        else:\r\n            raise Articleinvalideexeption\r\n        self.__designation = designation\r\n        if len(self.__designation) &gt;300:\r\n            raise Articleinvalideexeption\r\n        self.__prix = prix\r\n        ress = re.search(r&quot;^\\d+,\\d{3}&quot;, self.__code)\r\n        if ress:\r\n            print(&quot;valid&quot;)\r\n        else:\r\n            raise Articleinvalideexeption\r\n        self.__qte = qte\r\n        if self.__qte &lt;0:\r\n            raise Articleinvalideexeption\r\n        self.__categorie = categorie\r\n        resss = re.search(r&quot;(Informatique|Bureautique)&quot;, self.__code)\r\n        if resss:\r\n            print(&quot;valid&quot;)\r\n        else:\r\n            raise Articleinvalideexeption', 3),
(525, 'DA104711', 376, '  def Enregistrer_Articles(nom_fichier):\r\n        with open(nom_fichier+&amp;quot;.txt&amp;quot;,&amp;#039;w&amp;#039;) as file:\r\n            file.write(Facture.listeDachate)\r\n    ', 2),
(526, 'DA107633', 372, 'class ArticleInvalideException(Exception):\r\n    print(&quot;article invalide!!!!!&quot;)', 1),
(527, 'DA104864', 370, ' def getprix(self):\r\n        return self.__prix\r\n\r\n    def setprix(self, v):\r\n        self.__prix = v\r\n\r\n    def getcode(self):\r\n        return self.__code\r\n\r\n    def setcode(self, v):\r\n        self.__code = v', 2),
(528, 'SH219025', 376, 'def Enregistrer_Articles(self, nom_fichier):\r\n        articles_triée  = sorted(self.articles, reverse=True)\r\n        with open(nom_fichier, &amp;amp;amp;amp;quot;w&amp;amp;amp;amp;quot;) as f:\r\n            for article in articles_triée:\r\n                f.write(f&amp;amp;amp;amp;quot;{article}\\n&amp;amp;amp;amp;quot;)\r\n\r\n\r\n ', 2),
(529, 'CI2249', 376, 'import csv\r\ndef enregistrer():\r\nwith open(&amp;#039;data.csv&amp;#039;, &amp;#039;w&amp;#039;) as csvfile:\r\n    ecrire = csv.w(csvfile, delimiter=&amp;#039;;&amp;#039;)\r\n    for row in ecrire:\r\nfile.write\r\n\r\n        ', 1.5),
(530, 'DA104864', 371, '    def __str__(self):\r\n        return f&quot;{self.getprix()};{self.getcode()};{self.__qte};{self.__designation}&quot;\r\n    ', 1),
(531, 'DA104864', 372, 'class Articleinvalideexeption(Exception):\r\n    def __init__(self):\r\n        self.m = &quot;invalid&quot;', 2),
(532, 'CI2877', 371, 'def__str__(self):\r\nreturne Fcode:self_code), designation:(self._designation), prix:(self._prix), Qte:(self._Qte), categorie:(self._categorie)', NULL),
(533, 'Z673521', 376, '    @staticmethod\r\n    def Enregistrer_article():\r\n        lista = Facture.triee()\r\n\r\n        with open(&quot;file.txt&quot;, &quot;w&quot;) as file:\r\n            for art in lista:\r\n                file.write(art.__str__(),&quot;\\n&quot;)\r\n    @staticmethod\r\n    def triee():\r\n\r\n        l = Facture.listAricles()\r\n\r\n        for i in range(len(l)-1):\r\n            max_ind = i\r\n            for j in range(i+1, len(l)):\r\n                if l[j].getPrix() &gt; l[max_ind].getPrix():\r\n                    max_ind = j\r\n\r\n            temp = l[i]\r\n            l[i] = l[max_ind]\r\n            l[max_ind] = temp\r\n        return l', 3),
(534, 'CI1417', 374, ' @staticmethod\r\n    def ajouter():\r\n        Facture.list.append()', 1),
(535, 'CI2877', 374, 'def ajouter(self, Article):\r\n    if not Facture.ArticleExist(article):\r\n        Facture.listarticles.append(article)\r\n    else:\r\n        print(&amp;quot;article deja existant!&amp;quot;)\r\n\r\ndef articleExist(article):\r\n    for __ is Facture.listarticle\r\n', NULL),
(536, 'DA104864', 373, 'class Facture(Article):\r\n    list = []\r\n    cpt = 1\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.nfacture = Facture.cpt\r\n        self.nfacture += Facture.cpt\r\n        self.date = date.today()\r\n        self.collection = Facture.list', 1),
(537, 'DA106939', 376, 'def Enregistrer_Articles():\r\n    while open(Acl.txt ,a) as fichier:\r\n        print(fichier.write)\r\n    print(&quot;acticle enregistrer&quot;)', 1),
(538, 'DA105587', 376, 'def Enregistrer_Articles(self,nom_fichier):\r\n     with open(nom_fichier,&quot;w&quot;)as ficher:\r\n\r\n\r\n\r\n', NULL),
(539, 'DA105115', 375, 'def  Montant_facture():\r\n    s=0\r\n    for i in Facture.articales:\r\n        s+=Facture.getprix\r\n        return ', 1.5),
(540, 'DA104864', 376, '    def enregistrer_articles(self, nom_fichier):\r\n        with open(f&quot;{nom_fichier}.txt&quot;, &quot;a&quot;) as f:\r\n            f.write(self.__str__())', 2),
(541, 'DA104711', 377, '    def __str__(self):\r\n        return f&amp;#039;{ &amp;quot;Numéro facture &amp;quot;, self._facture} | { &amp;quot;date facture&amp;quot;,self._date} \\n Liste des articles\\n Désignation       prix(en DH)     quantité     prix Total \\n PC PORTABLE  {Article.getprix()}  {Article.getqte()} {Article.getprix()*Article.getqte()}\\n   Montant de la facture {Facture.Montant_Fcture()}&amp;#039;\r\n', 2),
(542, 'DA107633', 374, '    def Ajouer(self,Article):\r\n        try:\r\n          articles[]\r\n          for i in range(len(articles)):\r\n              article.append(articles)\r\n        except:\r\n            print(&quot;article dejat existe!!!&quot;)\r\n        else:\r\n            print(&quot;error&quot;)\r\n            ', 1),
(543, 'CN51111', 376, '    def Enregistrer_Articles(nom_fichier):\r\n        with open(nom_fichier,&quot;w&quot;) as file:\r\n            for i in Facture.art:\r\n                file.write(i.__str__)', 2),
(544, 'DA102284', 374, 'listarticl = []\r\n\r\n    def Ajouter(self, Art):\r\n        if (isinstence(Art, Article)):\r\n            Art.append(listarticl)', NULL),
(545, 'Z673521', 377, '    def __str__(self):\r\n        print(f&quot;Numéro facture {self.__numFacture}   date facture {self.__datFActure}&quot;)\r\n        print(&quot;Liste des articles&quot;)\r\n        print(&quot;Désignation      prix(en DH)       quantité           prix Total&quot;)\r\n        for art in Facture.listAricles:\r\n            print(f&quot;{art.getDesignation()}    {art.getPrix}      {art.getDesignation() * art.getPrix()}      &quot;  )\r\n', 3),
(546, 'X449131', 376, 'def  Enregistrer_Articles(nom_fichier)\r\n      with open(&quot;app1.json&quot;, &#039;w&#039;) as fich:\r\n                json.dump([{\r\n                    &quot;numero&quot;: Article.get_numero(),\r\n                    &quot;prix&quot;: Article.get_prix(),\r\n                    &quot;qte&quot;: Article.get_qte(),\r\n                    &quot;categore&quot;: Article.get_categorie(),\r\n    \r\n                }\r\n                    for Article in self.__categorie], fich)\r\n            print(&quot;Sauvegarde &quot;)\r\n     n = len(self.__prix)\r\n\r\n        for i in range(n):\r\n            for j in range(0, n - i - 1):\r\n                if self.__prix[j].get_prix() &gt; self.__prix[j + 1].get_prix():\r\n                    self.__prix[j], self.__prix[j + 1] = self.__prix[j + 1], self.__prix[j]', 2),
(547, 'DB31001', 376, 'import txt\r\n\r\ndef enregestre_art(ficheir):\r\n    with.open(&quot;fichier&quot;,r) as fichier:\r\n        article.append(ficheir)\r\n        ', 2),
(548, 'DA104711', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.message = &amp;quot;  l’article   est invalide&amp;quot;\r\n    def getmessage(self):\r\n        return self.message\r\n', 2),
(549, 'X449131', 374, '@staticmethod\r\ndef Ajouter(Article):\r\n    for q,l in Article:\r\n        Article.collectionachats.append()\r\n    return 1\r\n    ', 1),
(550, 'JM103258', 377, ' def __str__(self):\r\n     infp=&amp;quot;&amp;quot;\r\n     oi = [4000,334,48004,008]\r\n     for i in oi:\r\n         i+=oi\r\n     return f&amp;quot;{infp+=1 } {self.DateF}/n/n/n {Facture.p}/n/n {self.__désignation}   {self.__gte}  {self.__prix}/n PC PORTABLE {oi[i]}     &amp;quot;\r\n\r\n', 1),
(551, 'DA107236', 376, '  def Enregistrer_Articles(self,nom_fichier):\r\n            article_tries = sorted(self.article,reverse=True)\r\n            with open (nom_fichier,&quot;w&quot;) as fichier :\r\n                for article in article_tries \r\n            ', 1),
(552, 'DA105115', 377, ' def __str__(self):\r\n                info = &quot;&quot;\r\n                info += &quot;Liste des articles&quot;\r\n\r\n                info += f&quot;designation : {self.__designation};&quot;\r\n                info += f&quot;prix : {self.__prix};&quot;\r\n                info += f&quot;code : {self.__code} ;&quot;\r\n                info += f&quot;qte : {self.__qte}&quot;\r\n                info+=f&quot;PC PORTABLE est: \\n&quot;\r\n                info += f&quot;IMPRIMANTE est : \\n&quot;\r\n\r\n\r\n                info += f&quot;code : {self.__code} ;&quot;\r\n                info += f&quot;categorie : {self.__categorie};&quot;\r\n                info+=f&quot;Montant de la facture est &quot;\r\n                return info', 1),
(553, 'CI1417', 375, 'somme = 0\r\ndef montatnt(self):\r\n    for i in list:\r\n        somme+= i', 1),
(554, 'DA105115', 376, ' def Enregistrer_Articles(self):\r\n        with open(&#039;nom_fichier&#039;, &#039;r&#039;) :', 0.5),
(555, 'DA104864', 374, ' def voidajouter(self):\r\n        try:\r\n            if not (self.getcode() in Facture.list):\r\n                Facture.list.append(self)\r\n            else:\r\n                raise Articleinvalideexeption\r\n        except Articleinvalideexeption as e:\r\n            print(e.m())', 1.5),
(556, 'CI2249', 377, '   def __str__(self):\r\n        return f&#039;Article(num={self.num}, date={self.date.today()}, /n , designation={self.designation},   prix(en DH)  ={self.prix} quantite={self.qte},prixTotal={self.prixtotal},)&#039;\r\n        for i in range(len(articles)):\r\n            f&#039;Article(nomArticle={self.nom} , prix={self.pre} , qte={self.qte} prixtotal={self.qte * self.pre}/n)&#039;\r\n        print(&#039;mantant de la factue: &#039;) Mantant_facture()', 2),
(557, 'SH219025', 377, ' def __str__(self,article):\r\n        facture = f&amp;quot;Numéro facture {self.numero_facture}  {self.date_facture}:\\n&amp;quot;\r\n        for i  in article,enumerate(self.articles,1):', 1),
(558, 'CI1417', 376, 'def Enregistrer(self):\r\n    try:\r\n        with open(&#039;data.csv&#039;, &#039;a&#039;) as fichier:\r\n            fichier.write(self.__str__())\r\n    except:\r\n        print(&quot;Erreur&quot;)\r\n    else:\r\n        print(&#039; enregisté...&#039;)', 1.5),
(559, 'DA106939', 372, 'class ArticlenvalideExeption():\r\n        print(&quot;article invalide&quot;)', 1),
(560, 'CN51111', 375, '    def  Montant_facture():\r\n        some = 0\r\n        for i in Facture.art:\r\n            some += i.Article.getprix()\r\n        return some', 2),
(561, 'DA107236', 377, 'def __str__(self,aricle):\r\n', 0),
(562, 'DB31001', 377, 'def __str__(self):\r\n    super.__str__(self,numero_facte,date_facte,collection_art)\r\nsuper.__str__(self,desingnation,prix,qte,total)\r\nfor i in range article.len:\r\n', 2),
(563, 'DA107633', 377, 'def __str__(self):\r\n       return f&quot;numero de facture {self.numero}/n date de facture {self.date}/n liste des articles{self.articlr}/n montant de la facture : str{ Mantant_facture}&quot;', 2),
(564, 'DA104864', 377, '    def __str__(self):\r\n        return f&quot;&quot;&quot;   \r\n               N {self.nfacture} d: {self.date}\r\n               \r\n               L :\r\n               {self.collection}\r\n               \r\n               \r\n               \r\n               M : {self.montant_facture()}\r\n                &quot;&quot;&quot;', 0.5),
(565, 'DA105115', 372, 'class  ArticleInvalideException(Exepction) :\r\n    def __init__(self):\r\n        self.message=print(&#039;invlide  &#039;)\r\n    def getmessag(self):\r\n        return  ArticleInvalideException() :', 2),
(566, 'CI1417', 377, 'def prixtotal(self):\r\n    return Articl.getprinx()\r\n\r\n\r\ndef __str__(self):\r\n     return Facture.list self.__Numero_facture self.__str__\r\n', NULL),
(567, 'X449131', 377, ' def __str__():\r\n    return f&quot;{self.__designation} {self.__prix} {self.__qte} {self.__str__}&quot;\r\n     &quot;PC POR 4000,334 &quot; = f&quot;{self.__qte} {self.__prix} {self.__designation}&quot;     \r\n     &quot;immprimant 4000,334 &quot; = f&quot;{self.__qte} {self.__prix} {self.__designation}&quot;     \r\n     &quot;montant_facture &quot; = getfacture()', 1),
(568, 'DA107633', 376, 'def   Enregistrer_Articles(nom_fichier):\r\nwhile open(mounia.text, &quot;a&quot;)as fichier\r\nprint(&quot;fichier enregestrer&quot;)\r\nfichier.whrit\r\n', 1),
(569, 'X449131', 375, '@staticmethod\r\ndef montant_facture():\r\n    return f&quot;{self.__prix}&quot;', 1),
(570, 'DA107777', 373, 'from datetime import date \r\nclass facture : \r\n   article = []\r\nnum = 1 \r\ndef __init__ (self):\r\n  self;numorF = Facture.num\r\nself.dateF = dat e.today()\r\nfacture.num+=1', 1);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(571, 'CI1143', 370, '    def getcode(self):\r\n        return self.code\r\n\r\n    def setcode(self,ncode):\r\n        self.__code=ncode\r\n    def getdésignation(self):\r\n        return  self.__designation\r\n    def setdésignation(self,ndesignation):\r\n        self.__designation =ndesignation\r\n\r\n    def getprix(self):\r\n        return self.__prix\r\n    def setprix(self,nprix):\r\n        self.__prix =nprix\r\n\r\n    def setqte(self):\r\n        return self.__qte\r\n\r\n    def getqte(self, nqte):\r\n        self.__qte = nqte\r\n\r\n    def setcategorie(self):\r\n        return self.catégorie\r\n    def setcategorie(self,ncategorie):\r\n        self.__catégorie =ncategorie', 2),
(572, 'CI1143', 373, 'from date time import date\r\nclass Facture:\r\n   articles =[]\r\n   num=1\r\n   def __init__(self):\r\n       self.numeroF=Facture.num\r\n       self.dateF=date.today()\r\n       Facture.num+=1', 1),
(573, 'DA105622', 373, 'from datetime import date\r\nclass Facture:\r\n articles = []\r\n num = 1\r\n def __init_(self):\r\n     self.numero = Facture.num\r\n     self.dateF = date.today()\r\n     Facture .num+=1', 1),
(574, 'CI1143', 371, '   def __str__(self):\r\n        return f&quot;{self.__code};{self.__designation};{self.__prix};{self.__qte};{self.__catégorie}&quot;\r\n   ', 1),
(575, 'VM18941', 369, 'class Article :\r\n    def __init__(self,code,dest,prix,qte,categorie):\r\n        self.code = code\r\n        self.designation = dest\r\n        self.prix = prix\r\n        self.quantité = qte\r\n        self.categorie = categorie\r\n', 3),
(576, 'CI459', 369, 'class Article:\r\n    def __int__(self,c,d,p,q,c):\r\n       self.code= c\r\n       self.desination = d\r\n       self.prix = p\r\n       self.qte = q\r\n       self.categori = c\r\nA1 =Article(&amp;quot;ART_00001&amp;quot;,&amp;quot;ordinateur potrabl&amp;quot;,3000.10,09,&amp;quot;electronic&amp;quot;)', 1),
(577, 'DA108545', 370, '    def get_code(self):\r\n        return self.__code\r\n    def get_désignation(self):\r\n        return self.__prix\r\n    def get_prix(self):\r\n        return self.__prix\r\n    def get_qte(self):\r\n        return self.__qte\r\n    def get_catégorie(self):\r\n        return self.__catégorie\r\n    \r\n--------------------------------------------------------\r\n    \r\n    def set_code(self, nc):\r\n         self.__code = nc\r\n    def set_désignation(self, nd):\r\n         self.__prix = nd\r\n    def set_prix(self, np):\r\n         self.__prix = np\r\n    def set_qte(self, nq):\r\n         self.__qte = nq\r\n    def set_catégorie(self, ncat):\r\n         self.__catégorie = ncat', 2),
(578, 'DA109151', 369, 'import re\r\nclass Article:\r\n    def _init_(self, code, designation, prix, qte, categorie):\r\n        self.code = code\r\n        self.designation = designation\r\n        self.prix = prix\r\n        self.qte = qte\r\n        self.categorie = categorie\r\n\r\n\r\n', 1),
(579, 'DB30958', 369, 'import re\r\nclass article:\r\n    def __init__(self,code , designation , prix , qte, categorie):\r\n        if re.match(&amp;#039;^ ART_ + [0-9]{3}$&amp;#039;,code):\r\n            self.__code = code\r\n        else:\r\n            print(&amp;#039;ArticleInvalideException()&amp;#039;.message)\r\n        if len(designation) &amp;lt; 300:\r\n            self.__designation = designation\r\n        else:\r\n            print(&amp;#039;ArticleInvalideException()&amp;#039;.message)\r\n        if re.match((&amp;#039;[0-9]{1,}\\{3}&amp;#039;,str(prix))):\r\n            self.__prix = prix\r\n        else:\r\n            print(&amp;#039;ArticleInvalideException()&amp;#039;.message)\r\n        if qte &amp;gt; 0 :\r\n            self.qte = qte\r\n        else:\r\n            print(&amp;#039;ArticleInvalideException()&amp;#039;.message)\r\n                  if re.match(r&quot;iformatique | bureautique&quot;):\r\n            self.__categorie = categorie\r\n        else:\r\n            print(&#039;ArticleInvalideException()&#039;)\r\n        ', 4),
(580, 'DB30958', 370, '    def getCode(self):\r\n        return self.__code\r\n    def getDésignation(self):\r\n        return self.__désignation\r\n    def getPrix(self):\r\n        return self.__prix\r\n    def getQte(self):\r\n        return self.__qte\r\n    def getCategorie(self):\r\n        return self.__catégorie', 2),
(581, 'DA108545', 371, '    def __str__(self):\r\n        return f&quot;{self.__code};{self.__désignation};{self.__prix};{self.__qte};{self.__catégorie}&quot;\r\n', 1),
(582, 'DA104704', 370, '    def get_code(self):\r\n        return self.__code\r\n    \r\n    def get_prix(self):\r\n        return self.__prix\r\n    \r\n    def get_qte(self):\r\n        return self.__qte\r\n    \r\n    def get_categorie(self):\r\n        return self.__categorie\r\n    \r\n    def get_designation(self):\r\n        return self.__designation\r\n    \r\n    def set_code(self, ncode):\r\n        self.__code = ncode\r\n        \r\n    def set_prix(self, nprix):\r\n        self.__prix = nprix\r\n    \r\n    def set_categorie(self, ncategore):\r\n        self.__categorie = ncategore\r\n    \r\n    def set_designation(self, ndesignation):\r\n        self.__designation = ndesignation\r\n        \r\n    def set_qte(self, nqte):\r\n        self.__qte = nqte', 2),
(583, 'DA104704', 371, '    def __str__(self):\r\n        return f&quot;{self.__code};{self.__designation};{self.__prix};{self.__qte};{self.__categorie}&quot;', 1),
(584, 'DB30758', 369, 'import re\r\nclass Article:\r\n    def __init__(self, code, désingnation, prix, qte, catégorie):\r\n        if re.match(` ^ ART_ + [0 - 9]{5}$`, code):\r\n            self.__code = code\r\n        else:\r\n            print(ArticleInvalideExeption().message)\r\n\r\n    if len(désignation) &amp;lt; 300:\r\n        self.__désignation = désignation\r\n    \r\n    else:\r\n        print(ArticleInvalideExeption().message)\r\n    if re.match(`[0-9]{1,}\\[0-9]{3}`,str(prix)):\r\n        self.__prix = float(prix)\r\n    else:\r\n            print(ArticleInvalideExeption().message)\r\n    if qte &amp;gt; 0\r\n        self.__qte = qte\r\n   else:\r\n            print(ArticleInvalideExeption().message)', 3),
(585, 'DA102534', 369, 'import re\r\n\r\nclass Article:\r\n    def __init__(self, code, désignation, prix, qte, catégorie):\r\n        exp = re.search(r&quot;^ART_[0-9]{5}$&quot;, code)\r\n        if exp:\r\n            self.__code = code\r\n        else:\r\n            raise ArticleInvalideException(&quot;code invalid!!&quot;)\r\n        if len(str(désignation)) &lt;= 300:\r\n            self.__désignation = désignation\r\n        else:\r\n            raise ArticleInvalideException(&quot;désignation invalid!!&quot;)\r\n\r\n        exPrix = re.search(r&quot;^[0-9]+.([0-9]{3}|[0-9]{2}|[0-9])$&quot;, str(prix))\r\n        if exPrix:\r\n            self.__prix = float(prix)\r\n        else:\r\n            raise ArticleInvalideException(&quot;prix invalid!!&quot;)\r\n        if qte &gt; 0 and isinstance(qte, int):\r\n            self.__qte = qte\r\n        else:\r\n            raise ArticleInvalideException(&quot;qte invalid!!&quot;)\r\n        if re.search(r&quot;^(Informatique|Bureautique)&quot;,catégorie):\r\n            self.__catégorie = catégorie\r\n        else:\r\n            raise  ArticleInvalideException(&#039;catégorie invalid!!&#039;)', 3.5),
(586, 'DA104704', 369, 'import re\r\n\r\n\r\nclass Article:\r\n    Articles = {}\r\n\r\n    def __init__(self, code, designation, prix, qte, categorie):\r\n        exp = re.search(r&quot;^ART_[0-9]{5}&quot;, code)\r\n        if exp:\r\n            self.__code = code\r\n        else:\r\n            raise ArticleInvalideException\r\n        if len(designation) &lt; 300:\r\n            self.__designation = designation\r\n        else:\r\n            raise ArticleInvalideException\r\n        #if type(prix) == &quot;float&quot;:\r\n        self.__prix = prix\r\n        #else:\r\n            #raise ArticleInvalideException\r\n        if qte &gt; 0:\r\n            self.__qte = qte\r\n        else:\r\n            raise ArticleInvalideException\r\n        exp1 = re.search(r&quot;Informatique|Bureautique&quot;, categorie)\r\n        if exp1:\r\n            self.__categorie = categorie\r\n        else:\r\n            raise ArticleInvalideException\r\n        Article.Articles[self.__code] = self', 3),
(587, 'DA104704', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self, m=&quot;l’article   est invalide &quot;):\r\n        self.__message = m\r\n\r\n    def __str__(self):\r\n        return self.__message\r\n', 2),
(588, 'DA107777', 371, 'def __str__(self):\r\nreturn &amp;amp;quot;code :&amp;amp;quot;  ; (self.__code) + &amp;amp;quot;prix:&amp;amp;quot;  ;  str(self.__prix) ; \r\n &amp;amp;quot;qte :&amp;amp;quot; ;   str(self.__qte) ;  &amp;amp;quot;catégorie:&amp;amp;quot; ;  (self.__catégorie)', 1),
(589, 'CI459', 370, 'class personne:\r\n    def __int__(self,n,a):\r\n        self.nom =n\r\n        self.age = a\r\n    def get_nom(self):\r\n        return self.nom\r\n    def set_age(self,a):\r\n         self.age =a\r\n    def get_nom(self):\r\n        return self.age\r\n    def set_age(self,b):\r\n        self.age = b\r\npersonne1 = person(&amp;amp;quot;othman&amp;amp;quot;,20)\r\nprint(personne.get_nom())\r\nprint(personne.set_age(&amp;amp;quot;rachid&amp;amp;quot;))\r\nprint(personne1)', NULL),
(590, 'CI1143', 374, '  def voidAjouter(self,articl):\r\n     if list.append(articl):\r\n         return True\r\n     else:\r\n         return (&quot;impossible d&#039;ajouter un article&quot;)\r\n', 1),
(591, 'DA107295', 369, 'import re \r\nclass Article:\r\n    def __init__(self, code, designation, prix, qte, categorie):\r\nif re.match(ART8+[0-9]{5]$ ? CODE):\r\nelse:\r\nprint(Articleinvalideexception().message)\r\nif len (designation)&lt; 300:\r\nself._desgnation = disignation\r\nelse :\r\nprint(Articlinvalideexception().message)\r\nif re.match( [0-9] {1,}\\.[0-9]{3}),str(prix)):\r\n self._prix = float(prix)\r\nelse:\r\nprint(Artivlinvalidexception().message)\r\nif qte &gt; 0 :\r\nself._qte = qte\r\nelse :\r\nprint (Articlinvalidexception().message)\r\nif catigorie == &quot;information &quot; or == &quot;bureautique&quot;:\r\nself.__categorie = categorie\r\nelse:\r\nprint(Articlinvalidexception().message)', 3),
(592, 'DA104117', 371, ' def __str__(self):\r\n         return f&quot;code:{self.code},désignation:{self.désignation},prix:{self.prix},qte:{self.qte},catégorie:{self.catégorie}&quot;\r\n', 1),
(593, 'VM18941', 371, '\r\n    def __str__(self):\r\n        return (f&quot;f le code c&#039;est :{self.code}&quot;&quot;;&quot; f&quot;designition c&#039;est : {self.designiation}&quot;&quot;;&quot; f&quot;le prix c&#039;est{self.prix}&quot;&quot;;&quot;f&quot;la quantité c&#039;est :{self.quantité}&quot; f&quot;la categorie c&#039;est{self.categorie}&quot;&quot;;&quot;)\r\n\r\n', 1),
(594, 'CI1143', 375, '    def montantdefacure(self,facture):\r\n        self.__prix.self.__qte=facture\r\n        return facture', 0.5),
(595, 'DA104117', 369, 'class  Article :\r\n    def __init__(self,code,désignation, prix ,qte,catégorie):\r\n        self.code=code\r\n        self.désignation=désignation\r\n        self.prix=prix\r\n        self.qte=qte\r\n        self.catégorie=catégorie\r\n', 1),
(596, 'DB30758', 370, '  def get_désingnation(self,désignation):\r\n        self.désignation = désignation\r\n    def get_prix(self,prix):\r\n        self.prix=prix\r\n    def get_qte(self,qte):\r\n        self.qte =qte\r\n    def get_catégorie\r\n        self.catégorie= catégorie', 2),
(597, 'VA159550', 370, '    def getCode(self):\r\n        return self.__code \r\n    def getDesignation(self):\r\n        return self.__designation\r\n    def getPrix(self):\r\n        return self.__prix\r\n    def getQte(self):\r\n        return self.__qte\r\n    def getCategorie(self):\r\n        return self.__categorie\r\n    \r\n    def setCode(self, newcode):\r\n        self.__code = newcode\r\n    def setDesignation(self, newDes):\r\n        self.__designation = newDes\r\n    def setPrix(self, newPrix):\r\n        self.__prix = newPrix\r\n    def setQte(self, newQte):\r\n        self.__qte = newQte\r\n    def setCategorie(self, newCat):\r\n        self.__categorie = newCat', 2),
(598, 'DA104704', 373, 'from datetime import date\r\nclass Facture:\r\n    Numéro_de_la_facture = 1\r\n    def __init__(self):\r\n        self.__Nfacture = Facture.Numéro_de_la_facture\r\n        self.__Date_Facture = date.today()\r\n        self.__coll_achat = []\r\n        Facture.Numéro_de_la_facture += 1', 1),
(599, 'DA102389', 371, '     def __str__(self):\r\n        return &quot;f le code:{ self.__ code}.la désignation:{self.__désignation}.le prix:{ self.__ prix}.la quantit:{self.__  qte}.la catégorie:{self.__  catégorie}&quot;', 1),
(600, 'DA102534', 370, '    def getCode(self):\r\n        return self.__code\r\n    def getDesignation(self):\r\n        return self.__désignation\r\n    def getPrix(self):\r\n        return self.__prix_\r\n    def getQte(self):\r\n        return self.__qte\r\n    def getCategorie(self):\r\n        return self.__catégorie\r\n    \r\n    def setCode(self, code):\r\n        self.__code = code\r\n    def setDesignation(self, designation):\r\n        self.__désignation = designation\r\n    def setPrix(self, prix):\r\n        self.__prix = prix\r\n    def setQte(self, qte):\r\n        self.__qte = qte\r\n    def setCategorie(self, categorie):\r\n        self.__catégorie = categorie', 2),
(601, 'DA106935', 369, 'import re\r\nclass Article:\r\n    def __init__(self,c,designation,prix,qte,categ):\r\n        if ((categ == &amp;quot;Informatique&amp;quot; or categ == &amp;quot;Bureautique &amp;quot;)and(qte&amp;gt;=0) and (len(designation) &amp;lt; 300) and (re.search(r&amp;quot;^(ART_)[0-9]{5}$&amp;quot;,c))):\r\n            self.__code = c\r\n            self.__designation = designation\r\n            self.__prix = prix\r\n            self.__qte = qte\r\n            self.__categorie = categ\r\n\r\n        else:\r\n            raise ArticleInvalideException()\r\n\r\n', 4),
(602, 'VA159550', 371, '    def __str__(self):\r\n        return f&quot;{self.__code} ; {self.__designation} ; {self.__prix} ; {self.__qte} ; {self.__categorie}&quot;', 1),
(603, 'CI459', 371, 'class personne:\r\n    def __int__(self,n,a):\r\n        self.nom =n\r\n        self.age = a\r\n    def get_nom(self):\r\n        return self.nom\r\n    def set_age(self,a):\r\n         self.age =a\r\n    def get_nom(self):\r\n        return self.age\r\n    def set_age(self,b):\r\n        self.age = b\r\n    def __str__(self):\r\n        return &amp;quot;\\nmy nam is: &amp;quot;+self.nom+&amp;quot;\\nmy old: &amp;quot;+self.age\r\npersonne1 = person(&amp;quot;othman&amp;quot;,20)\r\nprint(personne.get_nom())\r\nprint(personne.set_age(&amp;quot;rachid&amp;quot;))\r\nprint(personne1)', 1),
(604, 'DA102534', 371, '    def __str__(self):\r\n        return f&quot;{self.__code}; {self.__désignation}; {self.__prix}; {self.__qte}; {self.__catégorie}&quot;', 1),
(605, 'DA105622', 370, ' def get_code (self):\r\n     return self._code\r\ndef get_desination(self):\r\n     return self._desination\r\ndef get_prix(self):\r\n     return self._prix\r\ndef get_qte(self):\r\n     return self._qte\r\ndef get_categorie (self):\r\n     return self._categorie\r\n   ', 2),
(606, 'DA102534', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self, message):\r\n        super().__init__(message)', 2),
(607, 'DA104704', 374, '    def Ajouter(self, code_Ar):\r\n        temp = Article.Articles[code_Ar]\r\n        if isinstance(temp, Article):\r\n            self.__coll_achat.append(temp)\r\n        else:\r\n            raise ArticleInvalideException', 1),
(608, 'DA106935', 371, '    def __str__(self):\r\n        return f&quot;code : {self.__code} ; designation : {self.__designation}; prix : {self.__prix}; qte : {self.__qte} ; categorie : {self.__categorie}&quot;', 1),
(609, 'DA102389', 369, 'import re:\r\nclass Article :\r\n   def __init__(self,code,désignation, prix, qte , catégorie):\r\n    self.__ code=code\r\n    self.__désignation =désignation\r\n    self.__ prix = prix\r\n    self.__  qte= qte\r\n    self.__  catégorie= catégorie\r\n    self.__code=re.search(r&quot;ART_[0-9]{5}&quot;)\r\n   self.__prix=re.search(r&quot;[0-9],[0-9]{3}&quot;)', 3),
(610, 'DA104704', 375, '    def montant_Facture(self):\r\n        sm = 0\r\n        for i in self.__coll_achat:\r\n            sm += i.__prix * i.__qte\r\n        return sm   ', 1.5),
(611, 'VA159550', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.message = &quot;Article est invalide&quot;', 2),
(612, 'DA102389', 370, 'def getcode(self):\r\n        return self.__ code\r\n    def getdésignation(self):\r\n        return self.__désignation\r\n    def getprix(self):\r\n        return self.__ prix\r\n    def getqte(self):\r\n        return self.__  qte\r\n    def getcatégorie(self):\r\n        return self.__  catégorie\r\n        def setcode(self,code2):\r\n        return  self.__ code=code2\r\n    def setdésignation(self,désignation)\r\n        return self.__désignation=désignation\r\n    def setprix(self,prix):\r\n        return  self.__ prix=prix\r\n    def setqte(self,qte)\r\n        return self.__  qte=qte\r\n   def setcatégorie(self,catégorie):\r\n        return self.__  catégorie=catégorie', 2),
(613, 'VA159550', 369, 'import re\r\nclass Article:\r\n    def __init__(self, code, designation, prix, qte, categorie):\r\n        if re.match(&#039;^ART_+[0-9]{5}$&#039;, code):\r\n            self.__code = code\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if len(designation) &lt; 300:\r\n            self.__designation = designation\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if re.match(&#039;[0-9]{1,}\\.[0-9]{3}&#039;, str(prix)):\r\n            self.__prix = float(prix)\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if qte &gt; 0:\r\n            self.__qte = qte\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if categorie == &#039;Informatique&#039; or categorie == &quot;Bureautique&quot;:\r\n            self.__categorie = categorie\r\n        else:\r\n            print(ArticleInvalideException().message)', 4),
(614, 'DA109151', 370, '    def get_code(self):\r\n        return self.code\r\n    def get_designation(self):\r\n        return self.designation\r\n    def grt_prix(self):\r\n        return self.prix\r\n    def get_qte(self):\r\n        return self.qte\r\n    def get_categorie(self):\r\n        return self.categorie', 2),
(615, 'DA104117', 370, '    def __get__code(self):\r\n        return self.__code\r\n\r\n    def __get__désignation(self):\r\n         return self.__désignation\r\n    def __get__prix(self):\r\n         return self.__prix\r\n    def __get__qte(self):\r\n         return self.__qte\r\n\r\n    def __get__catégorie(self):\r\n        return self.__catégorie\r\n\r\n    def __set__code(self,code):\r\n         self.code=code\r\n\r\n    def __set__désignation(self, désignation):\r\n        self.désignation = désignation\r\n    def __set__prix(self,prix):\r\n         self.prix=prix\r\n\r\n    def __set__qte(self, qte):\r\n        self.qte= qte\r\n\r\n    def __set__catégorie(self,catégorie):\r\n        self.catégorie=catégorie\r\n    \r\n\r\n', 2),
(616, 'DA101003', 370, 'def get_code(self):\r\n return self.code\r\ndef get_désignation (self):\r\n return self.désignation \r\ndef get_prix(self):\r\n return self.prix\r\ndef get_qte(self):\r\n return self.qte\r\ndef get_categorie(self):\r\n  return self.categorie\r\n', 2),
(617, 'DA102534', 373, 'from datetime import datetime,date\r\nclass Facture:\r\n    Numéro = 1\r\n    Articles = []\r\n    def __init__(self):\r\n        self.__Numéro = Facture.Numéro\r\n        Facture.Numéro +=1\r\n        self.__date = date.today()', 1),
(618, 'DA108545', 369, 'import re\r\nclass Article:\r\n    def __init__(self, c, d, p, q, cat):\r\n        self.__code = c\r\n        self.__désignation = d\r\n        self.__prix = p\r\n        self.__qte = q\r\n        self.__catégorie = cat\r\n\r\n        re.match(&quot;[ART]_[0-9]{5}&quot;, self.__code)\r\n        re.match(&quot;[a-z]{300}&quot;, self.__désignation)\r\n        re.match(&quot;[0-9]\\,[0-9]{3}&quot;, self.__prix)\r\n        re.match(&quot;[0-9]&quot;, self.__qte)', 2),
(619, 'DA106935', 370, ' def getcode(self):\r\n        return self.__code\r\n    def getdesignation(self):\r\n        return self.__designation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getqte(self):\r\n        return self.__qte\r\n    def getcategorie(self):\r\n        return self.__categorie\r\n\r\n    def setcode(self,newcode):\r\n        self.__code = newcode    \r\n    def setdesignation(self,newdesignation):\r\n        self.__designation = newdesignation    \r\n    def setprix(self,newprix):\r\n        self.__prix = newprix \r\n    def setqte(self,newqte):\r\n        self.__qte = newqte    \r\n    def setcategorie(self,newcategorie):\r\n        self.__categorie = newcategorie', 2),
(620, 'DB30958', 371, '    def __str__(self):\r\n        return (f&amp;quot;le code : {self.__code} ; Designation : {self.__designation} ;&amp;quot;\r\n                f&amp;quot;le prix : {self.__prix} ; la categorie : {self.__categorie}&amp;quot;)', 1),
(621, 'DA108545', 372, 'class ArticleInvalideException():\r\n    def __init__(self, m=(&amp;quot;cette article est invalide&amp;quot;)):\r\n        self.message = m\r\n       super.__init__(self.message)', 2),
(622, 'DA101003', 369, 'class Article:\r\n    CATEGORIES = [&quot;Informatique&quot;, &quot;Bureautique&quot;]\r\n\r\n    def _init_(self, code, designation, prix, qte, categorie):\r\n        self.set_code(code)\r\n        self.set_designation(designation)\r\n        self.set_prix(prix)\r\n        self.set_qte(qte)\r\n        self.set_categorie(categorie)\r\n', 1),
(623, 'DA102534', 374, '    def Ajoute(self, article):\r\n        for obj in self.Articles:\r\n            if article.getCode() == obj.getCode():\r\n                self.Articles.append(obj)\r\n            else:\r\n                raise ArticleInvalideException(&#039;Article deja exist!!&#039;)', 2),
(624, 'DA101003', 372, 'class ArticleInvalideException(Exception):\r\n    def _init_(self, message=&quot;Article invalide&quot;):\r\n        self.message = message\r\n        super()._init_(self.message)\r\n', 2),
(625, 'VA159550', 373, 'from datetime import date\r\nclass Facture:\r\n    num = 1\r\n    collAchat = []\r\n    def __init__(self):\r\n        self.numFact = Facture.num\r\n        self.dateFact = date.today()\r\n        Facture.num += 1', 1),
(626, 'DA102389', 373, 'class Facture:\r\n    num=1\r\n    list=[]\r\n    def __init__(self):\r\n        self.Numéro=Facture.num\r\n        self.dateF=date.today()\r\n        Facture.num+=1\r\n       ', 1),
(627, 'DA101003', 371, '    def _str_(self):\r\n        return f&quot;{self._code};{self._designation};{self._prix:.3f};{self._qte};{self._categorie}&quot;\r\n', 1),
(628, 'CI459', 372, 'class ArticleInvalideException():\r\n    def __init__(self,m =&amp;quot;article not valid&amp;quot;):\r\n        self.message = m\r\n        super().__init__(self.message)\r\n    def comferme_article(self):\r\n      is not article:\r\n      print(ArticleInvalideException)', 2),
(629, 'DA109151', 373, 'class Facture:\r\n    articles = []\r\n    num = 1\r\n    def __init__(self):\r\n        self.numeroF = Facture.num\r\n        self.dateF = date.today()\r\n        Facture.num+=1', 1),
(630, 'DA104117', 373, 'form dattime import date\r\nclass Facture :\r\n    articles=[]\r\n    num=1\r\n    def __init__(self,NuméroF ,DateF ):\r\n        self.Numéro=NuméroF\r\n        self.Date=DateF\r\n        Facture.num+=1\r\n        \r\n', 1),
(631, 'DB30759', 373, 'from datetime import datetime\r\n   class Facture:\r\n      articles []\r\n      num = 1\r\n      def __init__(self):\r\n         self.numeroF = Facture.num\r\n         self.dateF=date.today()\r\n         Facture.num+=1', 1),
(632, 'DA106935', 372, 'class ArticleInvalideException(Exception):\r\n    def message(self):\r\n        return  &quot;l’article   est invalide&quot;\r\n', 2),
(633, 'DA101003', 373, 'from datetime import date\r\nclass Facture:\r\n          articles = []\r\nnum = 1\r\ndef __init__(self):\r\nself.numerof = facture.num\r\nself.dateF = date.today()\r\nfacture.num+=1', 1),
(634, 'DB30758', 373, 'from datetime import date\r\nclass Facture:\r\n     articles = []\r\n     num = 1\r\n     def __init__(self):\r\n           self.numeroF = Facture.num\r\n           self.dateF = date.today()\r\n           Facture.num+=1', 1),
(635, 'VA159550', 374, '    def voidAjouter(self, article):\r\n        if article not in Facture.collAchat:\r\n            Facture.collAchat.append(article)\r\n        else:\r\n            print(&quot;L&#039;article est deja existe&quot;)', 2),
(636, 'DA106935', 373, 'from datetime import date\r\n\r\nclass Facture:\r\n    articles = []\r\n    num = 1\r\n    def __init__(self):\r\n        self.numerof = Facture.num\r\n        self.date = date.today()\r\n        Facture.num+=1', 1),
(637, 'CB355407', 369, 'import re\r\nclass Article :\r\n    def __init__(self, code, désignation, prix, qte, catégorie):\r\n        codeV = re.search(r&quot;[A-Z]{3}_[0-9]{5}&quot;, code)\r\n        if codeV :\r\n            self.__code = code\r\n        desV = re.search(r&quot;[A-z0-9]{1,300}&quot;, désignation)\r\n        if desV :\r\n            self.__désignation = désignation\r\n        prV = re.search(r&quot;[0-9].[0-9]{,3}&quot;, str(prix))\r\n        if prV :\r\n            self.__prix = prix\r\n        if qte &gt; 0 :\r\n            self.__qte = qte\r\n        ctg = re.search(r&quot;Informatique|Bureautique&quot;, catégorie)\r\n        if ctg :\r\n            self.__catégorie = catégorie', 3),
(638, 'CB355407', 370, '    def getCode(self):\r\n        return self.__code\r\n    def getdésignation(self):\r\n        return self.__désignation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getqte(self):\r\n        return self.__qte\r\n    def getcat(self):\r\n        return self.__code\r\n\r\n    def setCode(self, new):\r\n        self.__code = new\r\n        return self.__code\r\n\r\n    def setdésignation(self, new):\r\n        self.__désignation = new\r\n        return self.__désignation\r\n\r\n    def setprix(self, new):\r\n        self.__prix = new\r\n        return self.__prix\r\n\r\n    def setqte(self, new):\r\n        self.__qte = new\r\n        return self.__qte\r\n\r\n    def setactegorie(self, new):\r\n        self.__catégorie = new\r\n        return self.__catégorie', 2),
(639, 'CB355407', 371, '    def __str__(self):\r\n        return f&quot;{self.getCode()} , {self.getdésignation()} , {self.getprix()} , {self.getqte()} , {self.__catégorie}&quot;', 1),
(640, 'CI1143', 369, 'class Article:\r\n    def __init__(self,code,designation,prix,qte,catégorie):\r\n        if re.search(r&#039;ART_[0-9](5)&#039;):\r\n         self.__code=code\r\n        if re.search(r&#039;[^A-Z](300)&#039;):\r\n         self.__designation=designation\r\n        if re.search(r&#039;[0-9](3).&#039;):\r\n         self.__prix =prix\r\n        if qte&gt;0(&quot;La qte est un entier positif !&quot;) :\r\n         self.__qte=qte\r\n        self.__catégorie =catégorie', 2),
(641, 'CB355407', 373, 'from datetime import date\r\nclass Facture :\r\n    articles= []\r\n    num = 1\r\n    def __init__(self):\r\n        self.numeroF = Facture.num\r\n        self.dateF = date.today()\r\n        Facture.num+=1', 1),
(642, 'CI459', 373, 'import  datetime\r\nclass factore:\r\n    def __int__(self):\r\n        self.numero_factore = 2\r\n        self.date_factore = datetime.date.today()\r\n        self.achat = []\r\nf1 = factore()  \r\nprint(factore.numero_factore)\r\nprint(factore.date_factore)\r\n', 1),
(643, 'DA102534', 375, '    def Montant_facture(self):\r\n        total = 0\r\n        for obj in self.Articles:\r\n            total += (obj.getQte() * obj.getPrix())\r\n        return total', 2),
(644, 'DA107295', 370, ' public class persone {\r\nprivat string nom;\r\nprivat int age;\r\npublic string getnom(){\r\n  return nom\r\n}\r\npublic int getage(){\r\nreturn age\r\n}\r\npublic void setnom(string nouveuxNom){\r\nthis.nom = nouveuxNom\r\n}\r\npublic void(int nouvellage ){\r\n  this.age = nouvellage\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}', 2),
(645, 'DA108545', 374, '    def Ajouter (self):\r\n        self.__coll_achat.append(Article)', 1),
(646, 'DB30758', 371, 'def __str__(self):\r\n    return(f&amp;quot;le code : {self.__code} ; la désignation : {self.__désignation} ;prix : {self.__prix}; qte : {self.qte}; categorie : {self.__catégorie}&amp;quot;)', 1),
(647, 'DA106935', 374, '    def Ajouter(self,Article):\r\n        Excicte = True\r\n        if Article in Facture.articles:\r\n            Excicte = False\r\n        if Excicte == True:\r\n            Facture.articles.append(Article)\r\n        else:\r\n            print(&quot;False&quot;)', 2),
(648, 'DA108545', 373, 'import datetime\r\nclass Facture:\r\n    def __init__(self, num , d=datetime.date.today(), c = []):\r\n        self.__num_facture = num\r\n        self.__date_facture = d\r\n        self.__coll_achat = c\r\n\r\n        self.__num_facture += 1', 1),
(649, 'DA105622', 371, 'def __str__(self):\r\nreturn f&quot;{self._code};\r\n{self._designation};{self._prix};\r\n{self._qte};{categorie}&amp;quot;', 1),
(650, 'CI459', 374, ' def Ajouter(self,articl):\r\n        if articl in self.achat:\r\n            print(&amp;quot;ereur&amp;quot;)\r\n        else:\r\n            self.achat.append()', 2),
(651, 'VA159550', 375, '    def Montant_facture(self):\r\n        mt = 1\r\n        for x in range(len(Facture.collAchat)):\r\n            mt += Facture.collAchat[x].getPrix() * Facture.collAchat[x].getQte()\r\n        return mt', 2),
(652, 'DB30958', 373, 'from datetime import date\r\nclass Facture:\r\n    article = []\r\n    num = 1\r\n    def __init__(self):\r\n        self.numeroF = Facture.num\r\n        self. dateF = date.today()\r\n        Facture.num+=1', 1),
(653, 'DA101003', 374, 'class collectionArticles:\r\n    def__init__(self):\r\n       self.articles = []\r\ndef ajouter(self,nouvel__article):\r\nif nouvel_article not in self.articles :\r\nself.articles.append(nouvel_article)\r\nprint(&quot;article ajoute avec succes&quot;)\r\nelse \r\nprint(&quot;erreur:larticle existe deja dans la collection&quot;)', 2),
(654, 'DA105622', 372, 'class ArticleInvalideException(Exception):\r\n   def _init_(self,message,=&quot;Articleinvalide  &quot;):\r\n        self.message =  message       \r\n        super().__init__(self.message)', 2),
(655, 'DA104117', 374, 'def Ajouter (self) :\r\n     self.__colle_achat.append( Article )\r\n   ', 1),
(656, 'CI459', 375, '  def Montant_facture(self,total):\r\n        total = 0\r\n        for article in self.achat\r\n            pass\r\n        return total\r\nf1 = factore()\r\nf2 = factore.Ajouter(&amp;quot;pc portable&amp;quot;)\r\n', 1),
(657, 'DA106935', 375, '    def Montant_facture(self):\r\n        montreTotal = 0\r\n        montreTotal += (Article.getqte()*Article.setprix())\r\n        return montreTotal', 1),
(658, 'DB30758', 374, 'class CollectionArticles :\r\n    def _ init_(self):\r\n        self.articles = []\r\n    def Ajouter(self,nouvel_article):\r\n        if nouvel_article not in self.articles\r\n            self.articles.append(nouvel_article)\r\n            print(&amp;quot;article ajouté&amp;quot;)\r\n        else:\r\n            print(&amp;quot;l&amp;#039;article existe deja&amp;quot;)', 2),
(659, 'DA105622', 374, 'def ajouter (self,articles):\r\nfor a in self.articles:\r\nif a.get_code() ==\r\narticle.get_code():\r\n print(&quot;cet article existe deja dans la facture.&quot;)\r\nreturn\r\nself.articles.append(article)', 2),
(660, 'DA108545', 376, '    def Enregistrer_Articles(nom_fichier):\r\n        with open(nom_fichier, &#039;a&#039;) as f\r\n            f.readlines()', 2),
(661, 'VM18941', 370, 'import re\r\n\r\n\r\nclass Article:\r\n    def __init__(self,code,dest,prix,qte,categorie):\r\n        if not isinstance(code,str) or not code.startswith(&quot;ART_{5}[0-9]&quot;):\r\n            raise ValueError(&quot;invalid !&quot;)\r\n        self.code = code\r\n        if not isinstance(dest, str) or not len(dest)&gt;300:\r\n            raise ValueError(&quot;invalid !&quot;)\r\n        self.designiation = dest\r\n        if not isinstance(prix, float) or round(prix,3) != 0:\r\n            raise ValueError(&quot;invalid !&quot;)\r\n        self.prix = prix\r\n        if not isinstance(qte, str) or qte &lt; 0  :\r\n            raise ValueError(&quot;invalid !&quot;)\r\n        self.quantité = qte\r\n        if categorie not in [&quot;informatique&quot;,&quot;bureautique&quot;]:\r\n            raise ValueError(&quot;invalid !&quot;)\r\n        self.categorie = categorie\r\n', 1),
(662, 'DA106571', 369, 'class Article :\r\n    def __init__(self,cd,désignation,p ,q,catégorie):\r\n        self.__code=cd\r\n        self.__désignation =désignation\r\n        self.__prix=p\r\n        self.__qte=q\r\n        self.__catégorie=catégorie\r\n', 2),
(663, 'CI1143', 377, '  def __str__(self):\r\n        return f&quot;{self.numeroF}+{ self.dateF}+{self.__designation};{self.__prix};{self.__qte}+{self.Facture}&quot;', 1),
(664, 'DA106571', 370, ' def getcode(self):\r\n        return self.__code\r\n    def getdésignation(self):\r\n        return self.__désignation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getcatégorie(self):\r\n        return self.__catégorie\r\n    def setcode(self):\r\n        return self.__code', 2),
(665, 'DA102534', 376, '    def Enregistrer_Articles(self, nom_fichier):\r\n        info = &amp;quot;&amp;quot;\r\n        for obj in self.Articles:\r\n            info += obj.__str__() + &amp;#039;\\n&amp;#039;\r\n        with open(nom_fichier + &amp;quot;.txt&amp;quot;, &amp;quot;w&amp;quot;) as file:\r\n            file.write(info)', 2),
(666, 'DA107777', 369, 'class Article() :\r\n CATEGORIES = [&quot;informatique&quot;,&quot;Bureautique&quot;]\r\ndef __init__(self,code=None,désignation= None,prix=None,qte=None,catégorie=None) :\r\n        self.__code = code\r\n        self.__désignation = désignation\r\n        self.__prix = prix\r\n        self.__qte = qte\r\n        self.__catégorie = catégorie\r\ndef set_code (self,code):\r\nif not isinstance(code,str)or not code .starts with (&quot;ART&quot;_)or not code[4:].isdigit():\r\n     raise\r\nArticlenavalideException(&quot;code invalide&quot;)\r\nself._code = code \r\ndef get_code(self) :\r\nreturn self._code\r\ndef set_disignation(self,disignation):\r\nif not isinstance(disgnation,str)\r\nor len (designation)&gt;300\r\nraise \r\nArticlenavalideException(&quot;disignation invalid&quot;)\r\nself._designation = designation \r\ndef get_designation (self)\r\nreturn self.__designation\r\ndef set_prix(self,prix)\r\nif not isinstance (prix,(int,float)):\r\nraise\r\nArticleInvalidExeption(&quot;prix doit etre une valeur numerique&quot;)\r\nprix_str = {&quot;:.3f}&quot;.format(prix)\r\nif prix_str.count(&#039;.&#039;) != 1:\r\nraise\r\nself._categorie = categorie \r\ndef  get categorie (self):\r\nreturn self.categorie\r\ndef __str__(self):\r\nreturn &amp;quot;code :&amp;quot;  ; (self.__code) + &amp;quot;prix:&amp;quot;  ;  str(self.__prix) ; \r\n &amp;quot;qte :&amp;quot; ;   str(self.__qte) ;  &amp;quot;catégorie:&amp;quot; ;  (self.__catégorie)\r\n', 3),
(667, 'DA106571', 371, ' def __str__(self):\r\n        return f&quot;le code darticle: {self.__code} ,,  désignation:{self.__désignation}, la qte :{self.__qte},sa catégorie:{self.__catégorie}&quot;;\r\n    \r\n    ', 1),
(668, 'DB30143', 369, 'import re \r\nclass Article:\r\n    def __init__(self,c,d,p,q,ca):\r\n        if re.match(r&amp;amp;quot;^(ART_)[0-9]{5}$&amp;amp;quot;,c) and re.match(r&amp;amp;quot;[A-Za-z0-9]{,300}&amp;amp;quot;,d) and (q&amp;amp;gt;0)  and re.match(r&amp;amp;quot;(Informatique)|(Bureautique)&amp;amp;quot;,ca) and re.match(r&quot;^[0-9]{1,}\\.[0-9]{3}$&quot;,p) :\r\n            self.__code = c \r\n            self.__désignation = d \r\n            self.__prix = p \r\n            self.__qte = q \r\n            self.__catégorie = ca\r\n        else:\r\n            raise ArticleInvalideException()', 4),
(669, 'DB30958', 374, 'class collectionsdArticle:\r\n    def __init__(self):\r\n        self.article = []\r\n\r\n\r\n    def Ajouter(self,newArticle):\r\n        if newArticle not in self.article:\r\n            self.article.append(newArticle)\r\n            print(&quot;l&#039;article a bien été ajouter&quot;)\r\n        else:\r\n            print(&quot;l&#039;article existe deja a la collection d&#039;article !!&quot;)\r\n   ', 2),
(670, 'VA159550', 376, ' (Dans la class Art)\r\ndef __gt__(self, other):\r\n        return self.__prix &lt; other.__prix\r\n(dans la class Fact):\r\n    def Enregistrer_Articles(self, nom_fichier):\r\n        with open(nom_fichier, &#039;a&#039;) as f:\r\n            Facture.collAchat.sort()\r\n            for x in range(len(Facture.collAchat)):\r\n                f.write(f&#039;{Facture.collAchat[x].__str__()}\\n&#039;)', 3),
(671, 'DB30143', 370, '    def getcode(self):\r\n        return self.__code\r\n    def getdesignation(self):\r\n        return self.__désignation\r\n    def getprix(self):\r\n        return self.__prix\r\n    def getqte(self):\r\n        return self.__qte\r\n    def getcategorie(self):\r\n        return self.__catégorie\r\n    def setcode(self,v):\r\n        self.__code = v\r\n    def setdesignation(self,v):\r\n        self.__désignation= v\r\n    def setprix(self,v):\r\n        self.__prix = v\r\n    def setqte(self,v):\r\n        self.__qte = v\r\n    def setcategorie(self,v):\r\n        self.__catégorie = v', 2),
(672, 'CB355407', 374, '@staticmethod\r\n    def Ajouter(Article):\r\n\r\n        if Article in Facture.articles :\r\n            print(&quot;désole ce element il excist dans votre list&quot;)\r\n\r\n        else :\r\n            Facture.articles.append(Article)', 2),
(673, 'DB30143', 371, '    def __str__(self) :\r\n        return f&quot;{self.__code};{self.__désignation};{self.__prix};{self.__qte};{self.__catégorie}&quot;', 1),
(674, 'DA105622', 375, 'def montant_facture(self):\r\nmontant_total = 0\r\nfor article in self.articles:\r\nmontant_total +=\r\narticle.get', 1),
(675, 'DB30143', 372, 'class ArticleInvalideException(Exception):\r\n    def __str__(self):\r\n        return &quot;l&#039;article est incorrecte !&quot;', 2),
(676, 'DB30143', 373, 'from datetime import date\r\nclass Facture ():\r\n    tableau = []\r\n    num = 0\r\n    def __init__(self):\r\n        Facture.num+=1\r\n        self.__Numéro = Facture.num\r\n        self.__Collection  = Facture.tableau\r\n        self.__Datefacture = date.today()', 1),
(677, 'CI1143', 376, '    \r\n    def Enregistrer_Articles(fichier):\r\n        f = open(&#039;fichier.txt&#039;, &quot;a&quot;) as fichier(f.write(list))\r\n', 1),
(678, 'DA102389', 376, '    def Enregistrer_Articles(nom_fichier):\r\n     f=open(&#039;nom de fichier&#039;,&#039;a&#039;)as fichier\r\n     f.write(list)', 1),
(679, 'DA104117', 376, 'def Enregistrer_Articles(nom_fichier) :\r\n    with open(nom_fichier,&#039;a&#039;) as f\r\n        f.readlines()', 1),
(680, 'DB30143', 374, 'def voidAjouter(self,A):\r\n        if isinstance(A,Article):\r\n            for i in self.__Collection:\r\n                if A == i:\r\n                    raise Exception(&quot;l&#039;article est incorrecte&quot;)\r\n                self.__Collection.append(A)', 2),
(681, 'DA102534', 377, '    def __str__(self):\r\n        info = f&#039;Numéro facture:{self.Numéro} date facture:{self.__date}\\n&#039;\r\n        info += &quot;Liste des articles\\n&quot;\r\n        info += &quot;Désignation      prix(en DH)       quantité           prix Total\\n&quot;\r\n        for obj in self.Articles:\r\n            info += obj.__str__()\r\n        info += f&#039;Montant de la facture : {self.Montant_facture()} DH&#039;\r\n        return info', 2),
(682, 'DB30143', 375, 'def Montant_facture(self):\r\n        montant = 0\r\n        for i  in  self.__Collection:\r\n             montant  += i.getqte() * i.getprix()\r\n        return montant', 2),
(683, 'VM18941', 373, 'class Facture :\r\n    def __init__(self, Numéro , Date , Collection ):\r\n        self.number = Numéro\r\n        self.date = Date \r\n        self.COL = Collection\r\n        \r\n', 1),
(684, 'DA104704', 377, '    def __str__(self):\r\n        article_infos = &quot;&quot;\r\n        somme = 0\r\n        for i in self.__coll_achat:\r\n            article_infos = i__designation + str(i__prix) + str(i__qte) + str(Facture.montant_Facture(i))\r\n            somme += Facture.montant_Facture(i)\r\n        return (f&quot;Numéro facture {self.__Nfacture} date facture {self.__Date_Facture}\\n\\n\\n&quot;\r\n                f&quot;Liste des articles \\n\\n&quot;\r\n                f&quot;Désignation      prix(en DH)      quantité      prix Total\\n\\n&quot;\r\n                f&quot;{article_infos}\\n&quot;\r\n                f&quot; Montant de la facture : {somme}DH.&quot;)', 2.5),
(685, 'DA105622', 377, 'def__str__(self):\r\n resultat = f&quot;Facture numero \r\n{self.numero},date: {self', 0.5),
(686, 'DA102389', 375, '    def Montant_facture(self):\r\n                return (self.__prix * self.__  qte)\r\n', 2),
(687, 'DA104704', 376, '    def Enregistrer_Articles(self):\r\n        with open(&quot;Articles.txt&quot;, &quot;a&quot;) as f:\r\n            for i in self.__coll_achat:\r\n                f.write(str(i))', 2),
(688, 'DB30143', 376, 'def Enregistrer_Articles(self,nom_fichier) :\r\n        while True:\r\n            cpt =0\r\n            for i in range (len(self.__Collection)-1):\r\n                  if self.__Collection[i].getprix() &lt; self.__Collection[i + 1].getprix() :\r\n                      self.__Collection[i] ,self.__Collection[i+1] = self.__Collection[i+1] ,self.__Collection[i] \r\n                      cpt =1\r\n            if cpt == 0:\r\n                break\r\n        with open (nom_fichier,&quot;w&quot;) as file :\r\n            for j in self.__Collection:\r\n                file.write(j.__str__()+&quot;\\n&quot;)', 3),
(689, 'DA108545', 377, ' def __str__():\r\n        print(&quot;Numéro facture&quot;, self.__num_facture,&quot; date facture &quot;, self.__date_facture\r\n              &quot;\\n  listes des articles \\n Désignation      prix(en DH)    quantité           prix Total\\n&quot;, Article.get_prix(),&quot;      &quot;,Article.get_qte())', 2),
(690, 'DA106935', 377, '    def __str__(self):\r\n        info = f&quot;Numéro facture {self.num}   date facture {self.date}&quot;\r\n        info+=&quot;\\n\\n\\n\\n&quot;\r\n        info+=&quot;Liste des articles \\n&quot;\r\n        info+=&quot;Désignation      prix(en DH)       quantité           prix Total&quot;\r\n        info+=f&quot;{self.__designation}       {self.__prix}        {self.__qte}     {Facture.Montant_facture()}\\n&quot;\r\n        info+=f&quot;Montant de la facture {self.Montant_facture()}&quot;', 1.5),
(691, 'CI1143', 372, 'class ArticleInvalideException():\r\n   def code(self):\r\n       try:\r\n           self.__code\r\n           print(&quot;ok pas d&#039;erreur&quot;)\r\n       exept:\r\n          print(&quot;erreur&quot;)\r\n   def designation(self):\r\n    try:\r\n        self.__designation\r\n        print(&quot;ok pas d&#039;erreur&quot;)\r\n    exept:\r\n     print(&quot;erreur&quot;)\r\n\r\n\r\n   def prix(self):\r\n    try:\r\n        self.__prix\r\n        print(&quot;ok pas d&#039;erreur&quot;)\r\n    exept:\r\n       print(&quot;erreur&quot;)\r\n\r\n\r\n   def qte(self):\r\n    try:\r\n        self.__qte\r\n        print(&quot;ok pas d&#039;erreur&quot;)\r\n    exept:\r\n    print(&quot;erreur&quot;)\r\n\r\n    def categorie(self):\r\n        try:\r\n            self.__categprie\r\n            print(&quot;ok pas d&#039;erreur&quot;)\r\n        exept:\r\n          print(&quot;erreur&quot;)', 1),
(692, 'DB30143', 377, 'def __str__(self):\r\n        ch = &quot;&quot;\r\n        ch += f&quot;Numéro facture {self.__Numéro}   date facture {self.__Datefacture} \\n&quot;\r\n        ch += &quot;Liste des articles \\n&quot;\r\n        ch += &quot;Désignation      prix(en DH)       quantité           prix Total \\n&quot;\r\n        for j in self.__Collection:\r\n          ch += f&quot;{j.getdesignation()}      {j.getprix()}      {j.getqte()}      {j.getprix()*j.getqte()} \\n&quot;\r\n        ch += f&quot;Montant de la facture : {self.Montant_facture()} DH.&quot;\r\n        return ch', 3),
(693, 'DA109151', 371, 'def __str__(self):\r\n        return f&quot;{self.code} ; {self.designation} ; {self.prix} ; {self.qte} ; {self.categorie} &quot;\r\n', 1),
(694, 'CI459', 377, ' def __str__(self):\r\n         p1= &quot;Numero facture 2 date factore 04/03/2024&quot;\r\n\r\n\r\n         p1=   &quot;liste des articles&quot;\r\n         p1 =&quot;Desination&quot;+&quot; &quot;+ &quot;prix (en dh)&quot;+&quot; &quot;+&quot;quantite&quot;+&quot; &quot;+ &quot;prix Total&quot;\r\n         p1 = &quot;                                                                &quot;\r\n         p1= &quot;PC PORTABLE 4000,334&quot;+ &quot;        &quot;+ &quot;12&quot;+ &quot;        &quot;+ &quot;48004,008&quot;\r\n         p1= &quot;IMPREMANT 1500,003&quot;+&quot;    &quot;+        &quot;10&quot;+&quot;         &quot;+&quot;48004,008&quot;\r\n         P1=&quot;                                                                      &quot;\r\n         P1=&quot;                                                                      &quot;\r\n         P1=&quot;                                                                      &quot;\r\n         P1=&quot;Montant de la facture: 63004,038DH.&quot;\r\n         return p1\r\n    ', 1),
(695, 'DA109151', 372, 'class ArticleInvalideException(Exception):\r\n    def __init__(self):\r\n        self.massage = &quot;article invalide&quot;\r\n', 2),
(696, 'DA108545', 375, '  def Montant_facture():\r\n            return Article.get_prix()*Article.get_qte()', 1),
(697, 'DA109151', 374, 'def Ajouter(self,nouvel_article):\r\n        il nouvel_article not in self.articles:\r\n\r\n            self.articles.append(nouvel_article)\r\n        print(&quot;Article ajoute avec succes&quot;)\r\n    else:\r\nprint(&quot;errer: larticle exicte dans un la collection&quot;)\r\n', 2),
(698, 'DA107295', 371, 'def __str__(self):\r\nreturn f&amp;quot; {self.__cod}{self.__disignation}{self.__prix}{self.__qte}{self.__categorie}\r\nclass Articlinvalidexception (expition):\r\ndef __int__ (self):\r\nself.message =&quot; Article et invalid&quot;;', 1),
(699, 'DA107777', 370, 'getters and setters', 2),
(700, 'VM18941', 375, 'def Montant_facture() :\r\n       for article in collection :\r\n              facture += totale', 2),
(701, 'DA101003', 377, 'class facture :\r\ndef __init__(self,numero_facture,date_facture,articles_achetes):\r\nself.numero_facture = numero_facture\r\nself.date_facture = date_facture \r\ndate_facture \r\nself.articles_achetes = artocles_achetes\r\ndef __str__(self):\r\narticles__str__(self):\r\narticles__str = &#039;,&#039;.join(self.articles)\r\nreturn f&quot;numero facture} date facture{self.date_facture}\r\n{atricles_str}&quot;', 1),
(702, 'DA109151', 377, '    def __str__(self):\r\n        return (f&quot;{self.numeroF} {self.dateF} &quot;\r\n                f&quot;{self.articles}&quot;\r\n                f&quot;{self.designation} {self.prix}&quot;\r\n                f&quot;{self.dte} {self.prixT}&quot;)', 1),
(703, 'DA107777', 375, 'def Montant_facture(self) : \r\nreturn\r\n ', 1),
(704, 'DA105622', 376, 'def Enregistrer_Articles(self,\r\nnpm_fichier):\r\nsorted_articles =\r\nsorted(self.achats,key=lambda x:nx.prix,\r\nreverse=true)\r\nwith open(nom_fichier,&amp;#039;w&amp;#039;) as \r\nfichier ;\r\nfor article in \r\nsorted_articles\r\nfichier.write (f&amp;quot;Nom;\r\n{article.nom}, prix ; {article.prix}\\n&amp;quot;)\r\n', 1),
(705, 'DA107295', 372, 'class Articlinvalidexception (expition):\r\ndef __int__ (self):\r\nself.message =&amp;amp;quot; Article et invalid&amp;amp;quot;;\r\n', 2),
(706, 'CB355407', 376, '    def Enregistrer_Articles(self, Nom_fichier):\r\n        with open(Nom_fichier , &quot;a&quot;) as file :\r\n            for i in range(0,len(Facture.articles),1):\r\n                file.write(Facture.articles[i])', 2),
(707, 'DB30758', 372, 'ArticleInvalideException(exeption):\r\n    def __init__(self,message= &amp;quot;article invalide&amp;quot;):\r\n        self.message = message\r\n        super().__init__(self.message)', 2),
(708, 'VA159550', 377, '    def __str__(self):\r\n        des = &#039;&#039;\r\n        for x in range(len(Facture.collAchat)):\r\n            des += f&quot;{Facture.collAchat[x].getDesignation()}   {Facture.collAchat[x].getPrix()} {Facture.collAchat[x].getQte()} {Facture.collAchat[x].getPrix() * Facture.collAchat[x].getQte()}\\n&quot;\r\n\r\n        data = f&quot;&quot;&quot;\r\n        Numéro facture {Facture.num}   date facture {self.dateFact}\r\n\r\n        Liste des articles\r\n\r\n        Désignation  prix(en DH) quantité  prix Total\r\n        {des}\r\n\r\n        Montant de la facture : {self.Montant_facture()} DH.\r\n        &quot;&quot;&quot;\r\n        return data\r\n        ', 3),
(709, 'CI459', 376, 'def Enregistrer_Articles(self.n)', 1),
(710, 'DA107777', 372, 'def   ArticleInvalideException(self):\r\nreturn (\r\n ', 1),
(711, 'VM18941', 374, 'class Collectionarticle():\r\n      def ajouter (self,nouvelarticle):\r\n              if nouvelarticle not in self.articles :\r\n                    self.articles.append (nouvelarticle)\r\n              else :\r\n                    print(&quot;errreuuur l article n&#039;existe pas dans la collection&quot;)\r\n', 2);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(712, 'DA104117', 372, 'class ArticleInvalideException():\r\n    def __init (self):\r\n        self.message=&quot; Article Invalide&quot;', 2),
(713, 'DA107777', 377, '', NULL),
(715, 'DA106935', 376, '\r\n    def Enregistrer_Articles(self,nom_fichier):\r\n        res = Facture.articles.sort()\r\n        with open(nom_fichier,&quot;a&quot;) as fichier:\r\n            fichier.write(res)', 1.5),
(717, 'DA102389', 372, 'ArticleInvalideException() :\r\nprint(&quot;article invalid&quot;)', 1),
(718, 'DA107295', 374, 'class collectionarticles:\r\ndef_int_(self):\r\nselt.articles = \r\ndef ajouter (self, npu)vel_article):\r\nif nouvel_article not in self.articles:\r\nself.articles.append(nouvel)_article\r\nprint(&quot;articleajoute avec succee&quot;)\r\nelse:\r\nprint (&quot;erreur &quot;)', 2),
(719, 'CB355407', 375, '@staticmethod\r\n    def Montant_facture():\r\n        montant = 0\r\n        for i in range(0, len(Facture.articles), 1) :\r\n            montant += Facture.articles[i][3]\r\n        print(f&quot;votre montant est {montant}&quot;)', 1),
(720, 'DA104117', 375, ' def Montant_facture(self) :\r\n        m=1\r\n        for art in range(len(Facture.collAchat )):\r\n            m+=Facture.collAchat[art].getPrix()*Facture.collAchat[art].getqte()\r\n            return m\r\n            ', 2),
(721, 'CB355407', 372, 'import re\r\nclass Article :\r\n    def __init__(self, code, désignation, prix, qte, catégorie):\r\n        try:\r\n            codeV = re.search(r&quot;[A-Z]{3}_[0-9]{5}&quot;, code)\r\n            if codeV :\r\n                self.__code = code\r\n            desV = re.search(r&quot;[A-z0-9]{1,300}&quot;, désignation)\r\n            if desV :\r\n                self.__désignation = désignation\r\n            prV = re.search(r&quot;[0-9].[0-9]{,3}&quot;, str(prix))\r\n            if prV :\r\n                self.__prix = prix\r\n            if qte &gt; 0 :\r\n                self.__qte = qte\r\n            ctg = re.search(r&quot;Informatique|Bureautique&quot;, catégorie)\r\n            if ctg :\r\n                self.__catégorie = catégorie\r\n        except Exception as e :\r\n            print(&quot;ArticleInvalideException&quot;)', 2),
(723, 'DB30759', 369, 'import re \r\nclass Article:\r\n  def __init__(self,code,designation,prix,categorie,qte):\r\n   if re.match(&quot;^ART_+[0-9]{5}$,code&quot;):\r\n             self.__code = code \r\n   else :\r\n      print(Articleinvalidexception().message)\r\n   if len(designation)&lt;300\r\n    self.__designation = designation\r\n   else :\r\n       print(Articleinvalidexception().message)\r\n   if re.match(&quot;[0-9]{1,}\\.[0-9]{3}&quot;,str(prix)):\r\n       self.__prix = float(prix)\r\n   else :\r\n       print(Articleinvalidexception().message)\r\n    if qte &gt; 0 :\r\n       self.__qte = qte \r\n    else :\r\n       print(Articleinvalidexception().message)\r\n       if categorie == &quot;informatique&quot; or categorgie == &quot;bureautique&quot;:\r\n    else :\r\n       print(Articleinvalidexception().message)\r\n ', 3),
(724, 'DA104117', 377, 'def __str__():\r\n    for x in range(len(Facture.collAchat)):\r\n        d+=f&quot;{Facture.collAchat[x].getdésignation}&quot;', 0.5),
(725, 'DB30759', 370, 'def get_designation(self,designation):\r\n      self.designation = designation \r\n   def get_prix(self,prix):\r\n      self.prix = prix\r\n   def get_qte(self,qte):\r\n      self.qte = qte\r\n   def get_code(self,code):\r\n      self.code = code\r\n   def get_caterorie(self,categorie):\r\n      self.get_caterorie= categorie\r\n', 2),
(726, 'DB30759', 371, 'def __str__ (self):\r\n    return(self.__code;self.__designation;self.__prix;self.__qte;self.__categorie)\r\n', 1),
(727, 'DB30759', 372, 'def __init__(self):\r\nself.message = &quot;Article est invalide &quot;\r\n', 1),
(729, 'DB30759', 374, 'class Collection :\r\n    def __init__(self):\r\n        self.articles = []\r\n    def ajouter(self,nouvel_article):\r\n     if nouvel_article not in self.articles\r\n      self.article.append(nouvel_article)\r\n      print(&quot;article ajouter&quot;)\r\n     else :\r\n     print(&quot;article existe deja&quot;)\r\n', 1.5),
(730, 'DB30759', 375, 'def montant_facture()\r\nreturn self.__montantfacture', 1),
(731, 'DB30759', 376, 'def Enregistrer_Articles(nom_fichier)\r\nf = open(a.txt&#039;, &#039;wt&#039;)\r\n    for i in range(10):\r\n      f.write( &quot;ligne &quot; + str(i+1) + &quot;\\n&quot;)\r\n    f.close()\r\n', 1),
(732, 'DB30759', 377, 'def __str__ (self):\r\n    return(self.__numero ; self.__datefacture ;self.__montantfacture)\r\n', 1),
(735, 'CI3546', 369, 'class Article:\r\n    CATEGORIES = [&amp;quot;Informatique&amp;quot;, &amp;quot;Bureautique&amp;quot;]\r\n\r\n    def _init_(self, code, designation, prix, qte, categorie):\r\n        self.set_code(code)\r\n        self.set_designation(designation)\r\n        self.set_prix(prix)\r\n        self.set_qte(qte)\r\n        self.set_categorie(categorie)', 2),
(736, 'CI3546', 370, '  def set_code(self, code):\r\n        if not isinstance(code, str) or not code.startswith(&amp;quot;ART_&amp;quot;) or not code[4:].isdigit():\r\n            raise ArticleInvalideException(&amp;quot;Code invalide&amp;quot;)\r\n        self._code = code\r\n\r\n    def get_code(self):\r\n        return self._code\r\n\r\n    def set_designation(self, designation):\r\n        if not isinstance(designation, str) or len(designation) &amp;gt; 300:\r\n            raise ArticleInvalideException(&amp;quot;Désignation invalide&amp;quot;)\r\n        self._designation = designation\r\n\r\n    def get_designation(self):\r\n        return self._designation\r\n\r\n    def set_prix(self, prix):\r\n        if not isinstance(prix, (int, float)):\r\n            raise ArticleInvalideException(&amp;quot;Prix doit être une valeur numérique&amp;quot;)\r\n        prix_str = &amp;quot;{:.3f}&amp;quot;.format(prix)\r\n        if prix_str.count(&amp;#039;.&amp;#039;) != 1:\r\n            raise ArticleInvalideException(&amp;quot;Prix doit avoir 3 chiffres après la virgule&amp;quot;)\r\n        self._prix = prix\r\n\r\n    def get_prix(self):\r\n        return self._prix\r\n\r\n    def set_qte(self, qte):\r\n        if not isinstance(qte, int) or qte &amp;lt; 0:\r\n            raise ArticleInvalideException(&amp;quot;Quantité invalide&amp;quot;)\r\n        self._qte = qte\r\n\r\n    def get_qte(self):\r\n        return self._qte\r\n\r\n    def set_categorie(self, categorie):\r\n        if categorie not in self.CATEGORIES:\r\n            raise ArticleInvalideException(&amp;quot;Catégorie invalide&amp;quot;)\r\n        self._categorie = categorie\r\n\r\n    def get_categorie(self):\r\n        return self._categorie', 2),
(737, 'CI3546', 371, '  def _str_(self):\r\n        return f&amp;quot;{self._code};{self._designation};{self._prix:.3f};{self._qte};{self._categorie}&amp;quot;', 1),
(738, 'CI3546', 372, 'ry:\r\n    article1 = Article(&amp;quot;ART_00001&amp;quot;, &amp;quot;Ordinateur portable&amp;quot;, 1200.567, 5, &amp;quot;Informatique&amp;quot;)\r\n    print(article1)\r\nexcept ArticleInvalideException as e:\r\n    print(e)', 1),
(739, 'CI3546', 373, '.', 0),
(740, 'CI3546', 374, '.', NULL),
(741, 'CI3546', 377, '.', 0),
(742, 'CI3546', 375, '.', 0),
(743, 'ZG166772', 371, '  def __str__(self):\r\n            return f&quot;{self.code} ; {self.designation} ; {self.prix} ; {self.qte} ; {self.categorie}&quot;', 1),
(744, 'ZG166772', 369, 'import re\r\nclass Article:\r\n    def __init__(self, code, designation, prix, qte, categorie):\r\n        if re.match(&amp;#039;^ART_+[0-9]{5}$&amp;#039;, code):\r\n            self.__code = code\r\n        else :\r\n            print(not ArticleInvalideException().message)\r\n        if len(designation) &lt; 300 :\r\n            self.__designation = designation\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if re.match(&amp;#039;[0-9]{1,}\\.[0-9]{3}&amp;#039;, str(prix)):\r\n            self.__prix = float(prix)\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if qte &amp;gt; 0:\r\n            self.__qte = qte\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n        if categorie == &amp;#039;Informatique&amp;#039; or categorie == &amp;#039;Bureautique&amp;#039;:\r\n            self.__categorie = categorie\r\n        else:\r\n            print(ArticleInvalideException().message)\r\n\r\n    def getCode(self):\r\n        return self.__code\r\n    def getDesignation(self):\r\n        return self.__designation', 3),
(745, 'ZG166772', 370, '\r\n    class Article:\r\n        print(ArticleInvalideException().message)\r\n\r\n        def getcode(self):\r\n            return self.__code\r\n\r\n        def getdesignation(self):\r\n            return self.__designation\r\n\r\n        def getprix(self):\r\n            return self.__prix\r\n\r\n        def getqte(self):\r\n            self.__qte\r\n\r\n        def getcategorie(self):\r\n            self.__categorie\r\n\r\n        def setcode(self, newcode):\r\n            return self.__code == newcode\r\n\r\n        def setdesignation(self, newdesign):\r\n            return self.__code == newdesign\r\n\r\n        def setprix(self, newprix):\r\n            return self.__code == newprix\r\n\r\n        def setqte(self, newqte):\r\n            return self.__code == newqte\r\n\r\n        def setcategorie(self, newcateg):\r\n            return self.__code == newcateg\r\n', 2),
(746, 'ZG166772', 372, 'class ArticleInvalideException(Exception):\r\n    def _init_(self):\r\n        self.message = &quot;Article invalide&quot;', 2),
(747, 'ZG166772', 373, 'from datetime import date\r\n\r\n\r\nclass Facture:\r\n    numero = 0\r\n    cllAchat = []\r\n\r\n    def _init_(self):\r\n        self.nmFact = Facture.numero\r\n        self.dateFactu = date.today()\r\n        Facture.numero += 1', 1),
(748, 'ZG166772', 375, '    def montant_Facture(self):\r\n        mont = 1\r\n        for x in range(len(Facture.cllAchat)):\r\n            mont += Facture.cllAchat[x].getPrix() * Facture.cllAchat[i].getQte()\r\n        return mont', 2),
(749, 'ZG166772', 374, '    def voidAJouter(self, article):\r\n        if article not in Facture.cllAchat:\r\n            Facture.cllAchat.append(article)\r\n        else:\r\n            print(&quot;L&#039;article est deja existe&quot;)', 2),
(750, 'ZG166772', 377, '    def __str__(self):\r\n        des = &amp;amp;amp;quot;&amp;amp;amp;quot;\r\n        for x in range(len(Facture.cllAchat)):\r\n                  des +=\r\n f&amp;amp;amp;quot;&amp;amp;amp;quot;&amp;amp;amp;quot;\r\n    {FacturecllAchat[x].getDesignation()}\r\n    {FacturecllAchat[x].getprix()}\r\n    {FacturecllAchat[x].getqte()}\r\n\r\n    &amp;amp;amp;quot;&amp;amp;amp;quot;&amp;amp;amp;quot;\r\n            f&amp;amp;amp;quot;&amp;amp;amp;quot;&amp;amp;amp;quot;\r\n    Numéro facture {Facture.numero}         date facture   { self.dateFactu}\r\n\r\n    \r\n    \r\n    Liste des articles \r\n    \r\n    Désignation    prix(en DH)    quantité        prix total \r\n              {des}\r\n    PC PORTABLE\r\n    IMPRIMANTE\r\n             \r\n\r\n\r\n    Montant de la facture:   {self.montant_Facture()}DH\r\n\r\n        &amp;amp;amp;quot;&amp;amp;amp;quot;&amp;amp;amp;quot;', 1),
(751, 'DA102626', 378, '    def __init__(self,code,designation,prix,qte,categorie):\r\n        self.code=code\r\n        self.designation=designation\r\n        self.prix=prix\r\n        self.qte=qte\r\n        self.categorie=categorie', NULL),
(752, 'CB346790', 379, '    def get_code(self):\r\n        return self._code\r\n\r\n    def get_designation(self):\r\n        return self._designation\r\n\r\n    def get_prix(self):\r\n        return self._prix\r\n\r\n    def get_qte(self):\r\n        return self._qte\r\n\r\n    def get_categorie(self):\r\n        return self._categorie\r\n\r\n    \r\n    def set_code(self, code):\r\n        self._code = code\r\n\r\n    def set_designation(self, designation):\r\n        self._designation = designation\r\n\r\n    def set_prix(self, prix):\r\n        self._prix = prix\r\n\r\n    def set_qte(self, qte):\r\n        self._qte = qte\r\n\r\n    def set_categorie(self, categorie):\r\n        self._categorie = categorie', NULL),
(753, 'DN46699', 379, 'def getcode(self):\r\n  return  self._code\r\ndef setcode(self,c):\r\n    self._code=c\r\ndef getdesignation(self):\r\n  return  self._designation\r\ndef setcode(self,d)\r\n    self._designation=d\r\n\r\ndef getqte(self):\r\n  return  self._code\r\ndef setqte(self,q):\r\n    self._code=q\r\n\r\ndef getprix(self):\r\n  return  self._prix\r\ndef setprix(self,p):\r\n    self._prix=p\r\n\r\n    def getcategorie(self):\r\n        return self._categorie\r\n\r\n    def setcategorie(self, cat):\r\n        self._categorie = cat\r\n', NULL),
(754, 'DA106392', 380, '    def __str__(self):\r\n        return f&amp;quot;{self.code};{self.dsignation};{self.prix};{self.qte};{self.categorie}&amp;quot;', NULL),
(755, 'DA102626', 379, '    def getCode(self):\r\n        return self.__code\r\n    def setCode(self):\r\n        self.__code=code\r\n     def getDesignation(self):\r\n       return self.__designation\r\n    def setDesignation(self):\r\n       self.__designation=designation\r\n    def getPrix(self):\r\n       return self.__prix\r\n    def setPrix(self):\r\n       self.__prix=prix\r\n    def getQte(self):\r\n        return self.__qte\r\n    def setQte(self):\r\n         self.__qte=qte\r\n    def getcategorie(self):\r\n        return self.__categorie\r\n    def setcategorie(self):\r\n        self.__categorie=categorie\r\n', NULL),
(756, 'CB346790', 378, 'classe Produit:\r\n    def _init_(self, code, designation, prix, qte, categorie):\r\n        self._code = code\r\n        self._designation = designation\r\n        self._prix = prix\r\n        self._qte = qte\r\n        self._categorie = categorie', NULL),
(757, 'CB346790', 380, ' def __str__(self):\r\n        return f&amp;quot;{self.__code}; {self.__designation}; {self.__prix}; {self.__qte}; {self.__categorie}&amp;quot;', NULL),
(758, 'DA106392', 378, 'class Produit :\r\n    def __init__(self,code= &amp;amp;quot;hjg&amp;amp;quot;,desi= &amp;amp;quot;hjg&amp;amp;quot;,prix= &amp;amp;quot;hjg&amp;amp;quot;,qte= &amp;amp;quot;hjg&amp;amp;quot;,cat= &amp;amp;quot;hjg&amp;amp;quot;):\r\n        self.code = code\r\n        self.dsignation = desi\r\n        self.prix = prix\r\n        self.qte = qte\r\n        self.categorie = cat\r\n', NULL),
(759, 'DA106392', 382, 'class Facture :\r\n    def __init__(self,numf,datf,cd):\r\n        self.Numero_de_la_facture  = numf\r\n        self.Date_facture = datf\r\n        self.Collection_Dachats = cd\r\n       ', NULL),
(760, 'DN46699', 380, 'def __str__(self,split=&quot;,&quot;):\r\n    print(&quot;le code&quot; + self._code + &quot;le designation&quot; +self._designation+ &quot;le quantite:&quot; + self._qte + &quot;prix:&quot; + self._prix)', NULL),
(761, 'CB346790', 381, '    class  def __init__(self):\r\n        self.message = &amp;quot; l’produit   est invalide &amp;quot;\r\nclass produit:\r\n    def __init__(self, c=None, d=None, p=None, q=None, cate=None):\r\n            self.__code = c\r\n            self.__designation = d\r\n            self.__prix = p\r\n            self.__qte = q\r\n            self.__categorie = cate\r\n        else:\r\n            raise produitInvalideException()', NULL),
(762, 'CB346790', 382, 'from datetime import datetime\r\nclass Facture:\r\n    number = 1\r\n    listProduit = []\r\n    def __init__(self):\r\n        self.__numFacture = Facture.number\r\n        Facture.number += 1\r\n        self.__datFActure = datetime.now()', NULL),
(763, 'DA102626', 380, ' def __str__(self):\r\n        return self.__code+&#039;;&#039;+self.__designation+&#039;;&#039;+self.__prix+&#039;;&#039;+self.__qte+&#039;;&#039;self.__categorie', NULL),
(764, 'CB346790', 384, '  @staticmethod\r\n        def montant_facture():\r\n            montant = 0\r\n            for prd in Facture.listProduit:\r\n                montant += prd.getPrix()\r\n            return montant\r\n', NULL),
(765, 'DA106392', 381, 'class Exeption :\r\n    pass\r\nclass Article_invalide_exeption (Exeption) :\r\n    def getMessage(self):\r\n        return (&amp;amp;amp;quot;l&amp;amp;amp;#039;Article est invalide&amp;amp;amp;quot;)\r\n', NULL),
(766, 'CB346790', 383, '               def ajouter(self,Produit):\r\n            if not Facture.ProduitExist(Produit):\r\n                Facture.listProduit.append(Produit)\r\n            else:\r\n                print(&amp;quot;Produit deja exist!!!&amp;quot;)\r\n\r\n\r\n        @staticmethod\r\n        def ProduitExist(Produit):\r\n            for prd in Facture.listProduit:\r\n                if prd.getCode() == Produit.getCode():\r\n                    return True\r\n            return False.getCode():\r\n                    return True\r\n            return False', NULL),
(767, 'DN46699', 381, 'def Poduitinvalid(self):\r\n    try:\r\n       code =input(&quot;donner le code&quot; )\r\n      \r\n    except Exception as e:\r\n        print(type(e))\r\n        \r\n        print(&quot;prouduit invalide&quot;\r\n            )\r\n\r\n        finnaly:\r\n        &quot;f&quot;', NULL),
(768, 'DA102626', 382, 'class facture(Produit):\r\n    def __init__(self, Numéro,date,collection,code,designation,prix,qte,categorie):\r\n        super().__init__ code,designation,prix,qte,categorie\r\n        self.Numéro= Numéro\r\n        self.date=date\r\n        self.collection=collection', NULL),
(769, 'DA106392', 379, ' def get_code(self):\r\n        return self.code\r\n    def get_desti(self):\r\n        return self.dsignation\r\n    def get_prix(self):\r\n        return self.prix\r\n    def get_qte(self):\r\n        return self.qte\r\n    def get_cate(self):\r\n        return self.categorie\r\n\r\n    def set_code(self,code):\r\n        self.code = code\r\n    def set_desti(self,dsignation):\r\n        self.dsignation = dsignation\r\n    def set_prix(self,prix):\r\n        self.prix = prix\r\n    def set_qte(self,qte):\r\n        self.qte = qte\r\n    def set_cate(self,categorie):\r\n        self.categorie = categorie\r\n', NULL),
(770, 'DN46699', 382, 'import datetime\r\nclass Facture(Prouduit):\r\n    def __init__(self,numerodefact,datefacture,collectionachat,code,designation,prix,qte,categorie):\r\n        super().__init__(code, designation, prix, qte, categorie)\r\n        self.--numerodefact=numerodefact\r\n        self.--datefacture=datefacture\r\n        self.--collectionachat=collectionachat', NULL),
(771, 'CB346790', 385, '@staticmethod\r\ndef Enregistrer_Produit():\r\n    list = Facture.triee()\r\n\r\n    with open(&amp;quot;file.txt&amp;quot;, &amp;quot;w&amp;quot;) as file:\r\n        for prd in list:\r\n            file.write(prd.__str__(), &amp;quot;\\n&amp;quot;)\r\n\r\n\r\n@staticmethod\r\ndef triee():\r\n    l = Facture.listProduit()\r\n\r\n    for i in range(len(l) - 1): g\r\n    max_ind = i\r\n    for j in range(i + 1, len(l)):\r\n        if l[j].getPrix() &amp;gt; l[max_ind].getPrix():\r\n            max_ind = j', NULL),
(772, 'DN46699', 383, 'l=[]\r\ndef Ajouterproduit(self,prd):\r\n    for prd in self.collectionachat:\r\n        if prd in l:\r\n            print(&quot;deja exciste&quot;)\r\n        else:\r\n            l.append(prd)', NULL),
(773, 'DA102626', 381, '    def ProduitinvalideException(self):\r\n        try:\r\n            print(&quot; l’produit   est invalide &quot;)\r\n        except:\r\n            print(&#039;l’produit   est invalide&#039;)\r\n        finally:\r\n            print(&#039;fin programme!&#039;)\r\n', NULL),
(774, 'DA106392', 383, '  def Ajoute(self.Article):\r\n    if not Facture .Article:\r\n        Facture.listArticle.append(Article)', NULL),
(775, 'DA102626', 383, '  l=[]\r\n        def AjouterProduit(Produit):\r\n              if produit in l:\r\n                print(&quot;produit et execete&quot;)\r\n              else:\r\n                  print(&#039;un message d’erreur &#039;)\r\n                  l.append()\r\n', NULL),
(776, 'DN46699', 384, 'def Montant(self):\r\n    mont=0\r\n        for prd in self.collectionachat:\r\n            res= (getprix()*getqte())\r\n            mont+=res\r\n    print(&quot;le montant est:&quot;,mont)', NULL),
(777, 'DA106392', 385, 'def Enregistre(self):\r\n        lista = facture.triee():\r\n        whith open(&amp;quot;fille.txt&amp;quot;,&amp;quot;w&amp;quot;) as fille\r\n        for are in list:\r\n            fille.avarite(art.__str)\r\n', NULL),
(778, 'DA102626', 384, ' @staticmethod\r\n    def Montant_facture():\r\n        montant=0\r\n        for prod in facture.listproduit:\r\n            montant+=prod.getPrix()\r\n            return montant', NULL),
(779, 'CB346790', 386, 'def __str__(self):\r\n    print(f&quot;Numéro facture&quot;){self.__numFacture}', NULL),
(780, 'DA102626', 385, ' @staticmethod\r\n    def Enregistrer_Produit() :\r\n        list=facture.triee()\r\n        with open(&#039;fille.txt&#039;,&#039;w&#039;)as fille:\r\n            for produit in list:\r\n                fille.write(produit.__str__(),&quot;/n&quot;)\r\n                ', NULL),
(781, 'DA102626', 386, 'form datatime import data\r\nclass AfficherFacture():\r\n', NULL),
(782, 'DN46699', 378, 'import re\r\n class Prouduit:\r\n    def __init__(self,code,designation,prix,qte,categorie):\r\n        if:\r\n\r\n            res=re(^[A-Z]-[1-2]*,code)\r\n            self._code=code\r\n        res=re([A-Z]{100})\r\n        self._designation=designation\r\n        self._prix=prix\r\n        self._qte=qte\r\n        l=[&quot;informatique&quot;,&quot;bureautique&quot;]\r\n        if categorie in l\r\n    \r\n            self._categorie=categorie', NULL),
(783, 'DN46699', 385, 'def Enrigistrer(self):\r\n    nl = []\r\n    max = l[0]\r\n        for prd in self.collectionachat:\r\n        if prd &gt; max:\r\n            nl.append(prd)\r\n    return nl\r\n\r\nwith open(&quot;fichiet.txt&quot;,&quot;a&quot;)as fichier:\r\n    fichier.write(nl)', NULL),
(784, 'DN46699', 386, 'def Affichefacture():\r\nself.__str__()\r\n', NULL),
(785, 'Z673521', 387, 'CREATE DATABASE E-commerce\r\nUSE E-commerce', 1),
(786, 'CI1417', 387, 'CREATE DATABASE E_commerce;\r\nUSE  E_commerce;', 1),
(787, 'D689477', 387, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;\r\n', 1),
(788, 'DA104864', 387, 'CREATE DATABASE E_commerce; ', 1),
(789, 'DA105115', 387, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;\r\n', 1),
(790, 'DA107236', 387, 'CREATE DATABASE  E_commerce;\r\n\r\nUSE  E_commerc;', 1),
(791, 'DA102284', 387, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;', 1),
(792, 'DA106939', 387, 'CREATE DATABASE E_commerce;', 1),
(793, 'DA107633', 387, 'CREATE DATABASE E_commerce;\r\n\r\nUSE E_commerce;', 1),
(794, 'CN51111', 387, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;', 1),
(795, 'DB31001', 387, 'create database E_commerce;\r\nuse E_commerce;', 1),
(796, 'CI2249', 387, 'CREATE DATABASE Ecom\r\n\r\nUSE Ecom,', 1),
(797, 'DA105449', 387, 'DROP DATABASE if EXISTS ecommerce;\r\nCREATE DATABASE ecommerce;\r\nUSE ecommerce;\r\n', 1),
(798, 'DA106392', 387, ' CREATE TABLE Client (\r\n    codeClt INT,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50),\r\n    tel VARCHAR(15)\r\n);\r\n CREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    désignation VARCHAR(100) ,\r\n    description VARCHAR(255),\r\n    catégorie VARCHAR(50),\r\n    prixAchat INT,\r\n    nbrEnstock INT\r\n   \r\n    );\r\n CREATE TABLE Panier (\r\n    codePanier INT ,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal INT,\r\n    \r\n);\r\n CREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantité INT,\r\n    prix INT,\r\n\r\n);', 0),
(799, 'DA106392', 388, 'create database E_commerce;\r\nDROP DATABASE E_commerce;\r\nuse E_commerce;\r\nDROP TABLE\r\n CREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50),\r\n    tel VARCHAR(15)\r\n);\r\nDROP TABLE\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    désignation VARCHAR(100) UNIQUE,\r\n    description VARCHAR(255),\r\n    catégorie VARCHAR(50),\r\n    prixAchat INT,\r\n    nbrEnstock INT\r\n   \r\n    );\r\nDROP TABLE\r\n CREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal INT,\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)ON DELETE CASCADE ON UPDATE CASCADE ,\r\n    \r\n);\r\nDROP TABLE\r\n CREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantité INT CHECK (quantite &amp;amp;gt;= 1),\r\n    prix INT,\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)ON DELETE CASCADE ON UPDATE CASCADE,\r\n    PRIMARY KEY (refPrd, codePanier) \r\n);\r\n', 11),
(800, 'DA104864', 388, 'CREATE TABLE clients (\r\ncodeClt INT PRIMARY KEY ,\r\nnom VARCHAR(20),\r\nprenom VARCHAR(20),\r\nadresse VARCHAR(20),\r\nville VARCHAR(20),\r\ntel INT\r\n);\r\n\r\nCREATE TABLE produit (\r\nrefPrd INT PRIMARY KEY ,\r\ndesignation VARCHAR(20) UNIQUE ,\r\ndescriptions VARCHAR(20),\r\ncategorie VARCHAR(20),\r\nnbrenstock INT \r\n);\r\n\r\nCREATE TABLE panier (\r\ncodepanier INT PRIMARY KEY ,\r\ndatecreation date ,\r\ndatecommande date,\r\ndatelivrasion date,\r\nmontanttotal INT,\r\ncodeclt INT ,\r\nFOREIGN KEY (codeclt) REFERENCEs clients(codeClt)\r\n);\r\n\r\nCREATE TABLE elementspanier (\r\nrefprd INT ,\r\ncodepanier int ,\r\nquantite INT CHECK (quantite &amp;gt;= 1),\r\nprix INT,\r\nFOREIGN KEY (refprd) REFERENCEs produit(refPrd) ON UPDATE SET refPrd,\r\nFOREIGN KEY (codepanier) REFERENCEs panier(codepanier) ON UPDATE SET codepanier,\r\nPRIMARY KEY(refprd, codepanier)\r\n);', 11),
(801, 'DA104711', 387, 'CREATE DATABASE Ecommerce;', 1),
(802, 'VA154626', 387, 'CREATE DATABASE E_commerce;\r\n\r\nUSE E_commerce;\r\n\r\n', 1),
(803, 'D689477', 388, 'CREATE TABLE clientt(\r\ncodeclt INT PRIMARY KEY ,\r\nnom VARCHAR(50),\r\nprenom VARCHAR(50),\r\nadresse VARCHAR(50),\r\nville VARCHAR(50),\r\ntel VARCHAR(50)\r\n);\r\nCREATE TABLE produit(\r\nrefprf INT PRIMARY KEY,\r\ndesign VARCHAR(50) UNIQUE,\r\ndescri VARCHAR(50),\r\ncategorie VARCHAR(50),\r\nprixachat float,\r\nnbrenstock int,\r\n);\r\nCREATE TABLE panier(\r\ncodepanier INT PRIMARY KEY,\r\ncodecltt VARCHAR(50),\r\ndatecreation DATE ,\r\ndatecommande DATE,\r\ndatelivraison DATE,\r\nmontanttotal INT,\r\nFOREIGN KEY (codecltt) REFERENCES clientt(codeclt) \r\n);\r\nCREATE TABLE elementpanier(\r\nrefprd INT  ,\r\ncodepanier INT ,\r\nquantite INT,\r\nprix float,\r\nCHECK (quantite &amp;amp;amp;gt; 0),\r\nFOREIGN KEY (refprd) REFERENCES produit(refprf),\r\nFOREIGN KEY (codepanier) REFERENCES clientt(codeclt) ON UPDATE CASCADE ,\r\nPRIMARY KEY (refprd,codepanier)\r\n);', 12),
(804, 'SH219025', 387, 'CREATE DATABASE  E-commerce ;\r\nUSE E-commerce ;\r\nCREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(15),\r\n    prenom VARCHAR(15),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(20),\r\n    tel VARCHAR(15)  );\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(30),\r\n    description TEXT,\r\n    categorie VARCHAR(100),\r\n    prixAchat DECIMAL(10, 2),\r\n    nbrEnstock INT ()  );\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10, 2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client (codeClt)   );\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT,\r\n    prix DECIMAL(10, 2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit (refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier (codePanier),\r\n    PRIMARY KEY (refPrd, codePanier)  );', 1),
(805, 'DA105587', 387, 'CREATE DATABASE E_commerce ;\r\nUSE E_commerce ;', 1),
(806, 'DA106392', 389, 'create database E_commerce;\r\nDROP DATABASE E_commerce;\r\nuse E_commerce;\r\nDROP TABLE\r\n CREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50) DEFAULT &amp;amp;#039;ifran&amp;amp;#039;,\r\n    tel VARCHAR(15)\r\n);\r\nDROP TABLE\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    désignation VARCHAR(100) UNIQUE,\r\n    description VARCHAR(255),\r\n    catégorie VARCHAR(50),\r\n    prixAchat INT,\r\n    nbrEnstock INT\r\n   \r\n    );\r\nDROP TABLE\r\n CREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal INT,\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)ON DELETE CASCADE ON UPDATE CASCADE ,\r\n    CONSTRAINT check_dateLivraison CHECK (dateLivraison &amp;amp;gt; dateCommande )\r\n);\r\nDROP TABLE\r\n CREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantité INT CHECK  (dateLivraison &amp;amp;amp;amp;amp;amp;gt; dateCommande),\r\n    prix INT,\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)ON DELETE CASCADE ON UPDATE CASCADE,\r\n    PRIMARY KEY (refPrd, codePanier) \r\n);\r\n', 5),
(807, 'JM103258', 387, 'CREATE DATABASE E_commerce;\r\nDROP DATABASE E_commerce;\r\n\r\n', 1),
(808, 'JM103258', 388, '\r\nUSE E_commerce;\r\n\r\nDROP TABLE client;\r\nCREATE TABLE client (\r\n    codeCLT INT PRIMARY KEY,\r\n    nom VARCHAR(20),\r\n    prenom VARCHAR(20),\r\n    adresse VARCHAR(30),\r\n    ville VARCHAR(20) ,\r\n    tel INT\r\n);\r\n\r\n\r\nDROP TABLE produit;\r\nCREATE TABLE produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(20) UNIQUE,\r\n    descriptions VARCHAR(20),\r\n    categorie VARCHAR(30),\r\n    prixAchat INT,\r\n    nbrEnstock INT\r\n);\r\n\r\nDROP TABLE panier;\r\nCREATE TABLE panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeCLT INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal INT,\r\n    FOREIGN KEY (codeCLT) REFERENCES client(codeCLT) ON DELETE CASCADE ON UPDATE CASCADE\r\n);\r\n\r\nDROP TABLE ElementsPanier;\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &gt;= 1),\r\n    prix INT,\r\n    PRIMARY KEY (refPrd, codePanier),\r\n    FOREIGN KEY (refPrd) REFERENCES produit(refPrd) ON DELETE CASCADE ON UPDATE CASCADE,\r\n    FOREIGN KEY (codePanier) REFERENCES panier(codePanier) ON DELETE CASCADE ON UPDATE CASCADE\r\n);\r\n\r\n', 11),
(809, 'DA104864', 389, 'ville VARCHAR(20) DEFAULT &quot;ifran&quot;,\r\nALTER TABLE elementspanier ADD  CHECK(quantite &gt;= 0);\r\nALTER TABLE produit ADD QteMin INT ;\r\nALTER TABLE produit ADD CONSTRAINT hh CHECK (QteMin &gt;= 10);\r\nALTER TABLE panier ADD CONSTRAINT dates CHECK (datelivrasion &gt; datecommande);\r\nALTER TABLE panier drop CONSTRAINT dd;', 7),
(810, 'Z673521', 388, 'CREATE TABLE clients(\r\n	codeClt INT PRIMARY KEY,\r\n	nom VARCHAR(30),\r\n	prenom VARCHAR(30),\r\n	adresse VARCHAR(30),\r\n	ville VARCHAR(30),\r\n	tell VARCHAR(30) \r\n)\r\n\r\nCREATE TABLE produit (\r\n	refPrd INT PRIMARY KEY,\r\n	designation VARCHAR(30) unique,\r\n	description VARCHAR(150),\r\n	categorie VARCHAR(30),\r\n	prixAchat FLOAT,\r\n	nbrEnstock INT\r\n)\r\n\r\nCREATE TABLE panier (\r\n	codePanier INT PRIMARY key,\r\n	codeClt INT,\r\n	dateCreation DATE,\r\n	dateCommande DATE,\r\n	dateLivraison DATE,\r\n	montantTotal INT,\r\n	FOREIGN KEY (codeClt) REFERENCES clients(codeClt)\r\n)\r\n\r\ncreate table elementsPanier (\r\n	refPrd INT,\r\n	codePanier INT,\r\n	quantite INT,\r\n	prix FLOAT,\r\n	FOREIGN KEY (refPrd) REFERENCES produit(refPrd),\r\n	FOREIGN KEY (codePanier) REFERENCES panier(codePanier) ON UPDATE CASCADE,\r\n	PRIMARY KEY (refPrd, codePanier)\r\n)\r\n\r\nALTER TABLE elementspanier ADD CONSTRAINT check_quantite CHECK (quantite &amp;amp;gt;= 1); \r\n', 12),
(811, 'DN46699', 387, 'CREATE DATABASE ECOMERCE;\r\nUSE ECOMERCE; ', 1),
(812, 'CI2877', 387, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce\r\n', 1),
(813, 'CI2249', 388, 'CREATE TABLE clients(\r\ncodeclt INT  PRIMARY KEY,\r\nnomclt VARCHAR(30) NOT NULL,\r\nprenomclt VARCHAR(30) NOT NULL,\r\nadress VARCHAR(60) NOT NULL,\r\nville VARCHAR(30) NOT NULL,\r\ntel INT NOT NULL,\r\n);\r\n\r\nCREATE TABLE produit(\r\nrefPrd INT PRIMARY KEY,\r\ndesignation INT UNIQUE NOT NULL,\r\ndescriptions VARCHAR(50),\r\ncategorie VARCHAR(50),\r\nprixAchat INT NOT NULL,\r\nnbrEnstock INT NOT NULL,\r\n);\r\n\r\nCREATE TABLE pannier(\r\ncodepannier INT PRIMARY KEY,\r\nFOREIGN KEY(codeclt) REFERENCES clients(codeclt),\r\ndateCreation DATE NOT NULL,\r\ndateCommande DATE NOT NULL,\r\ndateLivraisoon DATE NOT NULL,\r\nmontantTotal INT NOT NULL,\r\n);\r\n\r\nCREATE TABLE elementsPannier(\r\nFOREIGN KEY (refPrd) REFERENCES produit (refPrd),\r\nFOREIGN KEY (codepannier) REFERENCES pannier (codepannier),\r\nquantite INT DEFAULT (1) NOT NULL,\r\nprix INT NOT NULL, \r\n);\r\n\r\n', 9),
(814, 'CN51111', 388, 'CREATE TABLE CLIENT (\r\ncode_Clt INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(30),\r\nville VARCHAR(30),\r\ntel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE produit (\r\nrefPrd INT PRIMARY KEY,\r\ndesignation VARCHAR(30) UNIQUE ,\r\ndescription VARCHAR(30),\r\ncategorie VARCHAR(30),\r\npricAchat INT ,\r\nnbrEnstock INT,\r\n);\r\n\r\nCREATE TABLE panier (\r\ncodePanier INT PRIMARY KEY,\r\ncodeClt INT ,\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,  \r\nMontantTotal INT,\r\nFOREIGN KEY (codeClt) REFERENCES CLIENT(code_Clt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n`client`refPrd INT ,\r\ncodePanier INT ,\r\nquantite INT CHECK (quantite &amp;amp;gt;=1),\r\nprix FLOAT ,\r\nPRIMARY KEY (refPrd,codePanier),\r\nFOREIGN KEY (refPrd) REFERENCES produit(refPrd) ON UPDATE CASCADE ,\r\nFOREIGN KEY (codePanier) REFERENCES panier(codePanier) ON UPDATE CASCADE\r\n);', 12),
(815, 'JM103258', 389, 'USE E_commerce;\r\n\r\nDROP TABLE client;\r\nCREATE TABLE client (\r\n    codeCLT INT PRIMARY KEY,\r\n    nom VARCHAR(20),\r\n    prenom VARCHAR(20),\r\n    adresse VARCHAR(30),\r\n    ville VARCHAR(20) DEFAULT &amp;#039;Ifrane&amp;#039;\r\n);\r\n\r\nDROP TABLE produit;\r\nCREATE TABLE produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(20) UNIQUE,\r\n    descriptions VARCHAR(20),\r\n    categorie VARCHAR(30),\r\n    prixAchat INT,\r\n    nbrEnstock INT,\r\n    QteMin INT DEFAULT 10 \r\n);\r\n\r\nDROP TABLE panier;\r\nCREATE TABLE panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeCLT INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal INT,\r\n    FOREIGN KEY (codeCLT) REFERENCES client(codeCLT) ON DELETE CASCADE ON UPDATE CASCADE,\r\n    CONSTRAINT check_dateLivraison CHECK (dateLivraison &amp;gt; dateCommande)\r\n);\r\n\r\nDROP TABLE ElementsPanier;\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &amp;gt;= 1), \r\n    prix INT,\r\n    PRIMARY KEY (refPrd, codePanier),\r\n    FOREIGN KEY (refPrd) REFERENCES produit(refPrd) ON DELETE CASCADE ON UPDATE CASCADE,\r\n    FOREIGN KEY (codePanier) REFERENCES panier(codePanier) ON DELETE CASCADE ON UPDATE CASCADE\r\n);\r\n', 6),
(816, 'DA104711', 389, 'ALTER TABLE cliient MODIFY ville VARCHAR (20) DEFAULT &amp;amp;quot;ifrane&amp;amp;quot;;\r\nALTER TABLE Panier ADD CONSTRAINT check_date CHECK(datecomande&amp;amp;gt;datelevreson)\r\n\r\nALTER TABLE Elementpanier ADD CONSTRAINT check_quantite CHECK(quantite&amp;amp;gt;0)\r\n\r\nALTER TABLE Produit ADD Qtemin INT ;\r\n\r\nALTER TABLE Produit ADD CONSTRAINT check_Qtemin CHECK (Qtemin&amp;amp;gt;=10)\r\n', 7),
(817, 'VA154626', 388, 'CREATE DATABASE E_commerce;\r\n\r\nUSE E_commerce;\r\n\r\nCREATE TABLE clients \r\n(\r\ncodeclt VARCHAR(30) PRIMARY KEY NOT NULL,\r\nnom VARCHAR(30) NOT NULL,\r\nprenom VARCHAR(30) NOT NULL,\r\nadress VARCHAR(30) NOT NULL,\r\nville VARCHAR(30) DEFAULT &amp;#039;ifrane&amp;#039;,\r\ntel VARCHAR(30) NOT NULL	 \r\n);\r\n\r\ndrop TABLE if EXISTS produit;\r\nCREATE TABLE produit\r\n(\r\nrefprd INT PRIMARY KEY,\r\ndesigation VARCHAR(30) UNIQUE,\r\ndescriptions VARCHAR(30),\r\ncategorie VARCHAR(30),\r\nprixachat FLOAT ,\r\nnbrEnstock INT\r\n);\r\n\r\nCREATE TABLE panier \r\n(\r\ncodepanier INT PRIMARY KEY,\r\ncodeclt VARCHAR(30),\r\ndatecreation DATE ,\r\ndatecommande DATE ,\r\ndatelivraison DATE ,\r\nmontanttotal FLOAT ,\r\nFOREIGN KEY (codeclt)  REFERENCES clients(codeclt)\r\n);\r\n\r\nCREATE TABLE Elementpanier \r\n(\r\nrefprd VARCHAR(30) PRIMARY KEY,\r\ncodepanier INT PRIMARY KEY ,\r\nQte FLOAT CHECK (Qte &amp;gt;= 1),\r\nprix FLOAT ,\r\nFOREIGN KEY (refprd)  REFERENCES produit(refprd),\r\nFOREIGN KEY (codepanier)  REFERENCES panier(codepanier) ON UPDATE CASCADE,\r\n);\r\n', 12),
(818, 'CI2877', 388, 'CREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(25),\r\n    prenom VARCHAR(25),\r\n    adresse VARCHAR(255),\r\n    ville VARCHAR(10),\r\n    tel VARCHAR(10)\r\n);\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(25),\r\n    description TEXT,\r\n    categorie VARCHAR(25),\r\n    prixAchat DECIMAL(10,2),\r\n    nbrEnstock INT\r\n);\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10,2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\n\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT,\r\n    prix DECIMAL(10,2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier),\r\n    PRIMARY KEY (refPrd, codePanier),\r\n);\r\n', 11),
(819, 'DA107633', 388, 'CREATE TABLE CLIENTE (\r\n    CodeCLT INT PRIMARY KEY,\r\n    nom VARCHAR(30),\r\n    prenom VARCHAR(30),\r\n    adress VARCHAR(30),\r\n    ville VARCHAR(30),\r\n     tel INT,\r\n);\r\nCREATE TABLE PANIER (\r\n    Codepanier INT PRIMARY KEY,\r\n    dateCreation    DATE,\r\n    dateCommande    DATE,\r\n    datelivraison      DATE,\r\n    montantTotal    FLOAT,\r\n    FOREIGN KEY (codeCLT)  REFERENCES CLIENTE(codeCLT));\r\n);\r\nCREATE TABLE PRODUIT (\r\n    refPrd VARCHAR(30) PRIMARY KEY,\r\n    designation VARCHAR(30) unique,\r\n    designation VARCHAR(30),\r\n    categorie VARCHAR(30),\r\n    nbrENstock INT,\r\n    prixAchat FLOAT\r\n    \r\n);\r\nCREATE TABLE ElementsPanier (\r\n     quantite INT,\r\n    prix   FLOAT\r\n    \r\n    FOREIGN KEY (refPrd)  REFERENCES PRODUIT(refPrd)) set UPDATE ON CASCADE  ;\r\n    FOREIGN KEY (Codepanier)  REFERENCES PANIER(Codepanier)) set UPDATE ON CASCADE  ;\r\n    CHECK (quantite&amp;gt;=1)\r\n    PRIMARY KEY(refPrd,Codepanier)\r\n);\r\n', 11),
(820, 'DA106939', 388, 'USE E_commerce;\r\n\r\nCREATE TABLE Client\r\n(\r\ncodeClt INT PRIMARY KEY ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(30),\r\nville VARCHAR(30) DEFAULT ,\r\ntel \r\n\r\n);\r\n\r\nCREATE TABLE Produit\r\n(\r\nrefPrd INT PRIMARY KEY ,\r\ndesignation VARCHAR(30) UNIQUE,\r\ndescription VARCHAR(30),\r\ncategorie VARCHAR(30),\r\nprixAchat FLOAT,\r\nnbrEnstock FLOAT\r\n\r\n);\r\n\r\nCREATE TABLE Panier\r\n(\r\ncodePanier INT PRIMARY KEY ,\r\ndateCreaction Date,\r\ndateCommande Date),\r\ndateLivraison Date,\r\nMontantTotal FLOAT,\r\nFOREIGN KEY (codeClt) REFERENCES Client(codeClt) update on CASCADE,\r\n\r\n);\r\n\r\nCREATE TABLE ElementsPanier\r\n(\r\nrefPrd INT PRIMARY KEY ,\r\ncodePanier INT PRIMARY KEY,\r\nquantite INT CHECK(quantite &amp;amp;gt;= 1),\r\nprix FLOAT ,\r\nFOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\nFOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);\r\nSHOW TABLES', 10),
(821, 'DA102284', 388, 'CREATE  TABLE Clients(\r\nCODEclt INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(30),\r\nville VARCHAR (30),\r\ntel VARCHAR (30) );\r\n\r\nCREATE  TABLE Produit(\r\nrefPRD INT PRIMARY KEY,\r\ndesignation VARCHAR(30) UNIQUE ,\r\ndescriptions VARCHAR(30),\r\nprixAchqt FLOAT ,\r\nnbrEnstock INT  );\r\n\r\n\r\nCREATE  TABLE Panier(\r\ncodePanier INT PRIMARY KEY,\r\ncodeClt INT,\r\ndateCreation DATE ,\r\ndateCommande DATE ,\r\ndateCLivraison  DATE ,\r\nMontantTotal INT  );\r\n\r\nCREATE  TABLE ElementsPanier(\r\nrefPrd INT PRIMARY KEY,\r\ncodepPanier INT PRIMARY KEY,\r\nquantite INT   CHECK ( quantite &gt; 0) ,\r\nprix FLOAT );\r\nALTER TABLE Panier\r\nADD constraint co_codeclt FOREIGN KEY (codeClt) REFERENCES Clients(codeClt);\r\nALTER TABLE ElementsPanier\r\nADD constraint ref_Prd FOREIGN KEY (refPrd) REFERENCES Produit(refPrd);\r\nALTER TABLE ElementsPanier\r\nADD constraint code_Panier FOREIGN KEY (codePanier) REFERENCES Panier(codePanier);\r\n\r\n\r\n\r\n', 12),
(822, 'SH219025', 388, 'CREATE DATABASE  E-commerce ;\r\nUSE E-commerce ;\r\nCREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(15),\r\n    prenom VARCHAR(15),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(20),\r\n    tel VARCHAR(15)  );\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(30) UNIQUE ,\r\n    description TEXT,\r\n    categorie VARCHAR(100),\r\n    prixAchat DECIMAL(10, 2),\r\n    nbrEnstock INT ()  );\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10, 2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client (codeClt)   ON UPDATE CASCADE ); \r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &amp;amp;amp;amp;gt;= 1),\r\n    prix DECIMAL(10, 2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit (refPrd)  ,\r\n    FOREIGN KEY (codePanier) REFERENCES Panier (codePanier)   ON UPDATE CASCADE ,\r\n    PRIMARY KEY (refPrd, codePanier)  \r\n	 );', 12),
(823, 'DA105587', 388, 'CREATE TABLE _Client(\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR (30),\r\n    prenom VARCHAR(30),\r\n    Adresse VARCHAR(255),\r\n    ville DECIMAL(10, 2),\r\n    tel DECIMAL\r\n);\r\n\r\n\r\nCREATE TABLE Produit(\r\n    refPrd INT PRIMARY KEY,\r\n   designation VARCHAR (30),\r\n    Descriptionn  VARCHAR(100),\r\n    categorie VARCHAR(50),\r\n    prixAchat DECIMAL(10,2) ,\r\n    nbrEnstock INT \r\n);\r\n\r\nCREATE TABLE Panier(\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT ,\r\n    dateCreation  DATE ,\r\n    dateCommande  DATE,\r\n    dateLivrison  DATE,\r\n    MontantTotal DECIMAL (10,2) \r\n);\r\n\r\nCREATE TABLE ElementPanier(\r\n    refPrd INT PRIMARY KEY, codePanier INT ,\r\n    quantite INT  ,\r\n    prix DECIMAL (10,2), \r\n   FOREIGN KEY (refPrd) REFERENCES Produit(refPrd) ON DELETE CASCADE ,\r\n   FOREIGN KEY (codePanier) REFERENCES Panier(codePanier),\r\n   PRIMARY KEY (refPrd,codePanier)\r\n);\r\n', 9),
(824, 'DA102626', 387, 'CREATE DATABASE E-COMMERCE.\r\nUSE E-commerce;\r\n', 1),
(825, 'DA104711', 388, 'USE Ecommerce;\r\nDROP TABLE if EXISTS cliient;\r\nCREATE TABLE cliient(\r\nCodeCit INT PRIMARY KEY ,\r\nnom VARCHAR(20), \r\nprenom VARCHAR(20), \r\nadress VARCHAR(30), \r\nville VARCHAR(20),\r\ntel VARCHAR(20) \r\n);\r\nDROP TABLE if EXISTS Produit;\r\nCREATE TABLE Produit(\r\nrefPrd INT PRIMARY KEY ,\r\ndisignation VARCHAR(20) UNIQUE, \r\ndescrption VARCHAR(20), \r\ncategorie VARCHAR(30), \r\nprixAchat FLOAT ,\r\nnbrEnstock int \r\n);\r\nDROP TABLE if EXISTS Panier;\r\nCREATE TABLE Panier(\r\ncodePanier INT PRIMARY KEY ,\r\nCodeCit INT , \r\ndatecreation DATE , \r\ndatecomande DATE , \r\ndatelevreson DATE  ,\r\nmontant_total FLOAT ,\r\nFOREIGN KEY  (CodeCit) REFERENCES cliient(CodeCit)\r\n);\r\nDROP TABLE if EXISTS Elementpanier;\r\nCREATE TABLE Elementpanier(\r\nrefPrd INT PRIMARY KEY ,\r\ncodePanier INT, \r\nquantite INT CHECK (quantite &amp;amp;gt;=1) , \r\nprix FLOAT , \r\nFOREIGN KEY  (refPrd) REFERENCES Produit(refPrd),\r\nFOREIGN KEY  (codePanier) REFERENCES Panier(codePanier)\r\n);\r\nALTER TABLE Panier MODIFY COLUMN ;\r\n', 11),
(826, 'DA105587', 389, 'ALTER TABLE _Client\r\nALTER COLUMN ville SET DEFAULT &#039;Ifrane&#039;;\r\n\r\nALTER TABLE Panier\r\nADD CONSTRAINT postérieure\r\nCHECK (dateLivraison &gt; dateCommande);\r\n\r\nALTER TABLE ElementPanier\r\nADD CONSTRAINT qte_positif\r\nCHECK (quantite &gt; 0);\r\n\r\n\r\nALTER TABLE Produit\r\nADD COLUMN QteMin INT;\r\n\r\nALTER TABLE Produit\r\nADD CONSTRAINT qte_autorisée\r\nCHECK (QteMin &gt;= 10);', 7),
(827, 'DA102284', 389, 'ALTER TABLE Clients\r\nADD constraint def_ault SET DEFAULT = &#039;Ifrane&#039; ;\r\n\r\nALTER TABLE ElementsPanier\r\nADD constraint quantite_el CHECK  (quantite &gt; 0) ;\r\n\r\nALTER TABLE Produit\r\nADD COLUMN QteMin INT ;\r\nALTER TABLE Produit\r\nADD  Qte_Min CHECK (QteMin &lt; 10) ;\r\n\r\n', 6),
(828, 'DA106939', 389, '-- a\r\nALTER TABLE Client ADD ville VARCHAR(30) DEFAULT &amp;amp;amp;#039;Ifrane&amp;amp;amp;#039;;\r\n\r\nALTER TABLE Panier ADD dateLivraison ;\r\n\r\nALTER TABLE ElementsPanier ADD quantite FLOAT CHECK(quantite&amp;amp;amp;gt;0);\r\n \r\nALTER TABLE Produit ADD CONSTRAINT QteMin ;\r\n\r\nALTER TABLE Produit ADD QteMin CHECK(QteMin &amp;amp;amp;gt;=10);\r\n\r\n', 5),
(829, 'D689477', 389, 'ALTER TABLE clientt MODIFY ville VARCHAR(50) DEFAULT (&amp;#039;ifrane&amp;#039;);\r\nALTER TABLE elementpanier ADD CONSTRAINT chek_ch CHECK(quantite &amp;gt; 0)\r\nALTER TABLE panier ADD CONSTRAINT chek_da  CHECK(datelivraison &amp;gt; datecommande);\r\nALTER TABLE produitt ADD COLUMN qtemin INT ; \r\nALTER TABLE produitt ADD CONSTRAINT chek_qt CHECK(qtemin&amp;gt;10); ', 7),
(830, 'CI1417', 389, 'ALTER TABLE ElementsPanier\r\nADD CHECK (quantité &amp;gt;=10);\r\n\r\nALTER TABLE Produit\r\nADD QteMin  INT;\r\n\r\nALTER TABLE Produit\r\nADD CHECK (QteMin &amp;lt;= 10);\r\n\r\nALTER TABLE Clients\r\nALTER ville SET DEFAULT &amp;#039;ifrane&amp;#039;;\r\n\r\n\r\nALTER TABLE ElementsPanier\r\nADD CHECK (quantité &amp;gt;= 0);\r\n\r\nALTER TABLE panier\r\nADD CONSTRAINT CHECK (dateLiviaison &amp;gt; dateCommande);', 7),
(831, 'CI2877', 389, 'CREATE TABLE CLIENT(\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(25),\r\n    prenom VARCHAR(25),\r\n    adresse VARCHAR(255),\r\n    ville VARCHAR(10) DEFAULT &amp;amp;#039;lfrane&amp;amp;#039;,\r\n    tel VARCHAR(10)\r\n	 );\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(25) UNIQUE, \r\n    description TEXT,\r\n    categorie VARCHAR(25),\r\n    prixAchat DECIMAL(10,2),\r\n    nbrEnstock INT CHECK (nbrEnstock &amp;amp;gt;=0),\r\n    QteMin INT DEFAULT 10 \r\n);\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10,2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt) UPDATE CASCADE, \r\n    CHECK (dateLivraison &amp;amp;gt; dateCommande)\r\n);\r\n\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &amp;amp;gt;=0),\r\n    prix DECIMAL(10,2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier) UPDATE CASCADE, \r\n    PRIMARY KEY (refPrd, codePanier));', 5),
(832, 'CI2249', 389, 'ALTER TABLE clients MODIFY COLUMN ville DEFAULT (TYPE, ifrane),\r\nALTER TABLE elementspannier CHECK  (quantite&gt;0),\r\nALTER TABLE produit ADD COLUMN QteMin INT NOT NULL,\r\nALTER TABLE produit CHECK (QteMin, MIN == 10),', 5),
(833, 'VA154626', 389, '-- a -\r\nregarde le tableau\r\n\r\n-- b -\r\nALTER TABLE panier ADD CONSTRAINT posterieur CHECK datelivraison &amp;gt; datecommande;\r\n\r\n-- c -\r\nALTER TABLE Elementpanier CHECK (Qte &amp;gt;= 0);\r\n\r\n-- d-e -\r\nALTER TABLE produit ADD COLUMN QteMin FLOAT CHECK (QteMin &amp;gt;= 10);', 6),
(834, 'X449131', 388, 'CREATE TABLE CLIEN (\r\ncodeCit INT PRIMARY KEY,\r\nnom VARCHAR(20) NOT NULL,\r\nprenom VARCHAR(20) NOT NULL,\r\nadresse VARCHAR(20) NOT NULL,\r\nville VARCHAR(20) NOT NULL,\r\ntel VARCHAR(15) NOT NULL\r\n);\r\n\r\nCREATE TABLE produit(\r\nrefPrd VARCHAR(30) PRIMARY KEY,\r\ndesign VARCHAR(20) UNIQUE ,\r\ndescri VARCHAR(20),\r\ncategori VARCHAR(30),\r\nprixAchat FLOAT,\r\nnbrEnstock INT \r\n);\r\n\r\nCREATE TABLE panier (\r\ncodePanier INT PRIMARY KEY,\r\ncodeClt INT,\r\ndateComm DATE,\r\ndateLivri DATE,\r\nMontantTot INT,\r\nFOREIGN KEY codeClt REFERENCES CLIEN (codeClt)\r\n);\r\nCREATE TABLE ElementsPanier(\r\nrefPrd VARCHAR(20) PRIMARY KEY NOT NULL,\r\ncodeClt INT PRIMARY KEY NOT NULL,\r\nqte INT CHECK(qte &gt;=1),\r\nprix INT,\r\nFOREIGN KEY refPrd REFERENCES produit (refprd) UPDATE CASCADE ,\r\nFOREIGN KEY codePanier REFERENCES Panier (refprd) UPDATE CASCADE\r\n\r\n);\r\n\r\n\r\nALTER TABLE ElementsPanier\r\nMODIFY COLUMN \r\n', 12),
(835, 'X449131', 389, 'ALTER TABLE CLIEN\r\nALTER ville SET DEFAULT &#039;ifrane&#039;;\r\n\r\nALTER TABLE panier\r\nADD CONSTRAINT CHECK(dateLivri &gt; dateComm)\r\n\r\n\r\nALTER TABLE ElementsPanier\r\nADD CHECK (qteMin &lt;0)\r\n\r\nALTER TABLE produit\r\nADD qteMin INT CHECK(qteMin &gt; 10)\r\n\r\nALTER TABLE ElementsPanier\r\nADD CHECK (qteMin &lt;=10)\r\n', 6),
(836, 'Z673521', 389, '-- a\r\nALTER TABLE clients MODIFY ville VARCHAR(30) DEFAULT(&quot;ifrane&quot;);\r\n-- b\r\nALTER TABLE panier ADD CONSTRAINT date_livraison_postérieure_date_commande CHECK (dateCommande &lt; dateLivraison)\r\n-- c\r\n ALTER TABLE elementspanier ADD CONSTRAINT check_quantite_positif CHECK (quantite &gt;= 0);\r\n-- d\r\nALTER TABLE produit ADD COLUMN qteMin INT;\r\n-- e\r\nALTER TABLE produit ADD CONSTRAINT quantité_minimale_autorisée_10 CHECK (qteMin &gt;= 10);\r\n', 7);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(837, 'X449131', 387, 'CREATE DATABASE E-commerce\r\n\r\nuse E-commerce', 1),
(838, 'SH219025', 389, 'ALTER TABLE Client MODIFY COLUMN ville VARCHAR(20) DEFAULT &amp;amp;amp;amp;#039;ifrane&amp;amp;amp;amp;#039;;\r\n\r\nALTER TABLE Panier ADD CONSTRAINT dt-Livraison CHECK (dateLivraison &amp;amp;amp;amp;gt; dateCommande);\r\n\r\nALTER TABLE ElementsPanier ADD CONSTRAINT quantite CHECK (quantite &amp;amp;amp;amp;gt; 0);\r\n\r\nALTER TABLE Produit ADD COLUMN qtemin INT;\r\n\r\nALTER TABLE Produit ADD CONSTRAINT qtemin CHECK (qtemin &amp;amp;amp;amp;gt;= 10);\r\n', 7),
(839, 'CN51111', 389, '-- a-\r\nALTER TABLE client \r\nALTER ville SET DEFAULT &amp;#039;ifrane&amp;#039;;\r\n-- b-\r\nALTER TABLE panier ADD CONSTRAINT ch CHECK (dateLivraison &amp;gt; dateCommande);\r\n-- c-\r\nALTER TABLE elementspanier ADD CONSTRAINT ch1 CHECK (quantite &amp;gt; 0);\r\n-- d-\r\nALTER TABLE produit ADD QteMin INT;\r\n-- e-\r\nALTER TABLE produit ADD CONSTRAINT ch2 CHECK (QteMin&amp;gt;10)', 7),
(840, 'DA105115', 389, 'ALTER TABLE CLIENTT MODIFY COLUMN ville VARCHAR(30) DEFAULT (&amp;quot;ifrane&amp;quot;) ,\r\nALTER TABLE panier ADD CONSTRAINT datalivrision CHECK (datalivrision&amp;gt;datacommand),\r\nALTER TABLE Elementspanier  ADD CONSTRAINT quantite CHECK (quantite&amp;gt;0),\r\nALTER TABLE Produit ADD COLUMN QteMin INT ,\r\nALTER TABLE Produit ADD CONSTRAINT QteMin CHECK (QteMin &amp;gt;=10),\r\n', 7),
(841, 'DA105115', 388, 'CREATE  TABLE CLIENTT(\r\nCODECLT INT  ,\r\nnom VARCHAR(30),\r\nprnom VARCHAR(30),\r\nadresse VARCHAR (30),\r\nville  VARCHAR (30)  ,\r\ntel  VARCHAR (30),\r\nPRIMARY KEY(CODECLT)\r\n);\r\nCREATE  TABLE produit (\r\nrefPrd VARCHAR (30),\r\ndesignation  VARCHAR (30) UNIQUE,\r\ncategorie VARCHAR (30),\r\nprixachat FLOAT ,\r\nnbrenstock INT , \r\nPRIMARY KEY(refPrd)\r\n);\r\n\r\nCREATE  TABLE panier (\r\ncodepanier INT ,\r\ncodeclt INT ,\r\ndatacreation DATE ,\r\ndatacommand DATE ,\r\ndatalivrision DATE ,\r\nmonatanttotal  INT ,\r\n\r\nPRIMARY KEY (codepanier),\r\nFOREIGN KEY (codeclt)REFERENCES CLIENTT(codeclt) ON UPDATE SET  CASCADE,\r\n\r\n);\r\nCREATE TABLE Elementspanier(\r\nrefprd INT ,\r\ncodepanier INT ,\r\nquantite VARCHAR (30)  CHECK (quantite &gt;1),\r\nprix INT ,\r\nPRIMARY KEY (refprd,codepanier),\r\nFOREIGN KEY (refprd)REFERENCES panier(refprd) ON UPDATE CASCADE,\r\nFOREIGN KEY (codepanier)REFERENCES panier(codepanier)ON UPDATE CASCADE,\r\n\r\n);', 12),
(842, 'CI1417', 388, 'CREATE TABLE Clients(\r\ncodeCIT INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(30),\r\nville VARCHAR (30),\r\ntel INT \r\n);\r\nCREATE TABLE Produit(\r\nrefPrd INT PRIMARY KEY,\r\ndesignation VARCHAR(30),\r\ndescriptions VARCHAR(30),\r\ncategorie VARCHAR(30),\r\nprixAchat float,\r\nnbrEnstok INT,\r\nUNIQUE(designation) \r\n);\r\nCREATE TABLE panier(\r\ncodePanier INT PRIMARY KEY,\r\ncodeCIT INT ,\r\ndateCreation date,\r\ndateCommande date,\r\ndateLiviaison date,\r\nMontantTotal FLOAT,\r\nFOREIGN KEY (codeCIT) REFERENCES Clients(codeCIT)\r\n);\r\nCREATE TABLE ElementsPanier(\r\nrefPrd VARCHAR(30) PRIMARY KEY,\r\ncodePanier INT ,\r\nquantité INT CHECK (quantité&amp;gt;=1),\r\nprix FLOAT,\r\nFOREIGN KEY (refPrd) REFERENCES Produit(refPrd) ON UPDATE CASCADE,\r\nFOREIGN KEY (codePanier) REFERENCES panier(codePanier) ON UPDATE CASCADE,\r\n);', 12),
(843, 'DA105449', 388, 'DROP TABLE if EXISTS clients;\r\nCREATE TABLE clients(\r\ncodeclt INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadress VARCHAR(30),\r\nville VARCHAR(30),\r\ntelephone INT \r\n);\r\n\r\nDROP TABLE if EXISTS produit;\r\nCREATE TABLE produit(\r\nrefprd INT PRIMARY KEY,\r\ndesigniation VARCHAR(30) UNIQUE ,\r\ndescriptio VARCHAR(30),\r\ncategorie VARCHAR(30),\r\nprix FLOAT  ,\r\nnbrenstock INT \r\n);\r\n\r\n\r\nDROP TABLE if EXISTS panier;\r\nCREATE TABLE panier(\r\ncodpaier INT PRIMARY KEY,\r\ncodeclt INT ,\r\ndatecreation DATE ,\r\ndatecommande DATE ,\r\ndatelivraison DATE ,\r\nmontanttotal INT ,\r\nFOREIGN KEY (codeclt) REFERENCES clients(codeclt)\r\n);\r\n\r\n\r\n\r\nDROP TABLE if EXISTS elementpanier;\r\nCREATE TABLE elementpanier(\r\nrefprd INT ,\r\ncodpaier INT,\r\nquantite INT ,\r\nprix FLOAT ,\r\nFOREIGN KEY (codpaier) REFERENCES panier(codpaier),\r\nFOREIGN KEY (refprd) REFERENCES produit(refprd),\r\nPRIMARY KEY (codpaier,refprd)\r\n\r\n);\r\n\r\nALTER TABLE elementpanier ADD CONSTRAINT CHECK (quantite&gt;=1);\r\n', 11),
(844, 'DB31001', 389, 'alter table clients add constraint ville check(ville = &quot;ifran&quot;);\r\nalter table elementPanier add constraint quantite  check( quantite&gt;= 0);\r\nalter table prouduit add qntmin int;\r\nalter table elementPanier add constraint quantite  check( quntite like(quantite=10));\r\nalter table panier add constraint datelivraition check(datelivraition rlike&#039;^[datelivraition][a-zA-Z]+{ }[datecommend]$&#039;)\r\n\r\n', 5),
(845, 'DA105449', 389, 'ALTER TABLE clients MODIFY ville VARCHAR(30) DEFAULT &#039;ifrane&#039;;\r\nALTER TABLE panier ADD CONSTRAINT CHECK (datelivraison&gt;datecommande);\r\n\r\n\r\nALTER TABLE elementpanier ADD CONSTRAINT CHECK (quantite&gt;=0);\r\n\r\n\r\nALTER TABLE produit ADD COLUMN qtemin INT ;\r\nALTER TABLE elementpanier ADD CONSTRAINT CHECK (qtemin&gt;=10);\r\n\r\n', 6),
(846, 'DA107236', 388, '\r\nCREATE TABLE client (\r\n  codeclt int PRIMARY KEY,\r\n  nom VARCHAR(30),\r\n  prenom VARCHAR(30) ,\r\n  adresse VARCHAR(30)  ,\r\n  ville VARCHAR(30),\r\n  tel INT ,\r\n);\r\nCREATE TABLE produit (\r\nrefprd INT PRIMARY KEY,\r\ndesignation VARCHAR(30) UNIQUE ,\r\ndiscription VARCHAR (30),\r\ncategorie VARCHAR (30),\r\nprixachat INT ,\r\nnbrenstock INT ,\r\n) ;\r\n\r\n\r\nCREATE TABLE panier (\r\ncadepanier INT  ,\r\ncodeclt INT ,\r\ndatecreation DATE,\r\ndatecommande DATE,\r\ndatelivraison DATE ,\r\nmontanttotale FLOAT,\r\nFOREIGN KEY (client) REFERENCES client(codeclt) ON UPDATE CASCADE\r\nPRIMARY KEY (codeclt) \r\n);\r\n\r\n\r\nCREATE TABLE elementspanier (\r\nredprd INT,\r\ncodepanier INT ,\r\nquantite INT,\r\nprix INT ,\r\nFOREIGN KEY (produit) REFERENCES produit(redprd) \r\nFOREIGN KEY (panier) REFERENCES panier(codepanier) \r\nPRIMARY KEY (redprd,codepanier)\r\n);', 11),
(847, 'DA107236', 389, 'CREATE DATABASE  E_commerce;\r\n\r\nUSE  E_commerc;\r\n\r\nCREATE TABLE client (\r\n  codeclt int PRIMARY KEY,\r\n  nom VARCHAR(30),\r\n  prenom VARCHAR(30) ,\r\n  adresse VARCHAR(30)  ,\r\n  ville VARCHAR(30),\r\n  tel INT ,\r\n);\r\nCREATE TABLE produit (\r\nrefprd INT PRIMARY KEY,\r\ndesignation VARCHAR(30) UNIQUE ,\r\ndiscription VARCHAR (30),\r\ncategorie VARCHAR (30),\r\nprixachat INT ,\r\nnbrenstock INT ,\r\n) ;\r\n\r\n\r\nCREATE TABLE panier (\r\ncadepanier INT  ,\r\ncodeclt INT ,\r\ndatecreation DATE,\r\ndatecommande DATE,\r\ndatelivraison DATE ,\r\nmontanttotale FLOAT,\r\nFOREIGN KEY (client) REFERENCES client(codeclt) ON UPDATE CASCADE\r\nPRIMARY KEY (codeclt) \r\n);\r\n\r\n\r\nCREATE TABLE elementspanier (\r\nredprd INT,\r\ncodepanier INT ,\r\nquantite INT,\r\nprix INT ,\r\nFOREIGN KEY (produit) REFERENCES produit(redprd) \r\nFOREIGN KEY (panier) REFERENCES panier(codepanier) \r\nPRIMARY KEY (redprd,codepanier)\r\n);\r\n\r\n\r\nALTER TABLE CLIENT ADD CONSTRAINT &#039;ifrane&#039;\r\nALTER TABLE panier ADD CONSTRAINT CHECK date_de livraison CHECK DATE \r\nALTER TABLE produit ADD CONSTRAINT &#039;qtemin&#039;\r\n\r\n\r\n', 3),
(848, 'CB346790', 387, 'create database  E_commerce,\r\nUSE  E_commerce,', 1),
(849, 'CB346790', 388, 'CREATE table CLIENT (\r\ncode CIT PRIMARY (30),\r\nnon varchar (30),\r\nprenom varchar (30),\r\nvill varchar (30),\r\ntel INT,\r\n\r\nCREATE table PRODUIT (refPRD VARCHAR (30) PRIMARY KEY,\r\ndesingnation varchar (30) unique,\r\ndescription varchar (30),\r\ncategorie varchar (30),\r\nprixAchat varchar float,\r\nnbrEnstock INT),\r\nCREATE table Panier (codepanier VARCHAR (30) PRIMARY KEY,\r\ncodeCIT VARCHAR (30) FOREIGN,\r\ncodecreation date,\r\ndatecommende date,\r\ndatelivraion date,\r\nMONTANTOTAL FLOAT)\r\nCREATE table Elementspanier ( FOREIGN key (RefPrd) REFERENCE (RefPrd),\r\nQUNTITE iNT CHECK QUNTITE &amp;gt;1\r\nPRIX FLOAT \r\n),', 8),
(850, 'DA107633', 389, 'a)_   ALTER TABLE CLIENTE\r\nALTER ville SET DEFAULT &amp;amp;amp;#039;ifrane&amp;amp;amp;#039;;\r\nb)_     ALTER TABLE Panier ADD CONSTRAINT CHECK (dateCommande    \r\n      &amp;amp;amp;gt;datelivraison);\r\n\r\nc)_    ALTER TABLE ElementsPanier ADD CONSTRAINT quntite CHECK (quntite&amp;amp;amp;gt;=0);\r\nd)_  ALTER TABLE PRODUIT ADD COLUMN AS &amp;amp;amp;#039;QteMin&amp;amp;amp;#039; ;\r\ne)_  ALTER TABLE PRODUIT QteMin ADD CONSTRAINT QteMin CHECK ((QteMin&amp;amp;gt;=10));\r\n\r\n', 6),
(851, 'DA102626', 388, 'CREATE DATABASE E-COMMERCE.\r\nUSE E-commerce;\r\nCREATE TABLE CLIENT (codeClt VARCHAR(30) PRIMARY key;\r\nnom VARCHAR(30) ,\r\nprenom VARCHAR(30),\r\nadresse INT,\r\nville VARCHAR(30),\r\ntel INT);\r\nCREATE TABLE Produit(refPrd VARCHAR(30) PRIMARY KEY;\r\ndesignation VARCHAR(30) unique,\r\nDESCRIPTION VARCHAR(30) ,\r\ncategorie VARCHAR(30),\r\nprixAchat float,\r\nnbrEnstock int);\r\nCREATE TABLE Panier(FOREIGN KEY(codePanier))REFERENCE CLIENT (codeclt) UPDATE on CASCADE ,\r\ncodePanier  VARCHAR(30) PRIMARY KEY ,\r\ncodeClt  VARCHAR(30) FOREIGN KEY,\r\ndateCREATION date,\r\ndateLivrasion date,\r\nMontantTotal FLOAT)\r\nCREATE TABLE ElementsPanier(FOREIGN KEY(refPed)REFERENCE produit( refPed),\r\n PRIMARY KEY VARCHAR(30)  ,\r\nFOREIGN KEY(codePanier)REFERENCE Panier(codePanier) PRIMARY KEY  VARCHAR(30),\r\nquantite  INT CHECK quantite &gt;1 ,\r\nprix FLOAT \r\n);', 11),
(852, 'DN46699', 388, 'CREATE TABLE client(\r\nCODECLT  VARCHAR (30)PRIMARY KEY,\r\nnom VARCHAR (30),\r\nprenom varchare(30)\r\nville VARCHAR(30),\r\ntel INT,\r\nadresse VARCHAR(30)\r\n);\r\nCREATE TABLE prouduit(\r\nrefprd  VARCHAR (30)PRIMARY KEY,\r\ndesignation VARCHAR (30) unique,\r\ndescription varchar(30),\r\n categorie VARCHAR(30),\r\nprixachat float,\r\nnbrenstock int\r\n);\r\nCREATE TABLE panier(\r\nFOREIGN KEY (codeclt)REFERENCE CLIENT(codeclt) update on CASCADE,\r\ncodepanier VARCHAR (30)PRIMARY KEY,\r\ndatecreation date,\r\ndatecommande datetime,\r\n datelaivraison datetime,\r\nmontanttotal float,\r\n\r\n);\r\nCREATE TABLE elementpanier(FOREIGN KEY (refprd)REFERENCE prouduit(refprd),\r\nrefprd PRIMARY KEY VARCHAR (),\r\n FOREIGN KEY (codepanier)REFERENCE panier(codepanier),\r\n codepanier PRIMARY KEY VARCHAR(30),\r\nquantite INT CHECK (quantite &gt;1),\r\n\r\nprix FLOAT ,\r\n);', 10),
(853, 'DN46699', 389, 'ALTER TABLE CLIENT ADD constraint ville VARCHAR(30) DEFAULT(&amp;amp;quot;ifrane&amp;amp;quot;);\r\nALTER TABLE produit ADD colonne qtemin INT;\r\nALTER TABLE elementpanier  ADD constraint quantiter CHECK (quantiter&amp;amp;gt;=1;)\r\nALTER TABLE produit MODIFY (qtemin) CHECK qtemin=10;\r\nALTER TABLE panier CHECK (datelaivraison - datedecommande)&amp;amp;gt;0;', 6),
(854, 'DA102626', 389, 'ALTER TABLE CLIENT ADD ville VARCHAR(30) DEFAULT (&amp;quot;ifrane&amp;quot;);\r\nALTER TABLE Produit ADD CONSTRAINT (quantite) check qtemine=10 ;\r\nALTER TABLE  ElementsPanier  MODIFY quantiter CHECK (quantite&amp;lt;=1);\r\nALTER TABLE produit MODIFY  colonne qtemin INT	;\r\nALTER TABLE Panier CHECK(DATElaivraison)&amp;gt;0;\r\n\r\n', 6),
(855, 'DB31001', 388, 'create table clients(\r\ncodclt int primary key ,\r\nnom varchar(30),\r\nprenom varchar(30),\r\nadress varchar (30),\r\nville varchar (30),\r\ntel int);\r\ncreate table produit(\r\nrefprod  int primary key,\r\ndesingation int unique,\r\ndescriptions varchar(30),\r\ncategore varchar (30),\r\nprixdaxat float,\r\nnbrenstock int \r\n \r\n\r\n);\r\ncreate table panier(\r\ncodepanier int primary key,\r\n\r\ndatecreation date,\r\ndatecommend date,\r\ndatelivraition date,\r\nmantantTotal float,\r\n\r\nforeign key (codeclt) references  clients(codeclt) update on cascade\r\n\r\n\r\n);\r\ncreate table elementPanier (\r\nquantite float check(quantite&gt;=1),\r\nprix float,\r\nforeign key (refprd ) references produit(refprd),\r\nforeign key (codepanier) reference panier(codepanier)\r\n\r\n);\r\n ', 11),
(856, 'CB346790', 389, 'ALTER TABLE CLIENT SET VILLE VARCHAR (30) DEFAULT (&#039;ifrane&#039;);\r\nALTER TABLE PRODUIT ADD column AS &#039;QteMin&#039; ;\r\nALTER TABLE Elementspanier modify (QUNTITE) check (QUNTITE);\r\nALTER TABLE PRODUIT MODIFY column \r\nALTER TABLE panier  CONSTRAINT;\r\n', 5),
(857, 'DA102534', 390, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;', 1),
(858, 'DB30758', 390, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;', 1),
(859, 'DA109151', 390, 'create database My_LibSchool;\r\nuse My_LibSchool;', 1),
(860, 'DB30759', 390, 'CREATE DATABASE MY My_LibSchool ;\r\nUSE My_LibSchool;', 1),
(861, 'DB30143', 390, 'create database My_LibSchool;', 1),
(862, 'VM18941', 390, 'CREATE DATABASE  My_LibSchool ;\r\nUSE My_LibSchool ;    ', 1),
(863, 'DA107295', 390, 'create database my_libschool;\r\nuse_my_libschool', 1),
(864, 'DA101003', 390, 'CREATE DATABASE  My_LibSchool\r\nUSE My_LibSchool', 1),
(865, 'CB355407', 390, 'create database My_LibSchool ; \r\nuse My_LibSchool ; ', 1),
(866, 'DA105622', 390, 'creat database My_LibSchool;\r\nuse My_LibSchool;', 1),
(867, 'CI459', 390, 'create database mylibShool\r\nuse  mylibShcool', 1),
(868, 'DB30958', 390, 'CREATE DATABASE  My_LibSchool;\r\nUSE My_LibSchool;', 1),
(869, 'DA107777', 390, 'create database My_LibSchool ;\r\nuse My_LibSchool ;', 1),
(870, 'DA102389', 390, 'create database My_LibSchool,\r\nuse My_LibSchool;\r\n', 1),
(871, 'VA159550', 390, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;', 1),
(872, 'DA106935', 390, 'create database My_libSchool;\r\nuse My_libSchool;', 1),
(873, 'CI1143', 390, 'create database  My_LibSchool;\r\nuse  My_LibSchool;', 1),
(874, 'DA104704', 390, 'create database My_Libschool;\r\nuse My_Libschool;', 1),
(875, 'ZG166772', 390, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;', 1),
(876, 'DA104117', 390, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;', 1),
(877, 'DA104704', 391, 'create table Livre(\r\nidLivre varchar(30),\r\ntitre varchar(30),\r\nediteur varchar(30),\r\ndatePublication date,\r\nprix float)\r\ncreate table Utilisateur(\r\nemail varchar(30),\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword varchar(30),\r\ntel varchar(30))\r\ncreate table MyFavorite(\r\nidFav int,\r\ndateAjout date,\r\nidLivre varchar(30),\r\nemail varchar(30))\r\ncreate table Avis(\r\nidAvis int,\r\ndateAvis date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30))\r\ncreate table Likes(\r\nidLike int,\r\ndateLike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30))\r\ncreate table DisLike(\r\nidDisLike int,\r\ndateDislike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30))', 6),
(878, 'DA102534', 391, 'create table  Livre(\r\n	idLivre varchar(30) ,\r\n    titre varchar(30),\r\n    editeur varchar(30),\r\n    datePublication date,\r\n    prix float\r\n);\r\ncreate table Utilisateur (\r\n	email varchar(40),\r\n    nom varchar(30),\r\n    prenom varchar(30),\r\n    password varchar(30),\r\n    tel varchar(30)\r\n);\r\ncreate table MyFavorits (\r\n	idFav int ,\r\n    dateAjout date ,\r\n    idLivre varchar(30),\r\n    email varchar(40)\r\n);\r\ncreate table Avis (\r\n	idAvis int ,\r\n    dateAvis date ,\r\n    textt varchar(200),\r\n    idLivre varchar(30),\r\n    email varchar(40)\r\n);\r\ncreate table likes (\r\n	idLike int ,\r\n    dateLike date ,\r\n    textt varchar(200),\r\n    idLivre varchar(30),\r\n    email varchar(40)\r\n);\r\ncreate table DisLike (\r\n	idDisLike int ,\r\n    dateDisLike date ,\r\n    textt varchar(200),\r\n    idLivre varchar(30),\r\n    email varchar(40)\r\n);', 6),
(879, 'DB30758', 391, '\r\nCREATE TABLE Livre (\r\n    idLivre VARCHAR(255),\r\n    titre VARCHAR(255),\r\n    editeur VARCHAR(255),\r\n    datePublication DATE,\r\n    prix DECIMAL(10, 2)\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(255) ,\r\n    nom VARCHAR(255),\r\n    prenom VARCHAR(255),\r\n    password VARCHAR(255),\r\n    tel VARCHAR(20)\r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\n    idFav VARCHAR(255),\r\n    dateAjout DATE,\r\n    idLivre VARCHAR(255),\r\n    email VARCHAR(255)\r\n);\r\n\r\nCREATE TABLE Avis (\r\n    idAvis VARCHAR(255),\r\n    dateAvis DATE,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(255)\r\n\r\n);\r\n\r\nCREATE TABLE Likes (\r\n    idLike VARCHAR(255),\r\n    dateLike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(255),\r\n    email VARCHAR(255)\r\n);\r\n\r\nCREATE TABLE DisLike (\r\n    idDislike VARCHAR(255),\r\n    dateDislike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(255),\r\n    email VARCHAR(255)\r\n);\r\n\r\n', 6),
(880, 'DA106935', 391, 'create table Livre(\r\nidLivre varchar(30) ,\r\ntitre varchar(30),\r\nediteur varchar(100),\r\ndatePublication date,\r\nprix float\r\n);\r\n\r\ncreate table Utilisateur(\r\nemail varchar(100) ,\r\nnom varchar(30),\r\nprenom  varchar(30),\r\npassword varchar(30),\r\ntel varchar(30)\r\n);\r\n\r\ncreate table MyFavvorite (\r\nidFav int ,\r\ndateAjout date,\r\nidLivre int ,\r\nemail varchar(100) \r\n);\r\n\r\ncreate table Avis(\r\nidAvis int ,\r\ndateAvis date,\r\ntext varchar(100),\r\nidLivre int ,\r\nemail varchar(100) \r\n);\r\n\r\ncreate table likes(\r\nidLike int ,\r\ndateLike date,\r\ntext varchar(100),\r\nidLivre int ,\r\nemail varchar(100) \r\n);\r\n\r\ncreate table Dismike (\r\nidADismike int ,\r\ndateDislike date,\r\ntext varchar(100),\r\nidLivre int ,\r\nemail varchar(100) \r\n);', 6),
(881, 'CI3546', 391, '-- Création de la table Livres\r\nCREATE TABLE Livres (\r\n    ID_Livre INT AUTO_INCREMENT PRIMARY KEY,\r\n    Titre VARCHAR(255),\r\n    Auteur VARCHAR(255),\r\n    Genre VARCHAR(100),\r\n    Annee INT,\r\n    Resume TEXT,\r\n    Disponible BOOLEAN\r\n);\r\n\r\n-- Création de la table Stagiaires\r\nCREATE TABLE Stagiaires (\r\n    ID_Stagiaire INT AUTO_INCREMENT PRIMARY KEY,\r\n    Nom VARCHAR(100),\r\n    Prenom VARCHAR(100),\r\n    Email VARCHAR(255)\r\n);\r\n\r\n-- Création de la table Bibliotheque_Personnelle\r\nCREATE TABLE Bibliotheque_Personnelle (\r\n    ID_Bibliotheque INT AUTO_INCREMENT PRIMARY KEY,\r\n    ID_Stagiaire INT,\r\n    ID_Livre INT,\r\n    FOREIGN KEY (ID_Stagiaire) REFERENCES Stagiaires(ID_Stagiaire),\r\n    FOREIGN KEY (ID_Livre) REFERENCES Livres(ID_Livre)\r\n);\r\n', 1),
(882, 'VA159550', 391, 'DROP TABLE IF EXISTS Livre;\r\nCREATE TABLE Livre(\r\n        idLivre VARCHAR(30),\r\n        titre VARCHAR(30),\r\n        editeur VARCHAR(30),\r\n        datePublication DATE,\r\n        prix FLOAT\r\n);\r\nDROP TABLE IF EXISTS Utilisateur;\r\nCREATE TABLE Utilisateur(\r\n        email VARCHAR(40),\r\n        nom VARCHAR(30),\r\n        prenom VARCHAR(30),\r\n        password VARCHAR(255),\r\n        tel VARCHAR(30)\r\n);\r\nDROP TABLE IF EXISTS MyFavorite;\r\nCREATE TABLE MyFavorite(\r\n        idFav INT,\r\n        dateAjout DATE,\r\n        idLivre VARCHAR(30),\r\n        email VARCHAR(40)\r\n);\r\nDROP TABLE IF EXISTS Avis;\r\nCREATE TABLE Avis(\r\n        idAvis INT,\r\n        dateAvis DATE,\r\n        text VARCHAR(255),\r\n        idLivre VARCHAR(30),\r\n        email VARCHAR(40)\r\n);\r\nDROP TABLE IF EXISTS Likes;\r\nCREATE TABLE Likes(\r\n        idLike INT,\r\n        dateLike DATE,\r\n        text VARCHAR(255),\r\n        idLivre VARCHAR(30),\r\n        email VARCHAR(40)\r\n);\r\nDROP TABLE IF EXISTS DisLike;\r\nCREATE TABLE DisLike(\r\n        idDislike INT,\r\n        dateDislike DATE,\r\n        text VARCHAR(255),\r\n        idLivre VARCHAR(30),\r\n        email VARCHAR(40)\r\n);', 6),
(883, 'DA108545', 390, 'CREATE DATABASE  My_LibSchool;\r\nUSE  My_LibSchool', 1),
(884, 'DA108545', 391, 'CREATE TABLE Livre (\r\nidLivre VARCHAR(30),\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(40),\r\ndatePublication DATE,\r\nprix FLOAT);\r\n\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR(50),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npasword VARCHAR(40),\r\ntel VARCHAR(10));\r\n\r\nCREATE TABLE MyFavourite (\r\nidFav INT,\r\ndateAjout DATE,\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(50));\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT,\r\ndatAvis DATE,\r\ntxt VARCHAR(250),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(50));\r\n\r\nCREATE TABLE likes (\r\nidLike INT,\r\ndateLike DATE,\r\ntxt VARCHAR(250),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(50));\r\n\r\nCREATE TABLE dislike (\r\nidDislike INT,\r\ndateDislike DATE,\r\ntxt VARCHAR(250),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(50));', 6),
(885, 'VM18941', 391, '\r\nCREATE TABLE livre(\r\n    IDlivre VARCHAR (30)  ,\r\n     titre VARCHAR (30),\r\n    editeur VARCHAR(30),\r\n    datepub DATE,\r\n    prix FLOAT\r\n);\r\n\r\n\r\nCREATE TABLE Utilisateur(\r\n    email VARCHAR  ,\r\n	 nom  VARCHAR (30),\r\n    prenom  VARCHAR(30),\r\n    passworD VARCHAR(50),\r\n    tel  INT ,\r\n   \r\n);\r\n\r\nCREATE TABLE MyFavort(\r\n    idFav INT  ,\r\n    dateajout DATE ,\r\n    idlivre INT ,\r\n    email VARCHAR \r\n  \r\n);\r\n\r\nCREATE TABLE Avis(\r\n    idAvis INT  ,\r\n	 dateavis DATE  ,\r\n    Text VARCHAR  ,\r\n    IDlivre INT  ,\r\n   email VARCHAR \r\n\r\n \r\n);\r\nCREATE TABLE Avis(\r\n    idAvis INT ,\r\n	 dateavis DATE  ,\r\n    Text VARCHAR  ,\r\n    IDlivre INT  ,\r\n   email VARCHAR \r\n\r\n \r\n);\r\nCREATE TABLE LIKES(\r\n    idLike INT ,\r\n	 datelike DATE  ,\r\n    Text VARCHAR  ,\r\n    IDlivre INT  ,\r\n   email VARCHAR \r\n\r\n \r\n);\r\nCREATE TABLE disLIKES(\r\n    idDisLike INT ,\r\n	 datedeslike DATE  ,\r\n    Text VARCHAR  ,\r\n    IDlivre INT  ,\r\n   email VARCHAR  );\r\n\r\n ', 6),
(886, 'DB30759', 391, 'CREATE DATABASE MY My_LibSchool ;\r\nUSE My_LibSchool; \r\nCREATE TABLE livre (\r\nidlivre VARCHAR(30),\r\ntitre VARCHAR(255),\r\nediteur VARCHAR(30),\r\ndatepublication DATE,\r\nprix DECIMAL(10,2)\r\n);\r\nCREATE TABLE utilisateur (\r\nemail VARCHAR(255),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npasswrod varchar(30),\r\ntel INT \r\n);\r\nCREATE TABLE myfavorite (\r\nidfav INT,\r\ndateAjout DATE ,\r\nidlivre VARCHAR(30), \r\nemail VARCHAR(30)\r\n);\r\nCREATE TABLE Avis (\r\nidAvis INT,\r\ndateavis DATE,\r\ntexte VARCHAR(30)\r\nidlivre VARCHAR(30), \r\nemail VARCHAR(30)\r\n );\r\nCREATE TABLE Likes (\r\nidlike INT ,\r\ndatelike DATE ,\r\ntexte VARCHAR(30),\r\nidlivre VARCHAR(30), \r\nemail VARCHAR(30)\r\n);\r\nCREATE TABLE dislike (\r\niddislike INT ,\r\ndatedislike DATE,\r\ntexte VARCHAR(30),\r\nidlivre VARCHAR(30), \r\nemail VARCHAR(30)\r\n);', 6),
(887, 'DB30758', 392, 'a-\r\nALTER TABLE Livre\r\nADD CONSTRAINT PK_Livre PRIMARY KEY (idLivre);\r\n\r\nALTER TABLE Utilisateur\r\nADD CONSTRAINT PK_Utilisateur PRIMARY KEY (email);\r\n\r\nALTER TABLE MyFavorite\r\nADD CONSTRAINT PK_MyFavorite PRIMARY KEY (idFav);\r\n\r\nALTER TABLE Avis\r\nADD CONSTRAINT PK_Avis PRIMARY KEY (idAvis);\r\n\r\nALTER TABLE Likes\r\nADD CONSTRAINT PK_Like PRIMARY KEY (idLike);\r\n\r\nALTER TABLE DisLike\r\nADD CONSTRAINT PK_DisLike PRIMARY KEY (idDislike);\r\n__________________________________________________________________________________________________________________________________________________b-\r\n\r\nALTER TABLE MyFavorite\r\nADD CONSTRAINT FK_MyFavorite_Livre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT FK_MyFavorite_Utilisateur FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis\r\nADD CONSTRAINT FK_Avis_Livre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT FK_Avis_Utilisateur FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Likes\r\nADD CONSTRAINT FK_Like_Livre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT FK_Like_Utilisateur FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE DisLike\r\nADD CONSTRAINT FK_DisLike_Livre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT FK_DisLike_Utilisateur FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n__________________________________________________________________________________________________________________________________\r\nc-\r\nCREATE TRIGGER Update_Avis\r\nAFTER UPDATE ON Livre\r\nFOR EACH ROW\r\nBEGIN\r\n    UPDATE Avis\r\n    SET idLivre = NEW.idLivre\r\n    WHERE idLivre = OLD.idLivre;\r\nEND;\r\n__________________________________________________________________________________________________________________________________\r\nd-\r\nCREATE TRIGGER Delete_MyFavorite\r\nAFTER DELETE ON Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n    DELETE FROM MyFavorite WHERE email = OLD.email;\r\nEND;\r\n\r\nCREATE TRIGGER Delete_Avis\r\nAFTER DELETE ON Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n    DELETE FROM Avis WHERE email = OLD.email;\r\nEND;\r\n\r\nCREATE TRIGGER Delete_Like\r\nAFTER DELETE ON Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n    DELETE FROM Likes WHERE email = OLD.email;\r\nEND;\r\n\r\nCREATE TRIGGER Delete_DisLike\r\nAFTER DELETE ON Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n    DELETE FROM DisLike WHERE email = OLD.email;\r\nEND;\r\n__________________________________________________________________________________________________________________________________\r\ne-\r\nALTER TABLE MyFavorite\r\nMODIFY COLUMN dateAjout DATE DEFAULT CURRENT_DATE;\r\n__________________________________________________________________________________________________________________________________\r\nf-\r\nALTER TABLE Livre\r\nADD CONSTRAINT CK_Livre_idLivre_format\r\nCHECK (idLivre LIKE &amp;amp;amp;amp;#039;OFPPT\\_%&amp;amp;amp;amp;#039;);\r\n__________________________________________________________________________________________________________________________________\r\ng-\r\nALTER TABLE Utilisateur\r\nADD CONSTRAINT CK_Utilisateur_password_length\r\nCHECK (LENGTH(password) &amp;amp;amp;amp;gt;= 8),\r\n__________________________________________________________________________________________________________________________________\r\nh-\r\nADD CONSTRAINT CK_Utilisateur_password_complexity\r\nCHECK (password REGEXP &amp;amp;amp;amp;#039;^(?=.[a-z])(?=.[A-Z])(?=.*[0-9])&amp;amp;amp;amp;#039;);\r\n__________________________________________________________________________________________________________________________________\r\ni-\r\nALTER TABLE Utilisateur\r\nADD CONSTRAINT CK_Utilisateur_tel_format\r\nCHECK (tel LIKE &amp;amp;amp;amp;#039;+2126%&amp;amp;amp;amp;#039; OR tel LIKE &amp;amp;amp;amp;#039;06%&amp;amp;amp;amp;#039;),\r\nADD CONSTRAINT CK_Utilisateur_tel_length\r\nCHECK (LENGTH(tel) = 12);', 10),
(888, 'DA109151', 391, 'create table Livre\r\n(idLivre varchar(30),\r\ntitre int,\r\nediteur int,\r\ndatePublication DATE,\r\nprix FLOAT\r\n);\r\ncreate table Utilisateur\r\n(email varchar(30),\r\nnom int,\r\nprenom int,\r\npassworde int,\r\ntel int\r\n);\r\ncreate table MyFavorite\r\n(idFav varchar(30),\r\ndateAjout DATE,\r\nidLivre varchar(30),\r\nemail varchar(30)\r\n);\r\ncreate table Avis\r\n(idAvis varchar(30),\r\ndateAvis DATE,\r\ntexte int,\r\nidLivre varchar(30),\r\nemail varchar(30)\r\n);\r\ncreate table Likes\r\n(idLike varchar(30),\r\ndateLike DATE,\r\ntexte int,\r\nidLivre varchar(30),\r\nemail varchar(30)\r\n);\r\ncreate table DisLike\r\n(idDisLike varchar(30),\r\ndateDisLike DATE,\r\ntexte int,\r\nidLivre varchar(30),\r\nemail varchar(30)\r\n);', 6),
(889, 'ZG166772', 391, 'CREATE TABLE Livre\r\n(\r\nidLivre VARCHAR(30),\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATE,\r\nprix INT\r\n\r\n);\r\nCREATE TABLE Utilisateur \r\n(\r\nemail VARCHAR(30),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npassword VARCHAR(30),\r\ntel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE MyFavourite\r\n(\r\nidFav INT,\r\ndateAjout DATE,\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE Avis \r\n(\r\nidAvis INT,\r\ndateAvis DATE,\r\nTEXT VARCHAR(30),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(30)\r\n);\r\nCREATE TABLE likes\r\n(\r\nidLike INT,\r\ndateLike DATE,\r\nTEXT VARCHAR(30),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(30)\r\n);\r\nCREATE TABLE Dislike\r\n(\r\nidDislike INT,\r\ndateDislike DATE,\r\nTEXT VARCHAR(30),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(30)\r\n);\r\n', 6),
(890, 'DB30958', 391, 'CREATE TABLE Livre (\r\nidLivre VARCHAR(30),\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATETIME,\r\nprix FLOAT \r\n);\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR(100),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nPASSWORD VARCHAR(40),\r\ntel VARCHAR(40)\r\n);\r\nCREATE TABLE MyFavorite (\r\nidFav int,\r\ndateAjout DATETIME\r\nidLivre VARCHAR(50),\r\nemail VARCHAR(100)\r\n);\r\nCREATE TABLE Avis (\r\nidAvis INT ,\r\ndateAvis DATETIME,\r\nTEXT VARCHAR(150),\r\nidLivre VARCHAR(50),\r\nemail VARCHAR(100)\r\n);\r\nCREATE TABLE Likes (\r\nidLike INT,\r\ndateLike DATETIME,\r\nTEXT VARCHAR(150),\r\nidLivre VARCHAR(50),\r\nemail VARCHAR(100)\r\n);\r\nCREATE TABLE Dislike (\r\nidDisLike INT,\r\ndateDisLike DATETIME,\r\nTEXT VARCHAR(150),\r\nidLivre VARCHAR(50),\r\nemail VARCHAR(100)\r\n);', 6),
(891, 'CI1143', 391, '\r\nCREATE TABLE Livre\r\n(\r\nidLivre VARCHAR ,\r\ntitre VARCHAR(30) ,\r\nediteur VARCHAR(30),\r\ndatePublication DATE,\r\nprix FLOAT,\r\n);\r\n\r\n\r\n\r\nCREATE TABLE Utilisateur\r\n(\r\nemail VARCHAR(30),\r\nnom VARCHAR(30) ,\r\nprenom VARCHAR(30),\r\npassword VARCHAR,\r\ntel VARCHAR(10),\r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite\r\n(\r\nidFav INT ,\r\nidLivre VARCHAR(30) ,\r\nemail VARCHAR(30),\r\ndateAjout DATE,\r\n\r\n);\r\n\r\n\r\nCREATE TABLE Avis\r\n(\r\nidAvis INT ,\r\ntext VARCHAR(30) ,\r\nidLivre VARCHAR(30),\r\ndateAvis DATE,\r\n\r\n);\r\n\r\n\r\n\r\nCREATE TABLE Like\r\n(\r\nidLike INT ,\r\ntext VARCHAR(30) ,\r\nidLivre VARCHAR(30),\r\ndateLike DATE,\r\nemail VARCHAR(50),\r\n);\r\n\r\n\r\n\r\nCREATE TABLE DisLike\r\n(\r\nidDislike INT ,\r\ntext VARCHAR(30) ,\r\nidLivre VARCHAR(30),\r\ndateDislike DATE,\r\nemail VARCHAR(20),\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 6),
(892, 'DA101003', 391, 'create table livre ( \r\n   idlivre int ,\r\n   titre varchar(255),\r\n   editeur varchar(255),\r\n   datepublication date,\r\n   prix decimal(10, 2)\r\n   );\r\n  create table utilisateur( \r\n  email varchar (255) ,\r\n  nom varchar(255),\r\n  prenom varchar(255),\r\n  password varchar(255),\r\n  tel varchar(20),\r\n  );\r\n  create table Myfavorite(\r\n  idfav int ,\r\n  dateAjout date,\r\n  idlivre int,\r\n  email varchar(255),\r\n);\r\ncreate table avis\r\nidAvis int,\r\ndateAvis date,\r\ntext Text\r\nidlivre int,\r\nemail varchar(255),\r\n);\r\ncreate table likes (\r\nidLike int,\r\ndatelike date,\r\ntext Text,\r\nidlivre int,\r\nemail varchar(255),\r\n);\r\ncreat table Dislike(\r\nidDislike int ,\r\ndateDislike date,\r\ntext Text,\r\nidlivre int,\r\nemail varchar(255),\r\n);\r\n  \r\n  ', 6),
(893, 'DA102389', 391, 'create table Livre(\r\nidLivre varchar(30),\r\ntitre varchar(30),\r\nediteur varchar(30),\r\ndatePublication date,\r\nprix float,\r\n)\r\ncreate table Utilisateur(\r\nemail varchar(30),\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword varchar(30),\r\ntel varchar(30);\r\n)\r\ncreate table MyFavorite(\r\nidFAv varchar(30),\r\ndateAjout date,\r\nidLivre varchar(30),\r\nemail varchar(30),\r\n)\r\ncreate table Avis(\r\nidAvis varchar(30),\r\ndateAvis date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30),\r\n)\r\ncreate table Likes(\r\nidLike varchar(30),\r\ndateLike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30),\r\n)\r\ncreate table DisLike(\r\nidDisLike varchar(30),\r\ndateDisLike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30),\r\n)', 6),
(894, 'CI3546', 392, ' -- Contrainte pour la clé primaire de la table Livres\r\nALTER TABLE Livres\r\nADD CONSTRAINT PK_Livres PRIMARY KEY (ID_Livre);\r\n\r\n-- Contrainte pour la clé primaire de la table Stagiaires\r\nALTER TABLE Stagiaires\r\nADD CONSTRAINT PK_Stagiaires PRIMARY KEY (ID_Stagiaire);\r\n\r\n-- Contrainte pour la clé primaire de la table Bibliotheque_Personnelle\r\nALTER TABLE Bibliotheque_Personnelle\r\nADD CONSTRAINT PK_Bibliotheque_Personnelle PRIMARY KEY (ID_Bibliotheque);\r\n\r\n-- Contrainte pour la clé étrangère ID_Stagiaire dans la table Bibliotheque_Personnelle\r\nALTER TABLE Bibliotheque_Personnelle\r\nADD CONSTRAINT FK_Stagiaires_ID FOREIGN KEY (ID_Stagiaire) REFERENCES Stagiaires(ID_Stagiaire) ON DELETE CASCADE;\r\n\r\n-- Contrainte pour la clé étrangère ID_Livre dans la table Bibliotheque_Personnelle\r\nALTER TABLE Bibliotheque_Personnelle\r\nADD CONSTRAINT FK_Livres_ID FOREIGN KEY (ID_Livre) REFERENCES Livres(ID_Livre) ON DELETE CASCADE;\r\n\r\n-- Contrainte pour la modification ;un Livre dans la table Avis\r\nALTER TABLE Avis\r\nADD CONSTRAINT FK_Livres_Modification FOREIGN KEY (ID_Livre) REFERENCES Livres(ID_Livre) ON UPDATE CASCADE;\r\n\r\n-- Contrainte pour la suppression ;un Utilisateur\r\nALTER TABLE Utilisateurs\r\nADD CONSTRAINT FK_Utilisateurs_Suppression FOREIGN KEY (ID_Utilisateur) REFERENCES Stagiaires(ID_Stagiaire) ON DELETE CASCADE;\r\n\r\n-- Contrainte pour la date de la table Avis\r\nALTER TABLE Avis\r\nADD COLUMN DateAjout TIMESTAMP DEFAULT CURRENT_TIMESTAMP;\r\n\r\n-- Contrainte pour le format de idLivre\r\nALTER TABLE Livres\r\nADD CONSTRAINT CHK_idLivre_format CHECK (idLivre LIKE ;OFPPT\\_%;);\r\n\r\n-- Contrainte pour la longueur minimale et la composition du mot de passe\r\nALTER TABLE Utilisateurs\r\nADD CONSTRAINT CHK_Password_Min_Length CHECK (LENGTH(password) ;= 8 AND password REGEXP ;[a-z]; AND password REGEXP ;[A-Z]; AND password REGEXP ;[0-9];);\r\n\r\n-- Contrainte pour le format du numéro de téléphone\r\nALTER TABLE Utilisateurs\r\nADD CONSTRAINT CHK_Tel_Format CHECK (Tel LIKE ;+2126%; OR Tel LIKE ;06%; AND LENGTH(Tel) = 12);\r\n\r\n\r\n ', 9),
(895, 'DA107777', 391, 'create database My_LibSchool ;\r\nuse My_LibSchool ;\r\ndrop table if exists livre ;\r\ncreate table livre (\r\nidlivre varchar(5) ,\r\ntitre ,\r\nediteur ,\r\ndatepublication date , \r\nprix ,\r\n\r\n);\r\ndrop table if exists utilasteur ;\r\ncreate table utilasteur (\r\nemail varchar(30),\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword ,\r\ntell varchar(30)\r\n\r\n);\r\ndrop table if exists mayfavorit ;\r\ncreate table myfavorit (\r\nidfav int ,\r\ndatajout date ,\r\nidlivre varchar(5),\r\nemail varchar(30),\r\n\r\n\r\n);\r\ndrop table if exists avis ;\r\ncreate table avis (\r\nidavis int ,\r\ndateavis date ,\r\ntext varchar  ,\r\nidlivre varchar(5),\r\nemail varchar(5)\r\n);\r\n\r\n\r\ndrop table if exists like ;\r\ncreate LIKE (\r\nidlike int ,\r\ndatelike date ,\r\ntext varchar ,\r\nidlivre varchar (30),\r\nemail varchar (30)\r\n);\r\ndrop table if exists islike ;\r\ncreate islike(\r\nidDislike int,\r\ndateDislike date ,\r\ntext varchar ,\r\nidlivre varchar(5),\r\nemail varchar(5)\r\n);', 6),
(896, 'DB30143', 391, 'use My_LibSchool;\r\ncreate table livre (\r\nidLivre varchar(30),\r\ntitre varchar(30),\r\nediteur varchar (30),\r\ndatePublication date ,\r\nprix float\r\n);\r\n\r\ncreate table Utilisateur (\r\nemail varchar(30),\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword varchar(30) ,\r\ntel varchar(30)\r\n);\r\ncreate table MyFavourite (\r\nidFav int,\r\ndateAjout date,\r\nidLivre varchar(30),\r\nemail varchar(30) \r\n);\r\ncreate table Avis (\r\nidAvis int,\r\ndateAvis date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30) \r\n);\r\ncreate table likes (\r\nidLike int,\r\ndateLike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30) \r\n);\r\ncreate table DisLike (\r\nidDisLike int,\r\ndateDisLike date,\r\ntext varchar(30),\r\nidLivre varchar(30),\r\nemail varchar(30) \r\n);', 6),
(897, 'CB355407', 391, 'create table livre (\r\n	idLivre VARCHAR(20), \r\n    titre varchar(20),\r\n    editeur VARCHAR(20),\r\n    datePublication date , \r\n    prix float \r\n) ; \r\ncreate table Utilisateur(\r\n	email varchar(20) , \r\n    nom varchar(20), \r\n    prenom varchar(20), \r\n    pass_word varchar(20), \r\n    tel int \r\n );\r\n create table Myfavorite(\r\n	idfav INT , \r\n    dateajout date , \r\n    idLivre VARCHAR(20),  \r\n    email varchar(20)\r\n ); \r\n create table Avis(\r\n	idAvis int, \r\n    dateAvis date , \r\n    te_xt TEXT , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20) \r\n ); \r\n create table likes(\r\n	idlike INT , \r\n    datelike date, \r\n    tex_t TEXT , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20)\r\n); \r\ncreate table dislike (\r\n	idDislike int , \r\n    dateDislike date , \r\n    t_ext varchar(15) , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20)\r\n); ', 6),
(898, 'DA104117', 391, 'CREATE TABLE Livre (\r\n    idLivre INT,\r\n    titre VARCHAR(30),\r\n    editeur VARCHAR(30),\r\n    datePublication DATE,\r\n    prix \r\n);\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(30) ,\r\n    nom VARCHAR(30),\r\n    prenom VARCHAR(30),\r\n    password VARCHAR(30),\r\n    tel VARCHAR(30));\r\nCREATE TABLE My_Favorite (\r\n    idFav INT ,\r\n    dateAjout DATE,\r\n    idLivre INT,\r\n    email VARCHAR(30));\r\nCREATE TABLE Avis (\r\n    idAvis INT ,\r\n    dateAvis DATE  ,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30));\r\nCREATE TABLE Likes (\r\n    idLike INT ,\r\n    dateLike DATE ,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30));\r\nCREATE TABLE DisLike (\r\n    idDislike INT ,\r\n    dateDislike DATE ,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30)\r\n    );', 6),
(899, 'DA109151', 392, 'a-\r\nALTER TABLE Livre ADD PRIMARY KEY (idLivre);\r\nALTER TABLE Utilisateur ADD PRIMARY KEY (email);\r\nALTER TABLE MyFavorite ADD PRIMARY KEY (idFav);\r\nALTER TABLE Avis ADD PRIMARY KEY (idAvis);\r\nALTER TABLE Likes ADD PRIMARY KEY (idLike);\r\nALTER TABLE DisLike ADD PRIMARY KEY (idDisLike);\r\nb-\r\nALTER TABLE MyFavorite ADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE MyFavorite ADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\nALTER TABLE Avis ADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Avis ADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\nALTER TABLE Likes ADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Likes ADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\nALTER TABLE DisLike ADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE DisLike ADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\ne-\r\nALTER TABLE Livre MODIFY DateAjout DATETIME DEFAULT CURRENT_TIMESTAMP;\r\nf-\r\nALTER TABLE Livre ADD CONSTRAINT chk_idLivre_format CHECK (_idLivre LIKE &amp;amp;amp;amp;amp;amp;amp;#039;OFPPT\\_%&amp;amp;amp;amp;amp;amp;amp;#039;);\r\ni-\r\nALTER TABLE Utilisateur ADD CONSTRAINT check_Tel CHECK (Tel LIKE &amp;amp;amp;amp;amp;#039;+2126%&amp;amp;amp;amp;amp;#039; OR Tel LIKE &amp;amp;amp;amp;amp;#039;06%&amp;amp;amp;amp;amp;#039;);\r\nh-\r\nALTER TABLE Utilisateur ADD CONSTRAINT check_password CHECK (LENGTH(password) &amp;amp;amp;amp;gt;= 8 AND password REGEXP &amp;amp;amp;amp;#039;[A-Z]&amp;amp;amp;amp;#039; AND password REGEXP &amp;amp;amp;amp;#039;[a-z]&amp;amp;amp;amp;#039; AND password REGEXP &amp;amp;amp;amp;#039;[0-9]&amp;amp;amp;amp;#039;)\r\ng-\r\nALTER TABLE Utilisateur ADD CHECK ((password) &amp;amp;gt;= 8);\r\nc-\r\nCREATE TRIGGER update_avis\r\nAFTER UPDATE ON Livre\r\nFOR EACH ROW\r\nBEGIN\r\n    UPDATE Avis SET _idLivre = NEW._idLivre WHERE _idLivre = OLD._idLivre;\r\nEND;\r\nd-\r\nCREATE TRIGGER delete_user\r\nAFTER DELETE ON Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n    DELETE FROM Avis WHERE _idUser = OLD._idUser;\r\n    DELETE FROM Favorite WHERE _idUser = OLD._idUser;\r\nEND;\r\n\r\n\r\n', 10),
(900, 'DA107777', 392, 'create database My_LibSchool ;\r\nuse My_LibSchool ;\r\ndrop table if exists livre ;\r\ncreate table livre (\r\nidlivre varchar(5) primary key  ,\r\ntitre ,\r\nediteur ,\r\ndatepublication date , \r\nprix ,\r\n\r\n);\r\n\r\ndrop table if exists utilasteur ;\r\ncreate table utilasteur (\r\nemail varchar(30) primary key ,\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword ,\r\ntell varchar(30)\r\n\r\n);\r\ndrop table if exists myfavorit ;\r\ncreate table myfavorit (\r\nidfav int primary key ,\r\ndatajout date ,\r\nidlivre varchar(5),\r\nemail varchar(30),\r\n\r\nforeign key (email) references utilasteur(email),\r\nforeign key (idlivre) references livre(idlivre)\r\n\r\n);\r\n\r\n\r\ndrop table if exists avis ;\r\ncreate table avis (\r\nidavis int primary key ,\r\ndateavis date ,\r\ntext varchar  ,\r\nidlivre varchar(5),\r\nemail varchar(5),\r\nforeign key (email) references utilasteur(email),\r\nforeign key (idlivre) references livre(idlivre)\r\n);\r\n\r\n\r\n\r\ncreate LIKE (\r\nidlike int ,\r\ndatelike date ,\r\ntext varchar ,\r\nidlivre varchar (30),\r\nemail varchar (30),\r\nforeign key (email) references utilasteur(email),\r\nforeign key (idlivre) references livre(idlivre)\r\n);\r\n\r\ncreate islike(\r\nidDislike int primary key ,\r\ndateDislike date ,\r\ntext varchar ,\r\nidlivre varchar(5),\r\nemail varchar(5),\r\nforeign key (email) references utilasteur(email),\r\nforeign key (idlivre) references livre(idlivre)\r\n);\r\n\r\n______question i : ----------------------------\r\nALTER TABLE utilasteur DROP CONSTRAINT check_Tel;\r\nALTER TABLE utilasteur ADD CONSTRAINT check_Tel CHECK (Tel RLIKE &amp;amp;#039;^(+212 | 06)[0-9]{8}$&amp;amp;#039;);\r\n\r\n\r\n\r\n______question h + g : ----------------------------\r\nALTER TABLE utilasteur DROP CONSTRAINT checkpassword;\r\nALTER TABLE utilisateur ADD CONSTRAINT checkpassword CHECK (password RLIKE &amp;amp;#039;^[a-zA-Z][A-ZA-Z]+[0-9]{8}&amp;amp;#039;);\r\n\r\n\r\n______question f : ----------------------------\r\n ALTER TABLE livre DROP CONSTRAINT check_idlivre;\r\nALTER TABLE livre ADD CONSTRAINT check_idlivre CHECK (idlivre RLIKE &amp;amp;#039;OFPPT_&amp;amp;#039;);\r\n\r\n\r\n\r\n______question e : ----------------------------\r\nALTER TABLE my favourit ADD date DEFAULT ((now));\r\n\r\n______question c: ----------------------------\r\nALTER TABLE avis MODIFY  element  DEFAULT &amp;#039;livre&amp;#039;;\r\n\r\n\r\n______question d: ----------------------------\r\nALTER TABLE lutilisateur DROP CONSTRAINT TOUT LES TABLES\r\n', 9),
(901, 'DA101003', 392, 'a - alter table livre\r\nadd constraint pk_livre primary key(idlivre);\r\nalter table utilisateur\r\nadd constraint pk_utilisateur primary key (email);\r\nalter table myfavorite\r\nadd constraint pk_Myfavorite primary key(idfav);\r\nalter table likes\r\nadd constraint pk_like primary key(idlike);\r\nalter table dislike\r\nadd constraint pk_dislike primary key (idDislike);\r\n\r\nc-  create trigger update_avis\r\nafter update on livre\r\nfor each row\r\nbegin\r\n  update avis\r\n  set idlivre = new.idlivre\r\n  where idlivre = old.idlivre;\r\n  end;\r\n\r\nd-  create trigger delete_User\r\nafter delete on utilisateur\r\nfor each row \r\nbegin\r\n    delete from Myfavorite where email = old.email;\r\n    delete from Avis where email = old.email;\r\n    delete from likes where email = old.email;\r\n    delete from dislike where email = old.email;\r\n    end;\r\n\r\ne- alter table Myfavorite\r\n    modify column dateAjout date default\r\n    current_date\r\n\r\nf-alter table livre\r\nadd constraint ck_idlivre_format check\r\n(idlivre like &amp;#039;OFPPT%&amp;#039;);\r\ni-alter table utilisateur\r\nadd constraint chk_tel_format check (tel like &#039;+2126&#039; or tel like &#039;06%&#039; and \r\nlength(tel)=12);\r\n    \r\n    ', 8),
(902, 'CI459', 391, 'creat TABLE livre(\r\nid livre INT pramry key\r\nidlivre  VARCHAR(30)\r\ntitre  VARCHAR(30)\r\nediteur  VARCHAR(30)\r\ndatpublication DATE (255)\r\nprix  DECIMAL(10.2)\r\n\r\n\r\n\r\ncreat TABLE utulisation (\r\nemail VARCHAR (255)\r\nNOM VARCHAR (255)\r\nPRENOM VARCHAR (255)\r\nPASSWORD VARCHAR (255)\r\ntel VARCHAR (20)\r\n\r\n\r\n\r\n\r\n\r\ncreat TABLE Myfavoirite (\r\nidfay VARCHAR (255) \r\ndataAjoute VARCHAR (255)\r\nidlivre VARCHAR ()\r\nemail VARCHAR ()\r\n\r\n\r\n\r\ncreat TABLE avis  (\r\nidavis VARCHAR (255) \r\ndateAjoute date \r\nidlivre VARCHAR (30) FOREING KEY\r\nemail VARCHAR (30) FOREING KEY\r\n\r\n\r\n\r\ncreat TABLE like  (\r\nidlike VARCHAR (255) \r\ndatelike DATE\r\ntext TEXT\r\nEMAIL VARCHAR(255) FORING KEY \r\n\r\n\r\n\r\n\r\ncreat TABLE dislike  (\r\nidlike VARCHAR (255) \r\ndatedislike DATE\r\ntext TEXT\r\nEMAIL VARCHAR(255) FORING KEY \r\n', 4),
(903, 'DA102389', 392, 'alter table Livre \r\nadd constraint pk_idLivre primary key (idLivre)\r\nalter table Utilisateur \r\nadd constraint pk_email primary key (email)\r\n\r\nalter table MyFavorite\r\nadd  constraint pk_idFav primary key (idFav) \r\nalter table MyFavorite\r\nadd constraint fk_idLivre  foreign key (idLivre) references Livre(idLivre) \r\nalter table MyFavorite\r\nadd constraint fk_email  foreign key (email) references Utilisateur(email) \r\nquestion (c):\r\nalter table Avis \r\nmodify column\r\nquestion (d):\r\ndrop table\r\nalter table Avis\r\nadd constraint pk_idAvis primary key (idAvis)\r\nalter table Avis\r\nadd constraint fk_idLivre  foreign key (idLivre) references Livre(idLivre) \r\nalter table Avis\r\nadd constraint fk_email  foreign key (email) references Utilisateur(email)\r\nalter table likes\r\nadd  constraint pk_idLike primary key (idlike) \r\nalter table likes\r\nadd constraint fk_idLivre  foreign key (idLivre) references Livre(idLivre)\r\nalter table likes\r\nadd constraint fk_email  foreign key (email) references Utilisateur(email)\r\n\r\nalter table DisLike\r\nadd constraint pk_idDislike primary key (idDislike)\r\nalter table DisLike\r\nadd constraint fk_idLivre  foreign key (idLivre) references Livre(idLivre)\r\nalter table DisLike\r\nadd constraint fk_email  foreign key (email) references Utilisateur(email)\r\nquestion (e)\r\nalter table MyFavorite\r\nalter DateAjout set default curdate()\r\nquestion (f)\r\nalter table livre\r\nadd constraint chk_idLivre check(idLivre rlike &amp;amp;#039;^OFPPT_&amp;amp;#039;\r\nquestion (g)\r\nalter table Utilisateur\r\nadd constraint chk_password check(password rlike &amp;amp;#039;[a-zA-Z]{8}&amp;amp;#039;\r\nquestion (h)\r\nalter table Utilisateur\r\nadd constraint chk_password check(password rlike &amp;amp;#039;[a-zA-Z]{8}[0-9]&amp;amp;#039;\r\nquestion (i)\r\nalter table Utilisateur\r\nadd constraint chk_tel check(tel rlike &amp;amp;#039;^(+2126)[0-9]{8}$&amp;amp;#039;\r\n', 10),
(904, 'DA105622', 392, 'ALERT TABLE nom_table\r\nADD CONSTRAINT pk_nom_table PRIMARY key \r\n(colonne_primaire);\r\nALERT TABLE table_fille\r\nADD CONSTRAINT fk_nom_contrainte FOREIGN key \r\n(colonne_fille);\r\nREFERENCES table_parent (colone_parent);\r\nCREATE TRIGGER uppdate_avis\r\nAFTER UPDATE ON  livre\r\nFOR EACH ROW \r\nBEGIN\r\n        UPDATE avis\r\n        SET colonne_avis = new_valeur\r\n        WHERE colonne-avis = old_valeur;\r\nEND;\r\nCREATE TRIGGER delete_user\r\nAFTER DELETE ON Utiisateur\r\nFOR EACH ROW \r\nBEGIN\r\n        DLETE FROM table1 WHERE \r\ncolonne_utiisateur =  \r\nold.colonne_utilisateur ;\r\n       DELETE FROM table2 WHERE \r\ncolonne_utiisateur =  \r\nold.colonne_utilisateur ;\r\nEND;\r\nALERT TABLE nom_table\r\nALTER COLUMN dateAjout SET DEFAULT \r\nCURRENT_TIMESTAMP;\r\nALERT TABLE nom_table\r\nADD CONSTRAINT chk_idLivre_format CHECK\r\n(iLivre LIKE &#039;OFPPT\\_%&#039;);\r\nALERT TABLE nom_table\r\nADD CONSTRAINT chk_password_length CHECK\r\n(LENGTH(password)&gt;=8);\r\nALERT TABLE nom_table\r\nADD CONSTRAINT chk_password_complexity CHECK\r\n(password REGEXP &#039;[a-z]&#039; AND \r\npassword REGEXP &#039;[A-Z]&#039; AND password \r\nREGEXP  &#039;[0-9]&#039;);\r\nALERT TABLE nom_table\r\nADD CONSTRAINT chk_Tel_format\r\nCHECK (Tel LIKE &#039;2126%&#039; OR Tel LIKE &#039;06%&#039;);\r\n', 8),
(905, 'DA104704', 392, '--a)\r\nalter table Livre add constraint iddLivre primary key(idLivre)\r\nalter table Utilisateur add constraint eemail primary key(email)\r\nalter table MyFavorite add constraint iddFav primary key(idFav)\r\nalter table Avis add constraint iddAvis primary key(idAvis)\r\nalter table Likes add constraint iddLike primary key(idLike)\r\nalter table DisLike add constraint iddDislike primary key(idDislike)\r\n--b)\r\nalter table MyFavorite add foreign key(idLivre) references Livre(idLivre)\r\nalter table MyFavorite add foreign key(email) references Utilisateur(email)\r\nalter table Avis add foreign key(idLivre) references Livre(idLivre)\r\nalter table Avis add foreign key(email) references Utilisateur(email)\r\nalter table Likes add foreign key(idLivre) references Livre(idLivre)\r\nalter table Likes add foreign key(email) references Utilisateur(email)\r\nalter table DisLike add foreign key(idLivre) references Livre(idLivre)\r\nalter table DisLike add foreign key(email) references Utilisateur(email)\r\n--c)\r\nalter table Utilisateur modify email varchar(30) primary key on update set email\r\n--d)\r\nalter table Utilisateur modify email varchar(30) on delete set null\r\n--e)\r\nalter table MyFavorite add dateAjout date default(current_date)\r\n--f)\r\nalter table Livre add constraint idddlivre check(idLivre like &quot;OFFPT_%&quot;)\r\n--g)\r\nalter table Utilisateur add constraint ppppassword check(length(password) &gt;=8)\r\n--h)\r\nalter table Utilisateur add constraint psswrd check(password like &#039;%[a-z]%[A-Z]%[1-9]%&#039;)\r\n--i)\r\nalter table Utilisateur add constraint tellllll check((tel rlike &#039;^+2126[0-9]{8}$&#039;) or (tel rlike &#039;^06[0-9]{8}$&#039;))', 11);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(906, 'VA159550', 392, '-- 3.      Donner le script SQL pour la création des contraintes : \r\n-- a-      Les clés primaires \r\nALTER TABLE Livre\r\nADD PRIMARY KEY (idLivre);\r\n\r\nALTER TABLE Utilisateur\r\nADD PRIMARY KEY (email);\r\n\r\nALTER TABLE MyFavorite\r\nADD PRIMARY KEY (idFav);\r\n\r\nALTER TABLE Avis\r\nADD PRIMARY KEY (idAvis);\r\n\r\nALTER TABLE Likes\r\nADD PRIMARY KEY (idLike);\r\n\r\nALTER TABLE DisLike\r\nADD PRIMARY KEY (idDislike);\r\n\r\n\r\n-- b-      Les clés étrangères\r\n-- c-      A la modification d’un Livre, ses éléments dans la table Avis doivent être modifiés.\r\n-- d-      A la suppression d’un Utilisateur, ses éléments dans toutes les tables doivent être supprimés.\r\n\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre) ON UPDATE CASCADE;\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email) ON DELETE CASCADE ;\r\n\r\nALTER TABLE Avis\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre) ON UPDATE CASCADE,\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email) ON DELETE CASCADE ;\r\n\r\nALTER TABLE Likes\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre) ON UPDATE CASCADE,\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email) ON DELETE CASCADE ;\r\n\r\nALTER TABLE DisLike\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre) ON UPDATE CASCADE,\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email) ON DELETE CASCADE ;\r\n\r\n-- e- DateAjout par défaut la date système\r\n\r\nALTER TABLE MyFavorite\r\nALTER dateAjout SET DEFAULT CURRENT_DATE();\r\n\r\n\r\n-- f-  idLivre respecte le format « OFPPT_»\r\nALTER TABLE Livre\r\nADD CHECK(idLivre LIKE &amp;amp;#039;OFPPT_%&amp;amp;#039;);\r\n\r\n-- g- password doit contenir au moins 8 caractères. \r\nALTER TABLE Utilisateur\r\nADD CHECK(CHARACTER_LENGTH(password) &amp;amp;gt; 8);\r\n\r\n-- h- password doit contenir des lettres minuscules, majuscules et les chiffres.\r\nALTER TABLE Utilisateur\r\nADD CHECK(password LIKE &amp;amp;#039;%[a-z]%&amp;amp;#039; AND password LIKE &amp;amp;#039;%[A-Z]%&amp;amp;#039; AND password LIKE &amp;amp;#039;%[0-9]%&amp;amp;#039;);\r\n\r\n-- i- Tel doit commencer par ‘+2126’ ou ‘06’ suivi par 8 chiffres.\r\nALTER TABLE Utilisateur\r\nADD CHECK(password RLIKE &amp;amp;#039;^(\\+2126|06)\\d{8}$&amp;amp;#039;);', 13),
(907, 'DA107295', 391, 'create TABLE livre (\r\n _id livre INT PRIMARY KEY AUTO_INCREMENT,\r\ntitre VARCHAR (255),\r\nediteur VARCHAR (255),\r\ndatePublication DATE,\r\nprix DECIMAL (10,2),\r\n);\r\n\r\n CREATE TABLE Utilisateur (\r\n email VARCHAR (100) PRIMARY KEY,\r\n nom VARCHAR(50),\r\n prenom VARCHAR(50),\r\n PASSWORD VARCHAR (255),\r\n tel VARCHAR (20),\r\n );\r\n \r\n create TABLE MyFavorite (\r\n idFav INT PRIMARY KEY AUTO_INCREMENT,\r\n dateAjout DATE,\r\n idlivre INT,\r\n email VARCHAR (100),\r\n FOREIGN KEY (idlivre) PEFERENCES LIVRE (_id livre),\r\n FOREIGN KEY (email) PEFERENCES Utilisateur (email),\r\n );\r\n CREATE TABLE Avis (\r\n idAvis INT PRIMARY KEY AUTO_INCREMENT,\r\n dateAvis DATE,\r\n TEXTE TEXT,\r\n idLivre INT,\r\n email VARCHAR (100),\r\n FOREIGN KEY (idlivre) PEFERENCES LIVRE (_id livre),\r\n FOREIGN KEY (email) PEFERENCES Utilisateur (email),\r\n );\r\n CREATE TABLE LIKE (\r\n idLike INT PRIMARY KEY AUTO_INCREMENT,\r\n dateLike DATE,\r\n texte TEXT,\r\n idLivre INT,\r\n email VARCHAR (100),\r\n FOREIGN KEY (idlivre) PEFERENCES LIVRE (_id livre),\r\n FOREIGN KEY (email) PEFERENCES Utilisateur (email),\r\n  );\r\n CREATE TABLE dislike (\r\n idDislike INT PRIMARY KEY AUTO_INCREMENT,\r\n dateDislike DATE,\r\n TEXTe TEXT,\r\n idLivre INT,\r\n email VARCHAR (100),\r\n  FOREIGN KEY (idlivre) PEFERENCES LIVRE (_id livre),\r\n FOREIGN KEY (email) PEFERENCES Utilisateur (email),\r\n );\r\n', 6),
(908, 'DA102534', 392, '\r\n-- a:/\r\nalter table Livre add constraint pr_idlivre primary key(idLivre);\r\nalter table Utilisateur add constraint pr_email primary key(email);\r\nalter table MyFavorits add constraint pr_idfav primary key(idFav);\r\nalter table Avis add constraint pr_idAvis primary key(idAvis);\r\nalter table likes add constraint pr_idLike primary key(idLike);\r\nalter table DisLike add constraint pr_idDisLike primary key(idDisLike);\r\n\r\n-- b:/\r\n\r\nalter table MyFavorits add foreign key (idLivre) REFERENCES Livre(idLivre);\r\nalter table MyFavorits add foreign key (email) REFERENCES Utilisateur(email);\r\n\r\nalter table Avis add foreign key (idLivre) references Livre(idLivre);\r\nalter table Avis add foreign key (email) REFERENCES Utilisateur(email);\r\n\r\nalter table likes add foreign key (idLivre) references Livre(idLivre);\r\nalter table likes add foreign key (email) REFERENCES Utilisateur(email);\r\n\r\nalter table DisLike add foreign key (idLivre) references Livre(idLivre);\r\nalter table DisLike add foreign key (email) REFERENCES Utilisateur(email);\r\n\r\n-- c:/\r\n\r\n\r\n-- d:/ \r\nalter table Utilisateur add constraint auto_dell (email) on delete set null ;\r\n\r\n-- e:/\r\nupdate MyFavorits\r\nset dateAjout = now();\r\n\r\n-- f:/\r\nalter table Livre add constraint check_idLivre check (idLivre like &#039;OFPPT_&#039;);\r\n\r\n-- g - h :/\r\nalter table Utilisateur add constraint check_pass check (password regexp &#039;^[A-Za-z1-9]{8,}&#039;);\r\n\r\n-- i:/\r\nalter  table Utilisateur add constraint check_tel check (tel regexp &#039;^(+2126|06)[0-9]{8}&#039;);\r\n\r\n', 11),
(909, 'ZG166772', 392, '#a\r\nALTER TABLE Livre \r\nADD CONSTRAINT PK_Livre PRIMARY KEY (idLivre);\r\n\r\nALTER TABLE Utilisateur \r\nADD CONSTRAINT PK_Utilisateur PRIMARY KEY (email);\r\n\r\nALTER TABLE MyFavourite \r\nADD CONSTRAINT PK_MyFavourite PRIMARY KEY (idFav);\r\n\r\nALTER TABLE Avis \r\nADD CONSTRAINT PK_Avis PRIMARY KEY (idAvis);\r\n\r\nALTER TABLE Likes \r\nADD CONSTRAINT PK_Likes PRIMARY KEY (idLike);\r\n\r\nALTER TABLE Dislike \r\nADD CONSTRAINT PK_idDislike PRIMARY KEY (idDislike);\r\n\r\n#b\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\nALTER TABLE avis\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE avis\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE likes\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE likes\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Dislike\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE Dislike\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\n#c\r\nCREATE TRIGGER ubdaye_avis\r\nAFTER UPDATE ON Livre\r\nFOR EACH ROW \r\nBEGIN \r\n	UPDATE Avis\r\n	SET idLivre = NEW idLivre\r\n	WHERE idLivre = OLD idLivre\r\nEND \r\n\r\nCREATE TRIGGER Delete_MyFavorite\r\nafter delete on Utilisateur\r\nFOR EACH ROW\r\nBEGIN\r\n	DELETE FROM MyFavorite WHERE email = OLD email,\r\nEND\r\n\r\nCREATE TRIGGER Delete_Avis\r\nAFTER DELETE ON Utilisateur \r\nFOR EACH ROW \r\nBEGIN\r\n	DELETE FROM Avis WHERE email = OLD email\r\nEND\r\n\r\nCREATE TRIGGER Delete_Like\r\nAFTER DELETE ON Utilisateur \r\nFOR EACH ROW \r\nBEGIN\r\n	DELETE FROM Avis WHERE email = OLD email\r\nEND\r\n\r\nCREATE TRIGGER Delete_DisLike\r\nAFTER DELETE ON Utilisateur \r\nFOR EACH ROW \r\nBEGIN\r\n	DELETE FROM Avis WHERE email = OLD email\r\nEND \r\n#d\r\nALTER TABLE MYFavorite\r\nMODIFY COLUMN dateAjout DATE DEFAULT CURRENT_DATE;\r\n#e\r\nALTER TABLE Livre\r\nADD CONSTRAINT CK_Livre_idLivre_format\r\nCHECK (idLivre LIKE &quot;;OFPPT\\_&quot;);\r\n#f\r\nALTER TABLE Utilisateur \r\nADD CONSTRAINT CK_Utilisateur_password_length\r\nCHECK (LENGTH(PASSWORD)&amp;gt;=8),\r\nADD CONSTRAINT CK_Utilisateur_password_complexity\r\nCHECK (PASSWORD REGEXP&quot;^(?=[a-z])(?=[A-Z])(?=*[0-9]&quot;;);', 10),
(910, 'CB355407', 392, 'use My_LibSchool ; \r\ncreate table livre (\r\n	idLivre VARCHAR(20), \r\n    titre varchar(20),\r\n    editeur VARCHAR(20),\r\n    datePublication date , \r\n    prix float , \r\n    primary key(idLivre)\r\n) ; \r\ncreate table Utilisateur(\r\n	email varchar(20) , \r\n    nom varchar(20), \r\n    prenom varchar(20), \r\n    pass_word varchar(20), \r\n    tel VARCHAR(15) ,\r\n    primary key(email)\r\n );\r\n create table Myfavorite(\r\n	idfav INT , \r\n    dateajout date default now(), \r\n    idLivre VARCHAR(20),  \r\n    email varchar(20) ,\r\n    primary key(idfav) , \r\n    foreign key(idLivre) REFERENCES livre(idLivre) , \r\n    foreign key(email) REFERENCES Utilisateur(email) \r\n ); \r\n create table Avis(\r\n	idAvis int, \r\n    dateAvis date , \r\n    te_xt TEXT , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20) , \r\n    foreign key(idLivre) REFERENCES livre(idLivre) , \r\n    foreign key(email) REFERENCES Utilisateur(email)\r\n ); \r\n create table likes(\r\n	idlike INT , \r\n    datelike date, \r\n    tex_t TEXT , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20),\r\n    foreign key(idLivre) REFERENCES livre(idLivre) , \r\n    foreign key(email) REFERENCES Utilisateur(email)\r\n); \r\ncreate table dislike (\r\n	idDislike int , \r\n    dateDislike date , \r\n    t_ext TEXT , \r\n    idLivre VARCHAR(20),\r\n    email varchar(20) , \r\n    foreign key(idLivre) REFERENCES livre(idLivre) , \r\n    foreign key(email) REFERENCES Utilisateur(email)\r\n); \r\nalter table  livre add constraint check_idlivre check (idLivre like&#039;OFPPT_%&#039;) ; \r\nalter table  Utilisateur add constraint check_psd check(pass_word REGEXP(&#039;[a-zA-Z0-9]{8,}&#039;)); \r\nalter table Utilisateur ADD CONSTRAINT check(tel regexp(&#039;^(+2126)|(06)[0-9]{8}$&#039;)) ; \r\n', 11),
(911, 'DA105622', 391, 'CREATE TABLE Livre( idLivre INT PRIMARY KEY,\r\ntitre VARCHAR(255),\r\nediteur VARCHAR(255),\r\ndatePublication DATE,\r\nprix DECIMAL(10,2)\r\n);\r\nCREATE TABLE Utilisateur( \r\nemail VARCHAR(255) PRIMARY KEY,\r\nprenom VARCHAR(255) ,\r\npassword VARCHAR(255) ,\r\ntel VARCHAR(20)\r\n); \r\n', 2),
(912, 'DB30143', 392, 'alter table livre add  primary key (idLivre);\r\nalter table Utilisateur add  primary key (email);\r\nalter table MyFavourite add primary key (idFav);\r\nalter table Avis add  primary key (idAvis);\r\nalter table likes add  primary key (idLike);\r\nalter table DisLike add  primary key (idDisLike);\r\n\r\n\r\nalter table MyFavourite add  foreign key (idLivre) references livre (idLivre);\r\nalter table MyFavourite add  foreign key (email) references Utilisateur (email) on delete cascade ;\r\nalter table Avis add  foreign key (idLivre) references livre (idLivre) on update cascade;\r\nalter table Avis add  foreign key (email) references Utilisateur (email) on delete cascade;\r\nalter table likes add  foreign key (idLivre) references livre (idLivre);\r\nalter table likes add  foreign key (email) references Utilisateur (email) on delete cascade;\r\nalter table DisLike add  foreign key (idLivre) references livre (idLivre);\r\nalter table DisLike add  foreign key (email) references Utilisateur (email) on delete cascade;\r\n\r\nalter table MyFavourite modify  dateAjout date default (curdate());\r\n\r\nalter table  livre add constraint check_idLivre check (idLivre rlike &amp;#039;^(OFPPT_)&amp;#039;);\r\n\r\nalter table  Utilisateur add constraint check_password check(password rlike &amp;#039;^[A-Za-z0-9]{8,}$&amp;#039;);\r\nalter table Utilisateur drop constraint check_Tel;\r\nalter table Utilisateur add constraint check_Tel  check (tel rlike &amp;#039;^((\\+2126)|(06))[0-9]{8}$&amp;#039;);', 13),
(913, 'DA108545', 392, 'a-\r\nALTER TABLE livre ADD  PRIMARY KEY(idLivre)\r\nALTER TABLE Utilisateur ADD  PRIMARY KEY(email)\r\nALTER TABLE MyFavourite ADD  PRIMARY KEY(idFav)\r\nALTER TABLE Avis ADD  PRIMARY KEY(idAvis)\r\nALTER TABLE likes ADD  PRIMARY KEY(idLike)\r\nALTER TABLE dislike ADD  PRIMARY KEY(idDislike)\r\n\r\nb-\r\nALTER TABLE MyFavourite ADD  FOREIGN KEY(idLivre) REFERENCES Livre(idLivre)\r\nALTER TABLE MyFavourite ADD  FOREIGN KEY(email) REFERENCES Livre(email)\r\nALTER TABLE Avis ADD  FOREIGN KEY(idLivre) REFERENCES Livre(idLivre)\r\nALTER TABLE Avis ADD  FOREIGN KEY(email) REFERENCES Livre(email)\r\nALTER TABLE likes ADD  FOREIGN KEY(idLivre) REFERENCES Livre(idLivre)\r\nALTER TABLE likes ADD  FOREIGN KEY(email) REFERENCES Livre(email)\r\nALTER TABLE dislike ADD  FOREIGN KEY(idLivre) REFERENCES Livre(idLivre)\r\nALTER TABLE dislike ADD  FOREIGN KEY(email) REFERENCES Livre(email)\r\n\r\n\r\nc-\r\nALTER TABLE Livre ADD CONSTRAINT idLivre MODIFY(idLivre)\r\n\r\n\r\nd-\r\nALTER TABLE Livre ADD CONSTRAINT idLivre DROP(idLivre)\r\n\r\ne-\r\nALTER TABLE MyFavourite ADD CONSTRAINT dateAjout DEFAULT CURDATE\r\n\r\nf-\r\nALTER TABLE Livre ADD CONSTRAINT idLivre_check CHECK(idLivre,RLIKE &#039;^[OFPPT][A-Za-z][0-9]$&#039;)\r\nALTER TABLE Livre ADD CONSTRAINT idLivre_check CHECK(idLivre,LIKE &#039;OFPPT_&#039;)\r\n\r\ng-h:\r\nALTER TABLE Utilisateur ADD CONSTRAINT pasword CHECK(pasword,RLIKE &#039;^[A-Za-z][0-9]{8}[A-Za-z][0-9]$&#039;)\r\n\r\n\r\ni-\r\nALTER TABLE Utilisateur ADD CONSTRAINT tel check_tel CHECK(tel,RLIKE &#039;^(+2126)|(06)[0-9]{8}$&#039;)', 11),
(914, 'VM18941', 392, '3 \r\n__a/ \r\nALTER TABLE livre ADD CONSTRAINT cleprlv PRIMARY KEY (IDlivre);\r\nALTER TABLE Utilisateur ADD CONSTRAINT clepruts PRIMARY KEY (email);\r\nALTER TABLE MyFavort ADD CONSTRAINT clepruts PRIMARY KEY (idFav);\r\nALTER TABLE Avis ADD CONSTRAINT clepruts PRIMARY KEY (idAvis);\r\nALTER TABLE LIKES ADD CONSTRAINT clepruts PRIMARY KEY (idLike);\r\nALTER TABLE DISLIKES ADD CONSTRAINT cleprdis PRIMARY KEY (idDisLike);\r\n __b/ \r\n\r\n\r\n\r\n__C/ \r\nCREATE TRIGGER Modifier AFTER UPDATE ON livre for each row begi\r\n\r\n\r\n__f//\r\nalter table livre add constraint check__id check (idLivre  like &#039;OFPPT%&#039;)\r\n\r\n--g //\r\nalter table utilisateur  add constraint checkpssword check ( lengh(passworD)  = 8)\r\nh //\r\nalter table utilisateur  add constraint checkpssword check (passworD like &#039;%[0-9][a-zA-Z]%&#039; )\r\n\r\n\r\ni//\r\nalter table utilisateur add constraint check__tel check (tel Rlike &#039;^+2126 or 06[0-9]{8} &#039;)', 10),
(915, 'DB30759', 392, '--a--\r\nALTER TABLE livre ADD CONSTRAINT idlivre PRIMARY KEY idlivre ;\r\nALTER TABLE utilisateur ADD CONSTRAINT email PRIMARY KEY email ;\r\nALTER TABLE MyFavorite ADD CONSTRAINT idfav PRIMARY KEY idfav ;\r\nALTER TABLE avis ADD CONSTRAINT idavis PRIMARY KEY idavis ;\r\nALTER TABLE likes ADD CONSTRAINT idlike PRIMARY KEY idlike ;\r\nALTER TABLE dislike ADD CONSTRAINT idDislike PRIMARY KEY idlike ;\r\n\r\n--b--\r\nALTER TABLE MyFavorite ADD CONSTRAINT idlivre,email FOREIGN KEY (idlivre,email) REFERENCES  Myfavorite(idlivre,email);\r\nALTER TABLE Avis ADD CONSTRAINT idlivre,email FOREIGN KEY (idlivre,email) REFERENCES Avis(idlivre,email);\r\nALTER TABLE likes ADD CONSTRAINT idlivre,email FOREIGN KEY (idlivre,email) REFERENCES likes (idlivre,email);\r\nALTER TABLE dislike ADD CONSTRAINT idlivre,email FOREIGN KEY (idlivre,email) REFERENCES dislike (idlivre,email);\r\n\r\n--c--\r\nALTER TABLE utilisateur ADD CONSTRAINT foregein KEY (email) REFERENCES myfavorite(email),avis(email),likes(email),dislike(email) ON UPDATE CASCADE ;\r\n--d--\r\n\r\nALTER TABLE utilisateur ADD CONSTRAINT foregein KEY (email) REFERENCES myfavorite(email),avis(email),likes(email),dislike(email) ON DELETE CASCADE ; \r\n\r\n--e--\r\nALTER TABLE myfavorite MODIFY dateAjout DATE DEFAULT CURDATE ;\r\n\r\n--f--\r\nALTER TABLE livre ADD CONSTRAINT CHECK(idlivre LIKE &quot;OFPPT\\_%&quot;);\r\n--G--\r\nALTER TABLE utilisateur ADD CONSTRAINT CHECK(LENGTH(PASSWORD))&gt;= 8;\r\n--h-- \r\nALTER TABLE utilisateur ADD CONSTRAINT CHECK (PASSWORD RLIKE &quot;[A-Za-z]+[0-9]+&quot;);\r\n--i--\r\nALTER TABLE Utilisateur ADD CONSTRAINT CHECK (tel LIKE &quot;+2126%&quot; OR tel LIKE &quot;06%&quot; AND LENGTH(tel)=12);', 10),
(916, 'DB30958', 392, 'ALTER TABLE Livre\r\nADD CONSTRAINT uc_Livre PRIMARY KEY (idLivre) ;\r\nALTER TABLE Utilisateur \r\nADD CONSTRAINT uc_Utilisateur PRIMARY KEY (email) ;\r\nALTER TABLE MyFavorite \r\nADD CONSTRAINT uc_MyFavorite PRIMARY KEY (idFav);\r\nALTER TABLE  Avis\r\nADD CONSTRAINT uc_Avis PRIMARY KEY (idAvis);\r\nALTER TABLE  Likes\r\nADD CONSTRAINT uc_Likes PRIMARY KEY (idLike);\r\nALTER TABLE Dislike\r\nADD CONSTRAINT  uc_Dislike PRIMARY KEY (idDisLike);\r\n\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY MyFavorite REFERENCES Utilisateur(email);\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY MyFavorite REFERENCES  Livre(idLivre);\r\nALTER TABLE Avis\r\nADD FOREIGN KEY Avis REFERENCES  Livre(idLivre);\r\nALTER TABLE Avis\r\nADD FOREIGN KEY Avis REFERENCES  Utilisateur(email);\r\nALTER TABLE Likes\r\nADD FOREIGN KEY Likes REFERENCES  Utilisateur(email);\r\nALTER TABLE Likes\r\nADD FOREIGN KEY Likes REFERENCES  Livre(idLivre);\r\nALTER TABLE Dislike\r\nADD FOREIGN KEY Dislike REFERENCES  Livre(idLivre);\r\nALTER TABLE Dislike\r\nADD FOREIGN KEY Dislike REFERENCES  Utilisateur(email);\r\n\r\n\r\nCREATE TRIGGER  UPDATE_Avis AFTER UPDATE ON Livre \r\nFOR EACH ROW \r\nBEGIN \r\n	UPDATE Avis\r\n	SET idLivre = NEW.idLivre\r\n	WHERE idLivre = OLD.idLivre;\r\nEND;\r\n\r\nCREATE TRIGGER delete_utilisateur\r\nAFTER DELETE ON Utilisateur 	\r\nFOR EACH ROW \r\nBEGIN \r\n	DELETE FROM MyFavorite\r\n	WHERE email = OLD.email;\r\nEND;\r\n\r\nCREATE TRIGGER delete_utilisateur\r\nAFTER DELETE ON Utilisateur 	\r\nFOR EACH ROW \r\nBEGIN \r\n	DELETE FROM Avis\r\n	WHERE email = OLD.email;\r\nEND;\r\nCREATE TRIGGER delete_utilisateur\r\nAFTER DELETE ON Utilisateur 	\r\nFOR EACH ROW \r\nBEGIN \r\n	DELETE FROM Likes \r\n	WHERE email = OLD.email;\r\nEND;\r\nCREATE TRIGGER delete_utilisateur\r\nAFTER DELETE ON Utilisateur 	\r\nFOR EACH ROW \r\nBEGIN \r\n	DELETE FROM DisLikes \r\n	WHERE email = OLD.email;\r\nEND;\r\n\r\n\r\n\r\nAFTER TABLE MyFavorite MODIFY COLUMN dateAjout DATE DEFAULT CURDATE;\r\n\r\n\r\nAFTER TABLE Utilisateur ADD CONSTRAINT uc_Livre CHECK (idLivre LIKE &quot;^OFPPT\\_&quot;)\r\n\r\n\r\n\r\n\r\nALTER TABLE Utilisateur ADD CONSTRAINT uc_Utilisateur CHECK (PASSWORD LIKE &quot;\\.{8}&quot;)\r\n\r\n', 10),
(917, 'CI1143', 392, ' &amp;quot;a&amp;quot;\r\nALTER TABLE Livre\r\nadd CONSTRAINT pk_idLivre primary key(idLivre);\r\n\r\n\r\nALTER TABLE Utilisateur\r\nadd CONSTRAINT pk_email primary key(email);\r\n\r\nALTER TABLE MyFavorite\r\nadd CONSTRAINT pk_idFav primary key(idFav);\r\n\r\nALTER TABLE Avis\r\nadd CONSTRAINT pk_idAvis primary key(idAvis);\r\n\r\nALTER TABLE Like\r\nadd CONSTRAINT pk_idLike primary key(idLike);\r\n\r\nALTER TABLE DisLike\r\nadd CONSTRAINT pk_idDisLike primary key(idDislike);\r\n\r\n\r\n&amp;quot;b&amp;quot;\r\n\r\nALTER TABLE MyFavourite\r\n ADD CONSTRAINT Fk_idLivre  FOREIGN KEY (Fk_idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE MyFavourite \r\n ADD CONSTRAINT Fk_email FOREIGN KEY (Fk_email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis \r\n ADD CONSTRAINT idLivre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Avis\r\n ADD CONSTRAINT Fk_email FOREIGN KEY (Fk_email) REFERENCES Utilisateur(email);\r\n\r\n\r\nALTER TABLE Like\r\n ADD CONSTRAINT idLivre FOREIGN KEY (Fk_email) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE Like\r\n ADD CONSTRAINT Fk_email FOREIGN KEY (Fk_email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE DisLike\r\n ADD CONSTRAINT idLivre FOREIGN KEY (Fk_email) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE DisLike\r\n ADD CONSTRAINT Fk_email FOREIGN KEY (Fk_email) REFERENCES Utilisateur(email);\r\n\r\n\r\n&amp;quot;c&amp;quot;\r\n\r\nALTER TABLE Livre\r\n MODIFY TABLE Utilisateur\r\n\r\n\r\n&amp;quot;e&amp;quot;\r\n\r\n\r\nALTER TABLE MyFavourite \r\nadd CONSTRAINT DateAjout set DEFAULT date systeme;\r\n&amp;quot;f&amp;quot;\r\nALTER TABLE Livre \r\nadd CONSTRAINT idLivre check (idLivre rlike=OFPPT_);\r\n&amp;quot;g&amp;quot;\r\nALTER TABLE Utilisateur\r\nadd CONSTRAINT password check ;\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 6),
(918, 'DA106935', 392, '-- a-\r\nalter table Livre add constraint  primary key (idLivre);\r\nalter table Utilisateur add constraint  primary key (email);\r\nalter table MyFavvorite add constraint  primary key (idFav);\r\nalter table Avis add constraint  primary key (idAvis);\r\nalter table likes add constraint  primary key (idLike);\r\nalter table Dismike add constraint  primary key (idADismike);\r\n\r\n-- b- \r\nalter table MyFavvorite add constraint foreign key (idLivre) references Livre(idLivre);\r\nalter table MyFavvorite add constraint foreign key (email) references Utilisateur(email);\r\nalter table Avis add constraint foreign key (idLivre) references Livre(idLivre);\r\nalter table Avis add constraint foreign key (email) references Utilisateur(email);\r\nalter table likes add constraint foreign key (idLivre) references Livre(idLivre);\r\nalter table likes add constraint foreign key (email) references Utilisateur(email);\r\nalter table Dismike add constraint foreign key (idLivre) references Livre(idLivre);\r\nalter table Dismike add constraint foreign key (email) references Utilisateur(email);\r\n--c- \r\nUPDATE table Liver ,Avis where idLivre if modify;\r\n--d-\r\ndrop table MyFavvorite , likes,Dismike where Utilisateur if drop;\r\n--e \r\nalter table MyFavvorite modify constraint  dateAjout date default curdate();  \r\n--f-\r\nalter table Livre add constraint check ( idLivre LIKE &#039;^(OFPPT_%&#039;);\r\n--g-h\r\nalter TABLE Utilisateur ADD CONSTRAINT  CHECK (password RLIKE &#039;^[0-9A-Za-z]{8,}$&#039;);\r\n--i\r\nalter TABLE Utilisateur ADD CONSTRAINT  CHECK (tel RLIKE &#039;^(2126|06)[0-9]{8}$&#039;);\r\n', 11),
(919, 'CI459', 392, 'ALTER TABLE livre \r\nADD CONSTRAINT  Pk _livre premry KEY (idlivre)\r\n\r\n\r\nALTER TABLE myFavoitire\r\nADD CONSTRAINT pk_myFavoitire premry KEY (idDISLIKE)\r\n\r\n\r\n', 5),
(920, 'DA107295', 392, 'a_les clés primaires:\r\nadd constraint pk_livre primary key (_id livre);\r\nalert table utilisateur\r\nadd constraint pk_utilisateur  primary key     (email),\r\nalert table myfavorite\r\nadd constraint pk_myfavorite primary key   (idfav),\r\nalert table Avis\r\nadd constraint pk_Avis primary key   (idAvis),\r\nalert table LIKE\r\nadd constraint pk_LIKE primary key  (idlike),\r\nalert table dislike \r\nadd constraint pk_dislike primary key (iddislike),\r\nb_\r\n\r\n\r\nc_alert table Avis \r\nADD constraint PK_Avis_livreID maj FORIGN KEY (livreid) REFERENCES LIVRE(_id livre) on updat CASCADE;\r\n \r\ne_alert table myfavorites\r\nmodify column dateadded datetime defaul current_timestamp;\r\ng_alert table utulisteur\r\nadd constraint chk_password_length chek (length( mot _de _pass) &gt;=8);\r\n', 6),
(921, 'DA104117', 392, 'CREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;\r\nCREATE TABLE Livre (\r\n    idLivre INT AUTO_INCREMENT PRIMARY KEY,\r\n    titre VARCHAR(30),\r\n    editeur VARCHAR(30),\r\n    datePublication DATE,\r\n    prix ,\r\n    CONSTRAINT check_idLivre_format CHECK (idLivre LIKE &#039;OFPPT_%&#039;)\r\n    );\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(30) PRIMARY KEY ,\r\n    nom VARCHAR(30),\r\n    prenom VARCHAR(30),\r\n    password VARCHAR(30),\r\n    tel VARCHAR(30),\r\n	CONSTRAINT check_password_complexity CHECK (LENGTH(_password) &gt;= 8 AND _password REGEXP &#039;[A-Z]&#039; AND _password \r\n    REGEXP &#039;[a-z]&#039; AND _password REGEXP &#039;[0-9]&#039;),\r\n    CONSTRAINT check_tel_format CHECK (_tel LIKE &#039;+2126%&#039; OR _tel LIKE &#039;06%&#039;));\r\nCREATE TABLE My_Favorite (\r\n    idFav INT AUTO_INCREMENT PRIMARY KEY ,\r\n    dateAjout DATE DEFAULT CURRENT DATE ,\r\n    idLivre INT,\r\n    email VARCHAR(30)\r\n    FOREIGN KEY (_idLivre) REFERENCES Livre(_idLivre) ,\r\n    FOREIGN KEY (_email) REFERENCES Utilisateur(_email) \r\n);\r\nCREATE TABLE Avis (\r\n    idAvis INT AUTO_INCREMENT PRIMARY KEY ,\r\n    dateAvis DATE DEFAULT CURRENT_DATE ,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30));\r\nCREATE TABLE Likes (\r\n    idLike INT AUTO_INCREMENT PRIMARY KEY ,\r\n    dateLike DATE DEFAULT CURRENT_DATE ,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30)\r\n     FOREIGN KEY (_idLivre) REFERENCES Livre(_idLivre) ,\r\n    FOREIGN KEY (_email) REFERENCES Utilisateur(_email) \r\n);\r\nCREATE TABLE DisLike (\r\n    idDislike INT AUTO_INCREMENT PRIMARY KEY,\r\n    dateDislike DATE DEFAULT CURRENT_DATE,\r\n    text TEXT,\r\n    idLivre INT,\r\n    email VARCHAR(30)\r\n     FOREIGN KEY (_idLivre) REFERENCES Livre(_idLivre) ,\r\n    FOREIGN KEY (_email) REFERENCES Utilisateur(_email) \r\n);', 11),
(922, 'CI1897', 393, '1-php artisan make:component produit', NULL),
(923, 'CI1897', 394, '1-php artisan make:controller epargneController\r\n2-Route::get(&#039; /&#039;,[epargneController::class,index]);\r\n    Route::post(&#039;/calculer&#039;,[epargneController::class,calculer])', NULL),
(924, 'DA103130', 394, '1. php artisan make:controller epargneController\r\n\r\n2. Route::get(&#039;/&#039;, [&#039;epargneController&#039;,&#039;index&#039;]);\r\n    Route::post(&#039;/calculer&#039;, [&#039;epargneController&#039;,&#039;calculer&#039;]);\r\n', NULL),
(925, 'DA103130', 395, '&amp;lt;div&amp;gt;\r\n        &amp;lt;h1&amp;gt;Simulateur d&amp;#039;epergne&amp;lt;/h1&amp;gt;\r\n        &amp;lt;form action=&quot;/calcuer&quot; method=&quot;POST&quot; &amp;gt;\r\n            &amp;lt;div&amp;gt;\r\n                &amp;lt;label for=&amp;quot;Mntnt_Objctf&amp;quot;&amp;gt;Montant Objectif&amp;lt;/label&amp;gt;\r\n                &amp;lt;input type=&amp;quot;number&amp;quot; value=&amp;quot;&amp;quot; name=&amp;quot;Mntnt_Objctf&amp;quot; id=&amp;quot;Mntnt_Objctf&amp;quot;/&amp;gt;\r\n            &amp;lt;/div&amp;gt;\r\n            &amp;lt;div&amp;gt;\r\n                &amp;lt;label for=&amp;quot;Capital_Initial&amp;quot;&amp;gt;Capital Initial&amp;lt;/label&amp;gt;\r\n                &amp;lt;input type=&amp;quot;number&amp;quot; name=&amp;quot;Capital_Initial&amp;quot; id=&amp;quot;Capital_Initial&amp;quot;&amp;gt;\r\n            &amp;lt;/div&amp;gt;\r\n            &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Calculer&amp;lt;/button&amp;gt;\r\n        &amp;lt;/form&amp;gt;\r\n    &amp;lt;/div&amp;gt;', NULL),
(926, 'CB345929', 394, '1-  php artisan make:controller epargneController\r\n2- route::get(&#039;/&#039;,&#039; epargneController@index&#039;);\r\n-route::post(&#039;/calculer&#039;, &#039;epargneController@calculer&#039;);', NULL),
(927, 'CI1897', 395, '&lt;form&gt;\r\n&lt;h1&gt;simulateur d&#039;épargne &lt;/h1&gt;\r\n&lt;label&gt;Montant objectif &lt;/laravel&gt;&lt;br&gt;\r\n&lt;input type=&quot;text&quot; name=&quot;montant&quot;/&gt;&lt;br&gt;\r\n&lt;label&gt;capital initial &lt;/laravel&gt;&lt;br&gt;\r\n&lt;input type=&quot;text&quot; name=&quot;capital&quot;/&gt;&lt;br&gt;\r\n&lt;input type=&quot;submit&quot; value=&quot;calculer&quot;/&gt;\r\n&lt;/form&gt;\r\n\r\n', NULL),
(928, 'DB30457', 394, '1/php artisan make:controller epargneController\r\n2/Route::get(&#039;/&#039;,[epargneController::class ,&#039;index&#039;])\r\n    Route::post(&#039;/calculer&#039;,[epargneController::class ,&#039;calculer&#039;])\r\n', NULL),
(929, 'DA104214', 393, '1- php artisan make:component produit \r\n2- class produit {\r\n privet  $titre;\r\n privet  $url;\r\n privet  $prix;\r\n privet  $solde;\r\npublic function __constract($titre, $url, $prix, $solde){\r\n $this-&amp;gt;titre = titre\r\n $this-&amp;gt;url= url\r\n $this-&amp;gt;prix= prix\r\n $this-&amp;gt;solde = solde\r\n}\r\npublic function getsold ($this){ return $this-&amp;gt;;solde }\r\n}\r\n\r\n3-4- use app/view/components/produit \r\n@php\r\n $p=new produit (&amp;#039;iPhone 14, 128 Go Version Europe&amp;#039;,&amp;#039;images/phones/iphone14.jpg&amp;#039;,&amp;#039;8890dhs&amp;#039;,false)\r\n@endphp\r\n\r\nTitre : &amp;lt;span&amp;gt;{{$p-&amp;gt;titre}}&amp;lt;/span&amp;gt;;\r\nurl : &amp;lt;span&amp;gt;{{$p-&amp;gt;url}}&amp;lt;/span&amp;gt;;\r\n@if($p-&amp;gt;;getsold()==true)\r\nprix: &amp;lt;span style=&amp;quot;color : red&amp;quot;&amp;gt;{{$p-&amp;gt;;prix}}&amp;lt;/span&amp;gt;;\r\n@else\r\nprix: &amp;lt;span&amp;gt;{{$p-&amp;gt;prix}}&amp;lt;/span&amp;gt;;\r\n@endif\r\nsolde : &amp;lt;span style=&amp;quot;color : red&amp;quot;&amp;gt;{{$p-&amp;gt;solde }}&amp;lt;/span&amp;gt;;', NULL),
(930, 'da104723', 393, '1.php artisan make:component produit\r\n\r\n2.class produiit  extends component{\r\npublic $titre ;\r\npublic $image ;\r\npublic $prix ;\r\npublic $solde ;\r\n\r\n      public function __construct( $titre , $image , $prix , $solde)\r\n            {\r\n                    $this-&gt;titre = $titre ;\r\n                    $this-&gt;image = $image ;\r\n                    $this-&gt;prix = $prix ;\r\n                    $this-&gt;solde = $solde ;\r\n            }\r\n\r\n      public function render ()\r\n{\r\nreturn \r\nview(&#039;components.produit&#039;);\r\n}}\r\n\r\n\r\n\r\n3. \r\n&lt;div&gt;\r\n&lt;h2&gt;{{$titre}}&lt;/h2&gt;\r\n&lt;img src=&quot;{{$image }}&gt;&quot; alt=&quot;{{$titre}}&quot;&gt;\r\n&lt;p \r\n@if ($solde) style=&quot;color : red&quot; \r\n@endif\r\nprix :{{$prix}}&lt;/p&gt;\r\n&lt;/div&gt;\r\n\r\n\r\n\r\n\r\n\r\n\r\n4.@extends (&#039;layouts.app&#039;)\r\n@section(&#039;content&#039;)\r\n\r\n&lt;div&gt;\r\ntitre=&quot;iPhone 14, 128 Go Version Europe &quot;\r\nimage=&quot;images/phones/iphone14.jpg&quot;\r\nprix=&quot;8890&quot; \r\nsolde=&quot;false&quot;/&gt;\r\n@endsection', NULL),
(931, 'DA104643', 394, '1- php artisan make:controller epargneController\r\n2- Route::get(&#039;/&#039;,[epargneController::class,&#039;index&#039;]);\r\nRoute::post(&#039;/calcule&#039;,[epargneController::class,&#039;calculer&#039;]);', NULL),
(932, 'DA104643', 396, '4-a.\r\npublic function index(){\r\n  return view(&#039;epargne&#039;);\r\n}\r\nb. public finction calculer(Request $req){\r\n  $montant = $req-&gt;(&#039;montant&#039;);\r\n $capital= $req-&gt;(&#039;capital&#039;);\r\n\r\n$montant_annee = ($montant  - $capital) / 12 ;\r\n$montant_deux_ans =($montant  - $capital) / 24 ;\r\n$montant_trois_ans =($montant  - $capital) / 36;\r\n return dd([\r\n     &quot;une année &quot; =&gt; $montant_annee,\r\n    &quot; deux ans&quot; =&gt; $montant_deux_ans ,\r\n    &quot;trois ans &quot; =&gt; $montant_trois_ans\r\n]);\r\n}', NULL),
(933, 'da104723', 394, '1.php artisan make:controller epargneController;\r\n\r\n2.\r\nRoute::get(&#039;/&#039;,[epargneController::class,&#039;index&#039;]);\r\nRoute::post(&#039;/calculer&#039;,[epargneController::class,&#039;calculer&#039;]);', NULL),
(934, 'DA104643', 395, '&lt;div&gt;\r\n&lt;h2&gt;Simulateur d&#039;épargne &lt;/h2&gt;\r\n&lt;form action=&quot;{{url(&#039;/calculer&#039;)}}&quot; method=&quot;post&quot;&gt;\r\n@csrf\r\n&lt;label&gt;Montant objectif &lt;/label&gt;\r\n&lt;input type=&quot;text&quot; name=&quot;montant&quot; placeholder=&quot;20000&quot;&gt;&lt;/br&gt;\r\n&lt;label&gt;Capital initial&lt;/label&gt;\r\n&lt;input type=&quot;text&quot; name=&quot;capital&quot; placeholder=&quot;1000&quot;&gt;&lt;/br&gt;\r\n&lt;input type=&quot;submit&quot; value=&quot;Calculer&quot;&gt;\r\n&lt;/form&gt;\r\n&lt;/div&gt;', NULL),
(935, 'CB346449', 393, '1. php artisan make : component produit \r\n2. &lt;?php \r\nnamespace App\\view\\components;\r\nuse ILLuminate\\view\\component;\r\nclass produit extends component\r\n{ \r\n    public $titre;\r\n    public $image;\r\n    public $prix;\r\n   public $solde;\r\n   public function __construct ($titre,$image,$prix,$solde)\r\n  {\r\n         $this -&gt; titre = $titre;\r\n$this -&gt;image = $image;\r\n$this -&gt; prix= $prix;\r\n$this -&gt; solde = $solde;\r\n}\r\n public function render () \r\n{\r\n  return view (&#039;components.profuit&#039;);\r\n}\r\n}\r\n3. &lt;div&gt; \r\n          &lt;h2&gt; {{ $titre }} &lt;/h2&gt; \r\n          &lt;img src=&quot;{{ $image}}&quot; alt=&quot; product image&quot;&gt;\r\n@if($solde)\r\n       &lt;p style=&quot;color:red;&quot;&gt;{{$prix}}&lt;/p&gt;\r\n@else \r\n       &lt;p&gt;{{$prix}}&lt;/p&gt;\r\n@endif \r\n&lt;/div&gt;\r\n4. &lt;body&gt;\r\n         &lt;x-produit titre=&quot;iphone 14 , 128 Go version europe &quot; image=&quot;images/phone/iphone 14.jpg&quot; prix=&quot;8890dhs&quot; :solde=&quot;false&quot; /&gt;\r\n&lt;/body&gt;', NULL),
(936, 'DA104214', 394, '1- php artisan make:controller epargneController\r\n2- Rout::get(&amp;quot;/&amp;quot;,[epargneController::class,&amp;#039;index&amp;#039;])\r\nRoute::post(&amp;quot;/calcuer&amp;quot;,[epargneController::class,&amp;#039;calcuer&amp;#039;])', NULL),
(937, 'DA105203', 393, '1- php artisan make:component produit\r\n\r\n2- \r\nclass Produit extends Component {\r\n    public $titre;\r\n    public $image;\r\n    public $prix;\r\n    public $solde;\r\n\r\n    public function __construct($titre, $image, $prix, $solde){\r\n        $this-&amp;gt;titre = $titre;\r\n        $this-&amp;gt;image = $image;\r\n        $this-&amp;gt;prix = $prix;\r\n        $this-&amp;gt;solde = $solde;\r\n    }\r\n}\r\n\r\n3 et 4\r\n&amp;lt;div&amp;gt;\r\n    &amp;lt;h2&amp;gt;{{ $titre }}&amp;lt;/h2&amp;gt;\r\n    &amp;lt;img src=&amp;quot;{{ $image }}&amp;quot; alt=&amp;quot;Product Image&amp;quot;&amp;gt;\r\n    &amp;lt;p style=&amp;quot;color: {{ $solde ? &amp;#039;red&amp;#039; : &amp;#039;black&amp;#039; }}&amp;quot;&amp;gt;{{ $prix }}&amp;lt;/p&amp;gt;\r\n&amp;lt;/div&amp;gt;', NULL),
(938, 'da104723', 396, 'class epargneController extend controller {\r\na.\r\n     public function index()\r\n{\r\n     return view(&amp;amp;amp;amp;#039;epargne&amp;amp;amp;amp;#039;);\r\n}\r\n\r\nb.\r\n     public function calculer(Request $request)\r\n{   \r\n      $montantObjectif = $request-&amp;amp;amp;gt;input(&amp;amp;amp;#039;montant_objectif&amp;amp;amp;#039;);\r\n      $capitalInitial = $request-&amp;amp;amp;gt;input(&amp;amp;#039;capital_initial&amp;amp;#039;);\r\n      $montantSauvgarde = [&amp;amp;quot;une annee =&amp;amp;gt; ($montantObjectif  - $capitalInitial) / 12,\r\n                                            &amp;amp;quot;deux ans&amp;amp;quot; =&amp;amp;gt; ($montantObjectif  - $capitalInitial) / 24,\r\n                                            &amp;amp;quot;trois ans =&amp;amp;gt; ($montantObjectif  - $capitalInitial) / 36&amp;amp;quot; &amp;amp;quot;];\r\ndd($montantSauvgarde);\r\n}}', NULL),
(939, 'DA105203', 394, '1- php artisan make:controller epargneController\r\n2- \r\nRoute::get(&#039;/&#039;, [epargneController::class, &#039;calculer&#039;]);\r\nRoute::post(&#039;/calculer&#039;, [epargneController::class, &#039;index&#039;]);\r\n', NULL),
(940, 'DA105203', 395, '&lt;form action=&quot;/calculer&quot; method=&quot;post&quot;&gt;\r\n        &lt;h1&gt;Simulateur d&#039;Épargne&lt;/h1&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;montant_objectif&quot; placeholder=&quot;Montant objectif&quot;&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;capital_initial&quot; placeholder=&quot;Capital initial&quot;&gt;\r\n        &lt;button type=&quot;submit&quot;&gt;Calculer&lt;/button&gt;\r\n&lt;/form&gt;', NULL),
(941, 'DA105203', 396, '4.a- \r\npublic function index() {\r\n    return view(&amp;#039;epargne&amp;#039;);\r\n}\r\n\r\n4.b- \r\npublic function calculer(Request $request){\r\n    $montant_objectif = $request-&amp;gt;input(&amp;#039;montant_objectif&amp;#039;);\r\n    $capital_initial = $request-&amp;gt;input(&amp;#039;capital_initial&amp;#039;);\r\n    $une_annee = ($montant_objectif - $capital_initial) / 12;\r\n    $deux_ans = ($montant_objectif - $capital_initial) / 24;\r\n    $trois_ans = ($montant_objectif - $capital_initial) / 36;\r\n\r\n    return dd([\r\n        &amp;#039;une_annee&amp;#039; =&amp;gt; $une_annee,\r\n        &amp;#039;deux_ans&amp;#039; =&amp;gt; $deux_ans,\r\n        &amp;#039;trois_ans&amp;#039; =&amp;gt; $trois_ans,\r\n    ]);\r\n}', NULL),
(942, 'DA104214', 395, '&lt;div&gt;\r\n    &lt;h1&gt;Simulateur d&#039;epargne&lt;/h1&gt;\r\n    &lt;form action=&quot;/calcuer&quot; method=&quot;POST&quot;&gt;\r\n        &lt;label&gt;Montant objictif&lt;/label&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;Montant&quot;&gt;\r\n        &lt;label&gt;capital initial&lt;/label&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;capital&quot;&gt;\r\n        &lt;input type=&quot;submit&quot; value=&quot;Calcuer&quot;&gt;\r\n    &lt;/form&gt;\r\n&lt;/div&gt;', NULL),
(943, 'DA103130', 393, '1. php artisant make:component produit\r\n\r\n2_ \r\n\r\nclass produit {\r\n    public $titre;\r\n    public $image;\r\n    public $prix;\r\n    public $sold;\r\n\r\n  public function __constractor($titre, $image, $prix, $sold){\r\n\r\n    $this -&gt; titre = $titre;\r\n    $this -&gt; image = $image;\r\n    $this -&gt; prix = $prix;\r\n    $this -&gt; sold = $sold;\r\n  }\r\n\r\n  public function render(){\r\n    return view(&#039;components.produit&#039;);\r\n  }\r\n}\r\n\r\n3_ \r\n\r\n&lt;div&gt;\r\n    &lt;h2&gt; {{$titre}}&lt;/h2&gt;\r\n    &lt;img src=&quot;{{$image}}&quot; alt=&quot;{{$titre}}&quot;&gt;\r\n\r\n    @if($solde)\r\n        &lt;p style=&quot;color: red;&quot;&gt;{{$prix}} DH&lt;/p&gt;\r\n    @else\r\n        &lt;p&gt;{{$prix}} DH&lt;/p&gt;\r\n    @endif\r\n&lt;/div&gt;\r\n\r\n4_ \r\n\r\n&lt;ul&gt;\r\n    &lt;li&gt;Titre : {{$titre}}&lt;/li&gt;\r\n    &lt;li&gt;url : {{$image}}&lt;/li&gt;\r\n    &lt;li&gt;prix : {{$prix}}&lt;/li&gt;\r\n    &lt;li&gt;solde : {{$sold}}&lt;/li&gt;\r\n&lt;/ul&gt;', NULL),
(944, 'J541371', 393, '1- php artisan make:component produit\r\n2-class produit {\r\npublic string $titre ;\r\npublic string $url ;\r\npublic flouat $prix;\r\npublic Boolean $solde;\r\n puplic function __constract(titre,url,prix,solde){\r\n  this-&amp;gt;$titre=titre\r\n this-&amp;gt;$url=url\r\n this-&amp;gt;$prix=prix\r\n this-&amp;gt;$sold=solde\r\n}\r\n}\r\n3-@php \r\n$p1=new produit(&amp;#039;titr1&amp;#039;,&amp;#039;url1&amp;#039;,&amp;#039;1252&amp;#039;,True);\r\n@endphp\r\n@if($p1-&amp;gt;solde ==1)\r\n&amp;lt;h1&amp;gt;Titre:{{p1-&amp;gt;titr}}&amp;lt;/h1&amp;gt;\r\n&amp;lt;h1 style=&amp;#039;&amp;#039; color:red&amp;quot;&amp;gt;Url : {{p1-&amp;gt;url}}&amp;lt;/h1&amp;gt;\r\n&amp;lt;h1 style=&amp;#039;&amp;#039; color:red&amp;quot;&amp;gt;Prix: {{p1-&amp;gt;prix}}&amp;lt;/h1&amp;gt;\r\n&amp;lt;h1 &amp;gt;Solde : {{p1-&amp;gt;solde}}&amp;lt;/h1&amp;gt;\r\n@endif\r\n\r\n', NULL),
(945, 'DA102541', 394, '1-php artisan make:controller epargneController\r\n2-\r\nRoute::get(&#039;/epargne&#039;, [epargneController::class, &#039;index&#039;])\r\nRoute::post(&#039;/epargne/calculer&#039;, [epargneController::class, &#039;calculer&#039;])\r\n', NULL),
(946, 'CB350275', 393, '1)-php artisan make:components produit\r\n2)_class extend components \r\npublic $titre;\r\npublic $image;\r\npublic $solde\r\npblic $prix \r\npublic function--construct($titre,$image,$solde,$prix)\r\n{\r\n$this-&gt;titre=$titre;\r\n$this-&gt;image=$image;\r\n$this-&gt;solde=$solde;\r\n$this-&gt;prix=$prix;\r\n}public function render()\r\n{\r\nreturn view(&#039;components.produit&#039;);\r\n}\r\n}\r\n\r\n3et4)-&lt;div&gt;\r\n&lt;h2&gt;{{$titre}}&lt;h2&gt;\r\n&lt;img src=&quot;{{$image}}&quot;alt=&quot;produit image&quot;&gt;\r\n&lt;p style=&quot;color:{{$solde &#039;rouge :\r\n&#039;black&#039;}}&quot;&gt;{{$prix}}&lt;/p&gt;\r\n\r\n', NULL),
(947, 'J541371', 394, '1-php artisan make:controller epargneController ;\r\n2-Rout::get(&#039;/&#039;,[epargneController::class ,&#039;index&#039;];\r\nRout::post(&#039;/calculer&#039;,[epargneController::class ,&#039;calculer&#039;];\r\n', NULL),
(948, 'DA102541', 393, '1-php artisan make:component produit\r\n2- class Produit extends Component\r\n{\r\n    public $titre;\r\n    public $imageUrl;\r\n    public $prix;\r\n    public $solde;\r\npublic function __construct($titre, $imageUrl, $prix, $solde)\r\n    {\r\n        $this-&gt;titre = $titre;\r\n        $this-&gt;imageUrl = $imageUrl;\r\n        $this-&gt;prix = $prix;\r\n        $this-&gt;solde = $solde;\r\n    }\r\n public function render()\r\n    {\r\n        return view(&#039;components.produit&#039;);\r\n    }\r\n}\r\n3 &lt;div&gt;\r\n    &lt;h2&gt;{{ $image produit }}&lt;/h2&gt;\r\n    &lt;img src=&quot;{{ $imageUrl }}&quot; alt=&quot;{{ $image produit  }}&quot;&gt;\r\n    &lt;p&gt;Prix : @if($solde) &lt;span style=&quot;color:red&quot;&gt;{{ $prix }}&lt;/span&gt; @else {{ $prix }} @endif&lt;/p&gt;\r\n&lt;/div&gt;\r\n4 &lt;!DOCTYPE html&gt;\r\n&lt;html lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n    &lt;title&gt;Page de Produit&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;produit titre=&quot;iPhone 14, 128 Go Version Europe&quot; imageUrl=&quot;images/phones/iphone14.jpg&quot; prix=&quot;8890dhs&quot; :solde=&quot;false&quot; /&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n', NULL),
(949, 'DB29786', 393, '1-php artisan make:componenet produit\r\n2-class produit{\r\n\r\nprivate $titre;\r\nprivate $url;\r\nprivate $prix;\r\nprivate $solde;\r\n\r\npublic function  __construct($titre,$url,$prix,$solde){\r\n    $this-&gt;titre= $titre;\r\n    $this-&gt;url= $url;\r\n    $this-&gt;prix= $prix;\r\n    $this-&gt;solde = $solde;\r\n\r\n}\r\n\r\n    public function __get($att) { return $this-&gt;$att;}\r\n\r\n    public function __set($att,$val) { $this-&gt;$att = $val;}\r\n\r\n    public function Afficher(){\r\n        echo  $this-&gt;titre.&quot; &quot;.$this-&gt;url.&quot; &quot;.$this-&gt;prix.&quot; &quot;.$this-&gt;solde;\r\n    }\r\n}\r\n\r\n?&gt;\r\n\r\n3 et 4 - \r\n@php\r\n$p1= new produit(&quot;produit1&quot;,&quot;produit.com&quot;,&quot;150.5&quot;,true);\r\n@endphp\r\n&lt;h1&gt;Titre : {{p1-&gt;titre}}&lt;/h1&gt;\r\n&lt;h1&gt;url : {{p1-&gt;url}}&lt;/h1&gt;\r\n@if(p1-&gt;solde==false)\r\n&lt;h1 style=&quot;color:red;&quot;&gt;{{p1-&gt;prix}}&lt;/h1&gt;\r\n@else\r\n&lt;h1&gt;{{p1-&gt;prix}}&lt;/h1&gt;\r\n@endif\r\n&lt;h1&gt;solde : {{p1-&gt;solde}}&lt;/h1&gt;', NULL),
(950, 'CB350275', 394, '1) php artisan controllerepargnecontoller\r\n2)route::get(&#039;\\,[epargnecontroller::class&#039;calculer&#039;]);\r\nroute::post(&#039;/calculer&#039;,[epargnecontroller::class,&#039;index&#039;]);\r\n\r\n', NULL),
(951, 'DB29786', 394, '1-php artisan make:controller epargneController\r\n2-\r\nRoute::get(&quot;/&quot;[epargneController::class,&quot;index&quot;])\r\nRoute::post(&quot;/calculer&quot;[epargneController::class,&quot;calculer&quot;])', NULL),
(952, 'DA102541', 395, '&lt;!DOCTYPE html&gt;\r\n&lt;html lang=&quot;fr&quot;&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n    &lt;title&gt;Simulateur d&#039;Épargne&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;h1&gt;Simulateur d&#039;Épargne&lt;/h1&gt;\r\n    &lt;form action=&quot;{{ route(&#039;epargne.calculer&#039;) }}&quot; method=&quot;post&quot;&gt;\r\n        @csrf\r\n        &lt;div&gt;\r\n            &lt;label for=&quot;montant_objectif&quot;&gt;Montant Objectif :&lt;/label&gt;\r\n            &lt;input type=&quot;number&quot; id=&quot;montant_objectif&quot; name=&quot;montant_objectif&quot; &gt;\r\n        &lt;/div&gt;\r\n        &lt;div&gt;\r\n            &lt;label for=&quot;capital_initial&quot;&gt;Capital Initial :&lt;/label&gt;\r\n            &lt;input type=&quot;number&quot; id=&quot;capital_initial&quot; name=&quot;capital_initial&quot; &gt;\r\n        &lt;/div&gt;\r\n        &lt;button type=&quot;submit&quot;&gt;Calculer&lt;/button&gt;\r\n    &lt;/form&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n', NULL),
(953, 'DN44306', 393, '1- php artisan make:component produit\r\n\r\n2-class produit {\r\npublic function __constract($titre, $url, $prix, $solde){\r\n $this-&amp;gt;titre = titre\r\n $this-&amp;gt;url= url\r\n $this-&amp;gt;prix= prix\r\n $this-&amp;gt;solde = solde\r\n}\r\n\r\n}\r\n\r\n3-&amp;amp;lt;div&amp;amp;gt;\r\n	&amp;amp;lt;h2&amp;amp;gt; {{$titre}} &amp;amp;lt;/h2&amp;amp;gt;\r\n	&amp;amp;lt;img src=&amp;amp;quot;{{$image}}&amp;amp;quot; alt=&amp;amp;quot;{{$titre}}&amp;amp;quot;&amp;amp;gt;\r\n	   @if($solde) \r\n		&amp;amp;lt;p style=&amp;amp;quot;color:red;&amp;amp;quot;&amp;amp;gt;{{$prix}} DH &amp;amp;lt;/p&amp;amp;gt;\r\n	   @else\r\n		&amp;amp;lt;p&amp;amp;gt; {{$prix}} DH &amp;amp;lt;/p&amp;amp;gt;\r\n	   @endif\r\n&amp;amp;lt;/div&amp;amp;gt;\r\n\r\n4-&amp;amp;lt;!Doctype html&amp;amp;gt;\r\n&amp;amp;lt;html&amp;amp;gt;\r\n&amp;amp;lt;head&amp;amp;gt;\r\n&amp;amp;lt;title&amp;amp;gt; Produit &amp;amp;lt;/title&amp;amp;gt;\r\n&amp;amp;lt;/head&amp;amp;gt;\r\n&amp;amp;lt;body&amp;amp;gt;\r\n  &amp;amp;lt;ul&amp;amp;gt;\r\n	&amp;amp;lt;li&amp;amp;gt; title :{{$titre}} &amp;amp;lt;/li&amp;amp;gt; \r\n	&amp;amp;lt;li&amp;amp;gt; image :{{$image}} &amp;amp;lt;/li&amp;amp;gt;\r\n	&amp;amp;lt;li&amp;amp;gt; prix :{{$prix}} &amp;amp;lt;/li&amp;amp;gt;\r\n	&amp;amp;lt;li&amp;amp;gt; solde :{{$solde}} &amp;amp;lt;/li&amp;amp;gt;\r\n  &amp;amp;lt;/ul&amp;amp;gt;\r\n&amp;amp;lt;/body&amp;amp;gt;\r\n&amp;amp;lt;/html&amp;amp;gt;\r\n&amp;amp;lt;body&amp;amp;gt;\r\n   \r\n&amp;amp;lt;/body&amp;amp;gt;\r\n&amp;amp;lt;/html&amp;amp;gt;', NULL),
(954, 'DN44306', 394, '1-php artisan make:controller epargneController\r\n\r\n2-Route::get(&amp;#039;/&amp;#039;, [&amp;#039;epargneController&amp;#039;, &amp;#039;index&amp;#039;]);\r\nRoute::post(&amp;#039;/calculer&amp;#039;, [&amp;#039;epargneController&amp;#039;, &amp;#039;calculer&amp;#039;]);', NULL),
(955, 'DA104214', 396, '4-a public function index (){\r\nreturn view(&amp;amp;quot;epargne&amp;amp;quot;)\r\n}\r\n\r\n4-b public function calcuer($Requs $R){\r\n$montant_objectif = $R-&amp;amp;gt;Montant\r\n$capital_initial = $R-&amp;amp;gt;capital\r\n$R1= (montant_objectif – capital_initial) / 12\r\n$R2= (montant_objectif – capital_initial) / 24\r\n$R3= (montant_objectif – capital_initial) / 36\r\n$Resultat = [une_annee=&amp;amp;gt;$R1 ,deux_ans=&amp;amp;gt;$R2 ,trois_ans=&amp;amp;gt;$R3]\r\nreturn dd($Resultat)\r\n}', NULL),
(956, 'DN44306', 395, '3-&amp;lt;div&amp;gt;\r\n  &amp;lt;h1&amp;gt; Simulateur d&amp;#039;epargne &amp;lt;/h1&amp;gt;\r\n     &amp;lt;div&amp;gt; \r\n	&amp;lt;label for=&amp;quot;MntObj&amp;quot;&amp;gt;Montant Objectif &amp;lt;/label&amp;gt;\r\n	&amp;lt;input type=&amp;quot;number&amp;quot; value=&amp;quot;&amp;quot; name=&amp;quot;MntObj&amp;quot; id=&amp;quot;MntObj&amp;quot;/&amp;gt;\r\n     &amp;lt;/div&amp;gt;\r\n     &amp;lt;div&amp;gt; \r\n	&amp;lt;label for=&amp;quot;CapInit&amp;quot;&amp;gt;Capital Initial &amp;lt;/label&amp;gt;\r\n	&amp;lt;input type=&amp;quot;number&amp;quot; value=&amp;quot;&amp;quot; name=&amp;quot;CapInit&amp;quot; id=&amp;quot;CapInit&amp;quot;/&amp;gt;\r\n     &amp;lt;/div&amp;gt;\r\n     &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Calculer&amp;lt;/button&amp;gt;	\r\n&amp;lt;/div&amp;gt;', NULL),
(957, 'CB345929', 393, '1-  php artisan make:component produit\r\n2-\r\nclass Produit extends component \r\n{\r\n               public $titre;\r\n               public $image;\r\n               public $prix;\r\n               public $solde;\r\n\r\n  public function __construct($titre , $image , $prix , $solde)\r\n  {\r\n          $this-&gt;titre = $titre;\r\n          $this-&gt;image = $image;\r\n          $this-&gt;prix = $prix;\r\n          $this-&gt;solde = $solde;\r\n     }\r\n        public function render ()\r\n       {\r\n             return view (&#039;comonent .produit&#039;);\r\n        }\r\n}\r\n\r\n3-\r\n&lt;div&gt;\r\n     &lt;h2&gt;{{ $titre }} &lt;/h2&gt;\r\n     &lt;img rsc=&quot;{{image }}&quot; alt=&quot; product image&quot;&gt;\r\n      $if {$solde}\r\n          &lt;p style=&quot;color:red;&quot;&gt;{{$prix }}&lt;/p&gt; \r\n      $else\r\n           &lt;p&gt;{{$prix}}&lt;/p&gt;\r\n      $endif\r\n&lt;/div&gt;\r\n\r\n4-\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n        &lt;title&gt; produit page &lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n         &lt;x-produit titre=&quot;iphne 14&quot; , &quot;128 Go  Version Europe &quot; image =&quot;images/phones/iphone14.jpg&quot; ,\r\n                                       prix=&quot;8890dhs&quot; , solde=&quot;false&quot; /&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n\r\n', NULL),
(958, 'DA102541', 396, 'class epargneController extends Controller\r\n{\r\n4-a\r\n public function index()\r\n    {\r\n        return view(&#039;epargne&#039;);\r\n    }\r\n4-b\r\npublic function calculer(Request $request)\r\n    {\r\n        $montantObjectif = $request-&gt;input(&#039;montant_objectif&#039;);\r\n        $capitalInitial = $request-&gt;input(&#039;capital_initial&#039;);\r\n        $resultat = [\r\n            &#039;une_annee&#039; =&gt; ($montantObjectif - $capitalInitial) / 12,\r\n            &#039;deux_ans&#039; =&gt; ($montantObjectif - $capitalInitial) / 24,\r\n            &#039;trois_ans&#039; =&gt; ($montantObjectif - $capitalInitial) / 36\r\n        ];\r\n        dd($resultat);\r\n    }\r\n}', NULL),
(959, 'da104723', 395, '&lt;form action=&quot;/calculer&quot; methode=&quot;post&quot;&gt;\r\n@csrf\r\n&lt;h1&gt;Sumulateur d&#039;epargne&lt;/h1&gt;\r\n&lt;div&gt;\r\n   &lt;label&gt;Montant Objectif &lt;/label&gt;\r\n   &lt;input type=&quot;number&quot; name=&quot;montant_objectif&quot;/&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div&gt;\r\n   &lt;label&gt;Capital initial&lt;/label&gt;\r\n   &lt;input type=&quot;number&quot; name=&quot;capital_initial&quot;/&gt;\r\n&lt;/div&gt;\r\n\r\n&lt;div&gt;\r\n&lt;input type=&quot;submit&quot; value=&quot;Calculer&quot;/&gt;\r\n&lt;/div&gt;', NULL),
(960, 'J541371', 395, '3-&lt;form action=&quot;{{url(&#039;/calculer&#039;)}}&quot; method=&quot;post&quot;&gt;\r\n    @csrf\r\n    &lt;h1&gt;Simulateur d&#039;epargne&lt;/h1&gt;\r\n    &lt;label for=&quot;&quot;&gt;Montant objectif:&lt;/label&gt;&lt;br&gt;\r\n    &lt;input type=&quot;text&quot; name=&quot;montant&quot; &gt;\r\n    &lt;label for=&quot;&quot;&gt;capital initial:&lt;/label&gt;&lt;br&gt;\r\n    &lt;input type=&quot;text&quot; name=&quot;capital&quot;&gt;&lt;br&gt;\r\n    &lt;input type=&quot;button&quot; class=&quot;btn btn-primary&quot; value=&quot;calculer&quot;&gt;\r\n&lt;/form&gt;', NULL);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(961, 'DA103720', 393, '1-php artisan make:comonent\r\n2-class Produit{\r\n    public $titre;\r\n    public $url_img;\r\n    public $prix;\r\n    public $sold;\r\n public function __construct(titre,url_img,prix,sold)\r\n    {\r\n         $this-&gt;titre= $titre;\r\n        $this-&gt;url_img= $url_img;\r\n        $this-&gt;prix= $prix;\r\n        $this-&gt;sold= $sold;\r\n    }\r\n\r\n}\r\n3/4 -\r\nuse App/view/components/Produit\r\n@php\r\n$color=&#039;&#039;;\r\n$p1=new Produit(&#039;sdf&#039;,&#039;dsffs&#039;,100,true);\r\n\r\n@endphp\r\n\r\nTitre : {{$p1-&gt;title}} &lt;br&gt;\r\nurl : {{$p1-&gt;url_img}} &lt;br&gt;\r\n@if($p1-&gt;sold==true)\r\nprix : &lt;p style:&#039;color:red &#039; &gt;{{$p1-&gt;prix}}&lt;/p&gt;  &lt;br&gt;\r\n@else\r\nprix : {{$p1-&gt;prix}} &lt;br&gt;\r\n@endif\r\nsolde : {{$p1-&gt;sold}}\r\n', NULL),
(962, 'DN50482', 393, '1-php artisan make:component produit \r\n2-class Produit extends Component\r\n{\r\n    public $titre;\r\n    public $image;\r\n    public $prix;\r\n    public $solde;\r\n\r\n    public function __construct($titre, $image, $prix, $solde)\r\n    {\r\n        $this-&amp;gt;titre = $titre;\r\n        $this-&amp;gt;image = $image;\r\n        $this-&amp;gt;prix = $prix;\r\n        $this-&amp;gt;solde = $solde;\r\n    }\r\n}\r\n\r\n\r\n3-&amp;lt;div&amp;gt;\r\n    &amp;lt;h2&amp;gt;{{ $titre }}&amp;lt;/h2&amp;gt;\r\n    &amp;lt;img src=&amp;quot;{{ $image }}&amp;quot; &amp;gt;\r\n    &amp;lt;p&amp;gt;\r\n@if($solde=true)\r\n &amp;lt;span style=&amp;quot;color:red&amp;quot;&amp;gt;{{ $prix }}&amp;lt;/span&amp;gt; \r\n@else\r\n &amp;lt;span &amp;gt;{{ $prix }}&amp;lt;/span&amp;gt; \r\n@endif\r\n&amp;lt;/p&amp;gt;\r\n&amp;lt;/div&amp;gt;\r\n\r\n\r\n\r\n', NULL),
(963, 'DN44306', 396, '4-\r\na- public function index (){\r\nreturn view(&amp;quot;epargne&amp;quot;)\r\n}\r\n\r\nb- public function calcuer($Requist $Requist){\r\n$montant_objectif = $Requist-&amp;gt;m\r\n$capital_initial = $Requist-&amp;gt;c\r\n$Resultat = [une_annee=&amp;gt;(montant_objectif – capital_initial) / 12 ,deux_ans=&amp;gt;(montant_objectif – capital_initial) / 24 ,trois_ans=&amp;gt;(montant_objectif – capital_initial) / 36]\r\nreturn dd($Resultat)\r\n}', NULL),
(964, 'DA104643', 393, '1-php artisan make:component produit\r\n2-class produit {\r\n    public string $titre ;\r\n    public string $imageurl;\r\n    public float $prix;\r\n    public bool $solde;\r\n  public function __construct($titre , $imageurl, $prix, $solde)\r\n     {\r\n         $this-&gt;titre = $titre;\r\n         $this-&gt;imageurl= $imageurl;\r\n         $this-&gt;prix= $prix;\r\n         $this-&gt;solde= $solde;\r\n         \r\n     }\r\n}\r\n\r\n3- 4 &lt;div&gt;\r\n&lt;h2&gt;Titre :{{$titre}} &lt;/h2&gt;\r\n&lt;img src=&quot;{{$imageurl}}&quot; alt=&quot;{{$titre}}&quot;&gt;\r\n&lt;p style=&quot;color: {{$solde ? &#039;red&#039; :&#039;blue&#039;}}&quot;&gt; {{$prix}}&lt;/p&gt;\r\n&lt;div&gt;', NULL),
(965, 'DN50482', 394, '1-php artisan make:controller epargneController\r\n2-Route::get(&#039;/&#039;, [EpargneController::class, &#039;index&#039;])\r\nRoute::post(&#039;/calculer&#039;, [EpargneController::class, &#039;calculer&#039;])', NULL),
(966, 'DA103130', 396, '4-a public function index (){\r\nreturn view(&quot;epargne&quot;)\r\n}\r\n\r\n4-b public function calcuer($Requist $Requist){\r\n$montant_objectif = $Requist-&gt;m\r\n$capital_initial = $Requist-&gt;c\r\n$Resultat = [une_annee=&gt;(montant_objectif – capital_initial) / 12 ,deux_ans=&gt;(montant_objectif – capital_initial) / 24 ,trois_ans=&gt;(montant_objectif – capital_initial) / 36]\r\nreturn dd($Resultat)\r\n}', NULL),
(967, 'DN50482', 395, '3-\r\n&lt;h1&gt;Simulateur d’épargne&lt;/h1&gt;\r\n    &lt;form action=”/calculer” method=”post”&gt;\r\n        @csrf\r\n        Montant Objectif:&lt;br&gt;\r\n        &lt;input type=”number” name=”montant_objectif” &gt;&lt;br&gt;\r\n        \r\n        Capital initial:&lt;br&gt;\r\n        &lt;input type=”number” name=”capital_initial” &gt;&lt;br&gt;\r\n        \r\n        &lt;input type=”submit” value=”Calculer”&gt;&lt;br&gt;\r\n', NULL),
(968, 'CI2772', 393, '1\r\nphp artisan make:component produit\r\n2\r\n?&gt;php\r\nnamespace App\\View\\Components;\r\nuse Illuminate\\View\\Component;\r\nclass Produit extends Component\r\n}\r\npublic $titre;\r\npublic $image;\r\npublic $prix;\r\npublic $solde;\r\npublic function __construct($titre, $image, $prix, $solde(\r\n}\r\n$this-&gt;titre = $titre;\r\n$this-&gt;image = $image;\r\n$this-&gt;prix = $prix;\r\n$this-&gt;solde = $solde;\r\n{\r\npublic function render()\r\n}\r\nreturn view(&#039;components.produit;(&#039;\r\n{\r\n{\r\n3\r\n&gt;div&lt;\r\n&gt;h2&gt;{{ $titre }}&lt;/h2&lt;\r\n&gt;img src=&quot;{{ $image }}&quot; alt=&quot;Product Image&lt;&quot;\r\n@if($solde(\r\n&gt;p style=&quot;color:red;&quot;&gt;{{ $prix }}&lt;/p&lt;\r\n@else\r\n&gt;p&gt;{{ $prix }}&lt;/p&lt;\r\n@endif\r\n/&gt;div&lt;\r\n4\r\n!&gt;DOCTYPE html&lt;\r\n&gt;html lang=&quot;en&lt;&quot;\r\n&gt;head&lt;\r\n&gt;meta charset=&quot;UTF-8&lt;&quot;\r\n&gt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&lt;&quot;\r\n&gt;title&gt;Product Page&lt;/title&lt;\r\n/&gt;head&lt;\r\n&gt;body&lt;\r\n&gt;x-produit titre=&quot;iPhone 14, 128 Go Version Europe&quot;\r\nimage=&quot;images/phones/iphone14.jpg&quot; prix=&quot;8890dhs&quot; :solde=&quot;false&quot;&lt;/\r\n/&gt;body&lt;\r\n/&gt;html', NULL),
(969, 'DA100623', 393, '1- php artisan make:component produit \r\n2- class produit {\r\npublic function __constract($titre, $url, $prix, $solde){\r\n $this-&amp;amp;amp;gt;titre = titre\r\n $this-&amp;amp;amp;gt;url= url\r\n $this-&amp;amp;amp;gt;prix= prix\r\n $this-&amp;amp;amp;gt;solde = solde\r\n}\r\n\r\n}\r\n\r\nTitre : iPhone 14, 128 Go Version Europe\r\nurl : images/phones/iphone14.jpg\r\nprix : 8890dhs\r\nsolde : false\r\n3-4- use app/view/components/produit \r\n@php\r\n $p=new produit (&amp;amp;amp;#039;iPhone 14, 128 Go Version Europe&amp;amp;amp;#039;,&amp;amp;amp;#039;images/phones/iphone14.jpg&amp;amp;amp;#039;,&amp;amp;amp;#039;8890dhs&amp;amp;amp;#039;,false)\r\n@endphp\r\n\r\nTitre : &amp;amp;amp;lt;span&amp;amp;amp;gt;{{$p-&amp;amp;amp;gt;titre}}&amp;amp;amp;lt;/span&amp;amp;amp;gt;;\r\nurl : &amp;amp;amp;lt;span&amp;amp;amp;gt;{{$p-&amp;amp;amp;gt;url}}&amp;amp;amp;lt;/span&amp;amp;amp;gt;;\r\n@if($p-&amp;amp;amp;gt;sold==true)\r\nprix: &amp;amp;amp;lt;span style=&amp;amp;amp;quot;color : red&amp;amp;amp;quot;&amp;amp;amp;gt;{{$p-&amp;amp;amp;gt;;prix}}&amp;amp;amp;lt;/span&amp;amp;amp;gt;;\r\n@else\r\nprix: &amp;amp;amp;lt;span&amp;amp;amp;gt;{{$p-&amp;amp;amp;gt;prix}}&amp;amp;amp;lt;/span&amp;amp;amp;gt;;\r\n@endif\r\nsolde : &amp;amp;amp;lt;span&amp;amp;amp;gt;{{$p-&amp;amp;amp;gt;solde }}&amp;amp;amp;lt;/span&amp;amp;amp;gt;;\r\n\r\n', NULL),
(970, 'DB30457', 393, '1/php artisan make:component produit\r\n2/class produit{\r\npublic function __construct__(titre, url, prix,solde){\r\n$titre=$this-&gt;titre\r\n$url=$this-&gt;url\r\n$prix=$this-&gt;prix\r\n$solde=$this-&gt;solde\r\n}}\r\n3/\r\n$promo=new produit(titre, url, prix,solde);\r\n@if $promo-&gt;solde==1:\r\n&lt;div style=&quot;background-color=red&quot;&gt;PRIX:&lt;/div&gt;\r\n@else:\r\n&lt;div style=&quot;background-color=white&quot;&gt;PRIX:&lt;/div&gt;\r\n@end if;\r\n4/$pr=new produit( iPhone 14, 128 Go Version Europe,images/phones/iphone14.jpg,8890dhs,false)\r\n&lt;div&gt;titre: $pr-&gt;titre&lt;/div&gt;\r\n&lt;div&gt;titre: $pr-&gt;url&lt;/div&gt;\r\n&lt;div&gt;titre: $pr-&gt;prix&lt;/div&gt;\r\n&lt;div&gt;titre: $pr-&gt;solde&lt;/div&gt;', NULL),
(971, 'DN50482', 396, '4-a)\r\npublic function index()\r\n    {\r\n        return view(&#039;epargne&#039;);\r\n    }\r\n4-b)\r\n    public function calculer(Request $request)\r\n    {\r\n        $montantObjectif = $request-&gt;input(&#039;montant_objectif&#039;);\r\n        $capitalInitial = $request-&gt;input(&#039;capital_initial&#039;);\r\n$resultat=[\r\n&quot;une_annee&quot;=&gt;($montantObjectif-$capitalInitial)/12,\r\n&quot;deux_ans&quot;=&gt;($montantObjectif-$capitalInitial)/24,\r\n&quot;trois_ans&quot;=&gt;($montantObjectif-$capitalInitial)/36\r\n]\r\ndd($resultat);\r\n}', NULL),
(972, 'DA103720', 394, '1-php artisan make:controller epargneController\r\n2-\r\nRoute::get(&#039;/&#039;, [epargneController::class, &#039;index&#039;]);\r\nRoute::post(&#039;/calculer&#039;, [epargneController::class, &#039;calculer&#039;]);', NULL),
(973, 'DA103720', 395, '3-\r\n&lt;h1&gt;Simulateur d&#039;épargne&lt;/h1&gt;\r\n&lt;form action=&#039;{{url(&#039;/calculer&#039;)}}&#039; method=&#039;post&#039; &gt;\r\nMontant Objectif &lt;br&gt;\r\n&lt;input type=&quot;text&quot; name=&#039;montant&#039;&gt;&lt;br&gt;\r\nCapitital initial &lt;br&gt;\r\n&lt;input type=&quot;submit&quot; value=&#039;calculer&#039; name=&#039;capital&#039;&gt;&lt;br&gt;\r\n&lt;/form&gt;', NULL),
(974, 'DA103720', 396, '4-\r\nclass epargneController extends Controller\r\n{\r\n    public function index()\r\n    {\r\n        return view(&#039;epargne&#039;);\r\n    }\r\n public function calculer(Request $request)\r\n    {\r\n$une_annee=2017/12\r\n$deux_ans=2016/24\r\n$trois_ans=2013/36\r\n$nbr_mois=$une_annee+$deux_ans+$trois_ans;\r\n$Resultat=($request-&gt;montant-$request-&gt;capital)/$nbr_mois;\r\nreturn view(&#039;epargne&#039;,[&#039;Resultat&#039;=&gt;$Resultat]);\r\n    }\r\n\r\n}', NULL),
(975, 'DB30457', 395, '&lt;form action={{/calculer}} methode=&quot;post&quot;&gt;\r\n&lt;h1&gt;Simulator d&#039;epargne&lt;/h1&gt;\r\n&lt;h6&gt; Montant objectif&lt;/h6&gt;\r\n&lt;input type=&quot;float&quot; name=&quot;montant&quot;&gt;\r\n&lt;h6&gt; capital initial&lt;/h6&gt;\r\n&lt;input type=&quot;float&quot; name=&quot;capital&quot;&gt;\r\n&lt;/form&gt;', NULL),
(976, 'DB29786', 395, '3- \r\n&lt;form action={{route(&#039;save&#039;)}} method=&quot;post&quot;&gt;\r\n@csrf\r\n&lt;h1&gt;Simulateur d&#039;epargne&lt;/h1&gt;\r\nMontant Objectif &lt;input type=&quot;text&quot; name=&quot;montant&quot;/&gt;\r\ncapital initial &lt;input type=&quot;text&quot; name=&quot;capital&quot;/&gt;\r\n&lt;input type=&quot;submit&quot; value=&quot;Calculer&quot; /&gt;\r\n&lt;/form&gt;', NULL),
(977, 'DB30457', 396, '4/\r\na-\r\npublic function index(){\r\n     return view(&amp;#039;epargne&amp;#039;)\r\n}\r\nb-\r\npublic function calculer(Request $req)`{\r\n$montant=$req-&amp;gt;montant\r\n$capital=$req-&amp;gt;capital\r\n$resulat1 =($montant-$capital)/12\r\n$resulat2=($montant-$capital)/24\r\n$resulat3=($montant-$capital)/36\r\n$s=[&amp;quot;une_annee&amp;quot;=&amp;gt;$resulat1,&amp;quot;deux_ans&amp;quot;=&amp;gt;$resulat2,&amp;quot;trois_ans&amp;quot;=&amp;gt;$resulat3]\r\nreturn dd($s)\r\n}', NULL),
(978, 'CB350275', 395, '&lt;form action=&quot;/calculer&quot; method=&quot;post&quot;&gt;\r\n        &lt;h1&gt;Simulateur d&#039;Épargne&lt;/h1&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;montant_objectif&quot; placeholder=&quot;Montant objectif&quot;&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;capital_initial&quot; placeholder=&quot;Capital initial&quot;&gt;\r\n        &lt;button type=&quot;submit&quot;&gt;Calculer&lt;/button&gt;\r\n&lt;/form&gt;', NULL),
(979, 'CB344902', 393, '1/php artisan make:component produit\r\n2/ class produit {\r\npublic function \r\n}\r\n\r\n3/  php\r\n$p1=new prix()\r\n@endphp\r\n@ if ($p1--&gt;solde==1)\r\nreturn &lt;h1 style=&quot;backgroundcolor=&quot;red&quot;,&gt;{{$p1-&gt;prix}}&lt;/h1&gt;', NULL),
(980, 'CB350275', 396, 'A-public function index() {\r\n    return view(&#039;epargne&#039;);\r\n}\r\nb-public function calculer(Request $request){\r\n    $montant_objectif = $request-&gt;input(&#039;montant_objectif&#039;);\r\n    $capital_initial = $request-&gt;input(&#039;capital_initial&#039;);\r\n    $une_annee = ($montant_objectif - $capital_initial) / 12;\r\n    $deux_ans = ($montant_objectif - $capital_initial) / 24;\r\n    $trois_ans = ($montant_objectif - $capital_initial) / 36;\r\n\r\n    return dd([\r\n        &#039;une_annee&#039; =&gt; $une_annee,\r\n        &#039;deux_ans&#039; =&gt; $deux_ans,\r\n        &#039;trois_ans&#039; =&gt; $trois_ans,\r\n    ]);\r\n}', NULL),
(981, 'CB344902', 394, '1/ php artisan make: controller epargneController.\r\n2/ Route::get(&#039;/&#039;,[&#039;epargneController&#039;::classe,&#039;index&#039;]);\r\nRoute::post(&#039;/calculer&#039;,[&#039;epargneController&#039;::classe,&#039;calculer&#039;]);\r\n', NULL),
(982, 'CB344902', 395, '&lt;div&gt;\r\n    &lt;h1&gt;Simulateur d&#039;épargne&lt;/h1&gt;\r\n    &lt;label for=&quot;montant&quot;&gt;Montant Objectif:&lt;/label&gt;\r\n   &lt;input type=&quot;number&quot; id=&quot;mt&quot;&gt;\r\n  &lt;label for=&quot;capital&quot;&gt;Capitale initial:&lt;/label&gt;\r\n   &lt;input type=&quot;number&quot; id=&quot;cp&quot;&gt;\r\n&lt;button type=&quot;submet&quot; &gt;calculer&lt;/button&gt;\r\n&lt;/div&gt;\r\n', NULL),
(983, 'DA100623', 394, '1- php artisan make:controller epargneController\r\n2- Rout::get(&amp;amp;quot;/&amp;amp;quot;,[epargneController::class,&amp;amp;#039;index&amp;amp;#039;])\r\nRoute::post(&amp;amp;quot;/calcuer&amp;amp;quot;,[epargneController::class,&amp;amp;#039;calcuer&amp;amp;#039;])\r\n', NULL),
(984, 'CB344902', 396, '1.a/   public function index()\r\n         {\r\n               return view(&#039;epargne&#039;)\r\n          }\r\n\r\nb/ public function calculer(Request $request)\r\n$montant_objectif=$request-&gt;input(&#039;montant_objectif&#039;)\r\n$capital_initial=$request-&gt;input(&#039;capital_initial&#039;)\r\n$nbr_mois=$request-&gt;input(&#039;nbr_mois&#039;)\r\n$montant_epargner= $montant_objectif – $capital_initial\r\n$Resultat=($montant_objectif – $capital_initial)/nbr_mois\r\nreturn redirect()-&gt;dd(\r\n[{ &quot;une_annee&quot;,&#039;&#039;/&quot;,&quot;12&quot; == &#039;&#039;  &quot;\r\n  &quot;deux_ans&quot; &#039;&#039;/&quot;,&quot;24&quot; == &#039;&#039;  &quot;\r\n&quot;trois_ans&quot; &#039;&#039;/&quot;,&quot;36&quot; == &#039;&#039;  &quot;\r\n}];\r\n', NULL),
(985, 'CB346449', 395, '3. &lt;form method =&quot;post&quot; action=&quot;{{ route ( &#039; epargne. calculer&#039;) }}&gt; \r\n   &lt;label for=&quot;montant_objectif&quot;&gt; montant objectif &lt;/label&gt; &lt;br&gt;\r\n &lt;inpute type=&quot;number&quot; id=&quot;montant_objectif&quot; name=&quot;montant_objectif&quot; value=&quot;20000&quot; &gt; &lt;br&gt; \r\n&lt;label for=&quot;capital_initial&quot;&gt; capital_initial &lt;/label&gt; &lt;br&gt;\r\n &lt;inpute type=&quot;number&quot; id=&quot;capital_initial&quot; name=&quot;capital_initial&quot; value=&quot;1000&quot; &gt; &lt;br&gt; \r\n&lt;button type=&quot;submui&quot;&gt; calculer &lt;/button&gt;\r\n&lt;/form&gt;\r\n\r\n', NULL),
(986, 'DA102357', 396, '\r\n4.b- \r\npublic function calculer(Request $request){\r\n    $montant_objectif = $request-&gt;input(&#039;montant_objectif&#039;);\r\n    $capital_initial = $request-&gt;input(&#039;capital_initial&#039;);\r\n    $une_annee = ($montant_objectif - $capital_initial) / 12;\r\n    $deux_ans = ($montant_objectif - $capital_initial) / 24;\r\n    $trois_ans = ($montant_objectif - $capital_initial) / 36;\r\n\r\n    return dd([\r\n        &#039;une_annee&#039; =&gt; $une_annee,\r\n        &#039;deux_ans&#039; =&gt; $deux_ans,\r\n        &#039;trois_ans&#039; =&gt; $trois_ans,\r\n    ]);\r\n}', NULL),
(987, 'CI2772', 394, 'ex2\r\n1\r\nphp artisan make:controller epargneController\r\n2\r\nuse App\\Http\\Controllers\\epargneController;\r\nRoute::get(&amp;#039;/&amp;#039;, [epargneController::class, &amp;#039;index;([&amp;#039;\r\nRoute::post(&amp;#039;/&amp;#039;, [epargneController::class, &amp;#039;calculer&amp;#039;])-&amp;gt;name(&amp;#039;epargne.calculer', NULL),
(988, 'DA100623', 395, '&amp;amp;lt;div&amp;amp;gt;\r\n    &amp;amp;lt;h1&amp;amp;gt;Simulateur depargne&amp;amp;lt;/h1&amp;amp;gt;\r\n    &amp;amp;lt;form action=&amp;amp;quot;/calcuer&amp;amp;quot; method=&amp;amp;quot;POST&amp;amp;quot;&amp;amp;gt;\r\n        Montant objictif :&amp;amp;lt;input type=&amp;amp;quot;text&amp;amp;quot; name=&amp;amp;quot;Montant &amp;amp;quot;&amp;amp;gt;\r\n       capital initial : &amp;amp;lt;input type=&amp;amp;quot;text&amp;amp;quot; name=&amp;amp;quot;capital &amp;amp;quot;&amp;amp;gt;\r\n        &amp;amp;lt;input type=&amp;amp;quot;submit&amp;amp;quot; value=&amp;amp;quot;calcuer&amp;amp;quot;&amp;amp;gt;\r\n    &amp;amp;lt;/form&amp;amp;gt;\r\n&amp;amp;lt;/div&amp;amp;gt;', NULL),
(989, 'DA102357', 394, 'php artisan make:controller epargneController\r\n\r\n;use App\\Http\\Controllers\\epargneController\r\n;)]&#039;Route::get(&#039;/&#039;, [epargneController::class, &#039;index\r\n;)&#039;Route::post(&#039;/&#039;, [epargneController::class, &#039;calculer&#039;])-&gt;name(&#039;epargne.calculer\r\n\r\n', NULL),
(990, 'J541371', 396, '4)a-public function index {\r\nreturn view(&#039;epargne&#039;);\r\n}\r\nb- public function calculer (Request $req){\r\n$montant = $req-&gt;montant ;\r\n$capital = $req-&gt;capital;\r\n$res_une_ans=($montant-$capital)/12;\r\n$res_deux_ans=($montant-$capital)/24;\r\n$res_trois_ans=($montant-$capital)/36;\r\n\r\nreturn dd([&quot;une_annee&quot; =&gt;$res_une_ans;&quot;deux_ans&quot;=&gt;$res_deux_ans;&quot;trois_ans&quot;=&gt;$res_trois_ans])\r\n\r\n} ', NULL),
(991, 'DA102357', 395, '\r\n\r\n&lt;form action=&quot;/calculer&quot; method=&quot;post&quot;&gt;\r\n        &lt;h1&gt;Simulateur d&#039;Épargne&lt;/h1&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;montant_objectif&quot; placeholder=&quot;Montant objectif&quot;&gt;\r\n        &lt;input type=&quot;text&quot; name=&quot;capital_initial&quot; placeholder=&quot;Capital initial&quot;&gt;\r\n        &lt;button type=&quot;submit&quot;&gt;Calculer&lt;/button&gt;\r\n&lt;/form&gt;4.a- \r\npublic function index() {\r\n    return view(&#039;epargne&#039;);\r\n}', NULL),
(992, 'CB345929', 395, '&lt;html&gt;\r\n&lt;head&gt;\r\n        &lt;title&gt; Simulateur d&#039;épargne &lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n        &lt;h1&gt; Simulateur d&#039;épargne &lt;/h1&gt;\r\n        &lt;form method=&quot;POST&quot; action=&quot;{{ route (&#039;epargne.calculer &#039;)}}&gt;\r\n        $csrf \r\n             &lt; label for = &quot;montant_objectif &quot;&gt;montant obectif &lt;/label&gt;&lt;br&gt;\r\n              &lt;input type=&quot;number&quot; id=&quot;montant_objectif&quot; name=&quot;montent_objectif&quot; value=&quot;2000&quot;&gt;&lt;br&gt;\r\n               \r\n              &lt; label for = &quot;montant_initial &quot;&gt;montant initial &lt;/label&gt;&lt;br&gt;\r\n              &lt;input type=&quot;number&quot; id=&quot;montant_initial&quot; name=&quot;montant_initial&quot; value=&quot;1000&quot; &gt;&lt;br&gt;\r\n               \r\n         &lt;button type=&quot;submit&quot;&gt; calculer&lt;/button&gt;\r\n   &lt;/form&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n', NULL),
(993, 'CI1897', 396, '4-public function index(){\r\nreturn view(&#039;epargne&#039;)}\r\n5-public function calculer (){\r\n    \r\n      \r\n     &#039; resultat1&#039;=(1234-2334)/12;\r\n     &#039; resultat2&#039;=(1234-2334)/24;\r\n     &#039; resultat3&#039;=(1234-2334)/36;\r\n      return dd([&quot;une_annee&quot;=&gt;resultat1, &quot;deux_ans&quot;=&gt;resultat2, trois_ans=&gt;resultat3])\r\n         \r\n    \r\n\r\n\r\n', NULL),
(994, 'DA102357', 393, '1- php artisan make:component produit\r\n\r\n2- \r\nclass Produit extends Component {\r\n    public $titre;\r\n    public $image;\r\n    public $prix;\r\n    public $solde;\r\n\r\n    public function __construct($titre, $image, $prix, $solde){\r\n        $this-&gt;titre = $titre;\r\n        $this-&gt;image = $image;\r\n        $this-&gt;prix = $prix;\r\n        $this-&gt;solde = $solde;\r\n    }\r\n}\r\n\r\n3 et 4\r\n&lt;div&gt;\r\n    &lt;h2&gt;{{ $titre }}&lt;/h2&gt;\r\n    &lt;img src=&quot;{{ $image }}&quot; alt=&quot;Product Image&quot;&gt;\r\n    &lt;p style=&quot;color: {{ $solde ? &#039;red&#039; : &#039;black&#039; }}&quot;&gt;{{ $prix }}&lt;/p&gt;\r\n&lt;/div&gt;\r\n', NULL),
(995, 'DB29786', 396, '4-a-\r\npublic function index(){\r\n        return view(&#039;epargne&#039;);\r\n    }\r\nb-\r\npublic function calculer(Request $request)\r\n    {\r\n        $montant_objectif = $request-&gt;input(&#039;montant&#039;);\r\n        $capital_initial = $request-&gt;input(&#039;capital&#039;);\r\n\r\n	$Resultat1 = ($montant_objectif – $capital_initial) / 12\r\n	$Resultat2 = ($montant_objectif – $capital_initial) / 24\r\n        $Resultat3 = ($montant_objectif – $capital_initial) / 36\r\n        }\r\n\r\nreturn dd([\r\n  &quot;une_annee&quot; =&gt; $Resultat1\r\n  &quot;deux_ans&quot; =&gt; $Resultat2\r\n  &quot;trois_ans&quot; =&gt; $Resultat3\r\n]);\r\n}', NULL),
(996, 'CI2772', 395, '3\r\n!&gt;DOCTYPE html&lt;\r\n&gt;html lang=&quot;en&lt;&quot;\r\n&gt;head&lt;\r\n&gt;meta charset=&quot;UTF-8&lt;&quot;\r\n&gt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&lt;&quot;\r\n&gt;title&gt;Simulateur d&#039;épargne&lt;/title&lt;\r\n/&gt;head&lt;\r\n&gt;body&lt;\r\n&gt;h1&gt;Simulateur d&#039;épargne&lt;/h1&lt;\r\n&gt;form method=&quot;POST&quot; action=&quot;{{ route(&#039;epargne.calculer(&#039;&lt;&quot;{{\r\n@csrf\r\n&gt;label for=&quot;montant_objectif&quot;&gt;Montant Objectif&lt;/label&gt;&lt;br&lt;\r\n&gt;input type=&quot;number&quot; id=&quot;montant_objectif&quot; name=&quot;montant_objectif&quot;\r\nvalue=&quot;20000&quot;&gt;&lt;br&lt;\r\n&gt;label for=&quot;capital_initial&quot;&gt;Capital initial&lt;/label&gt;&lt;br&lt;\r\n&gt;input type=&quot;number&quot; id=&quot;capital_initial&quot; name=&quot;capital_initial&quot; value=&quot;1000&quot;&gt;&lt;br&lt;\r\n&gt;button type=&quot;submit&quot;&gt;Calculer&lt;/button&lt;\r\n/&gt;form&lt;\r\n/&gt;body&lt;\r\n/&gt;html&lt;', NULL),
(997, 'CI2772', 396, '4\r\n?&gt;php\r\nnamespace App\\Http\\Controllers;\r\nuse Illuminate\\Http\\Request;\r\nclass epargneController extends Controller\r\n}\r\n//Méthode pour afficher la vue epargne.blade.php\r\npublic function index()\r\n}\r\nreturn view(&#039;epargne;(&#039;\r\n{\r\n//Méthode pour répondre à la soumission du formulaire\r\npublic function calculer(Request $request(\r\n}\r\n//Récupération des données du formulaire\r\n$montant_objectif = $request-&gt;input(&#039;montant_objectif;(&#039;\r\n$capital_initial = $request-&gt;input(&#039;capital_initial;(&#039;\r\n//Calcul du montant à épargner chaque mois pour 1, 2 et 3 ans\r\n$une_annee = ($montant_objectif - $capital_initial) / 12;\r\n$deux_ans = ($montant_objectif - $capital_initial) / 24;\r\n$trois_ans = ($montant_objectif - $capital_initial) / 36;\r\n//Retourner le résultat sous forme d&#039;un tableau associatif\r\nreturn dd])\r\n&#039;une_annee&#039; =&gt; round($une_annee, 2,(\r\n&#039;deux_ans&#039; =&gt; round($deux_ans, 2,(\r\n&#039;trois_ans&#039; =&gt; round($trois_ans, 2(\r\n;([\r\n{\r\n{', NULL),
(998, 'DA100623', 396, '4- public function index (){\r\n         return view(&amp;quot;epargne&amp;quot;)\r\n}\r\n\r\nB-public function calcuer(Request $Request){\r\n$montant = $Request -&amp;gt;montant \r\n$capital= $Request -&amp;gt;capital\r\n$res =[une_annee=&amp;gt;(montant – capital) / 12 ,deux_ans=&amp;gt;(montant – capital) / 24 ,trois_ans=&amp;gt;(montant– capital) / 36]\r\n\r\nreturn dd($res) \r\n}', NULL),
(999, 'DA107633', 401, 'CREATE DATABASE cc3_dd102;\r\n\r\nUSE cc3_dd102;\r\n\r\nCREATE TABLE Livre (\r\nidLivre INT PRIMARY KEY AUTO_INCREMENT, \r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndataPublication VARCHAR(30),\r\nprix float \r\n\r\n);\r\nCREATE TABLE utilisateur (\r\nemail VARCHAR(30) PRIMARY KEY AUTO_INCREMENT, \r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npass_word VARCHAR(30),\r\ntel INT  \r\n\r\n);\r\nCREATE TABLE myfavorite (\r\nidFav INT  PRIMARY KEY AUTO_INCREMENT, \r\ndatAjout DATE DEFAULT CURRENT_DATE(),\r\nidLivre INT ,\r\nemail VARCHAR(30) ,\r\nFOREIGN KEY (idLivre) REFERENCES livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n);\r\nCREATE TABLE Avis (\r\nidAvis INT  PRIMARY KEY AUTO_INCREMENT, \r\ntxt VARCHAR(30) ,\r\nidLivre INT ,\r\nemail VARCHAR(30) ,\r\nFOREIGN KEY (idLivre) REFERENCES livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n);\r\nCREATE TABLE likes (\r\nidlike INT  PRIMARY KEY AUTO_INCREMENT, \r\ndatlike DATE ,\r\ntxt VARCHAR(30) ,\r\nidLivre INT ,\r\nemail VARCHAR(30) ,\r\nFOREIGN KEY (idLivre) REFERENCES livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Dislikes (\r\nidDiselike INT  PRIMARY KEY AUTO_INCREMENT, \r\ndatDiselike DATE ,\r\ntxt VARCHAR(30) ,\r\nidLivre INT ,\r\nemail VARCHAR(30) ,\r\nFOREIGN KEY (idLivre) REFERENCES livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n);\r\n\r\n\r\n\r\nINSERT INTO Livre (idLivre, titre,editeur,datePublication,prix)\r\nVALUES (1234, simon, ali , 12-12-2000,123.33);\r\n\r\nINSERT INTO utilisatreur (email,nom,prenom,pass_word,tel)\r\nVALUES (hindB@gmail.com, hind, basim , 1@sss,06773452);\r\n\r\nINSERT INTO myFavorite (idFav ,dateAjout, idLivre, email)\r\nVALUES (1, 12-12-2004, 1234 ,hindB@gmail.com);\r\n\r\nINSERT INTO Avis (idAvis,dateAvis,txt, idLivre, email)\r\nVALUES (2, 12-12-2024, tres bien , 1234 ,hindB@gmail.com);\r\n\r\nINSERT INTO likes (idLike,dateLike,txt, idLivre, email)\r\nVALUES (124, 20-12-2024, adorable ,  1234 ,hindB@gmail.com);\r\n\r\nINSERT INTO DISlikes (idDisLike,dateDisLike,txt, idLivre, email)\r\nVALUES (124, 20-12-2024, movese livre,  1234 ,hindB@gmail.com);\r\n\r\nALTER TABLE ADD CONTAINT LIKE &#039;[A-Z]', NULL),
(1000, 'DA106939', 401, 'CREATE DATABASES OFPPT;\r\n\r\nUSE OFPPT;\r\n\r\nCREATE TABLE Livre\r\n(\r\nidLivre INT PRIMARY KEY,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATE,\r\nprix FLOAT\r\n);\r\n\r\nCREATE TABLE Utilisateur\r\n(\r\nemail VARCHAR(30) PRIMARY KEY ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npassword_U VARCHAR(30),\r\ntel INT\r\n);\r\n\r\nCREATE TABLE MyFavorite\r\n(\r\nidFav INT PRIMARY KEY ,\r\ndateAjout DATE UPDATE ON CASCADE ,\r\nidLivre INT,\r\nemail VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Avis\r\n(\r\nidAvis INT PRIMARY KEY ,\r\ndateAvis DATE,\r\ntextA TEXT,\r\nidLivre INT,\r\nemail VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Like\r\n(\r\nidLike INT PRIMARY KEY ,\r\ndateLike DATE,\r\ntextl TEXT,\r\nidLivre INT,\r\nemail VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE DisLike\r\n(\r\nidDisLike INT PRIMARY KEY ,\r\ndateDisLike DATE,\r\ntextD TEXT,\r\nidLivre INT,\r\nemail VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\nSELECT idLivre FROM Livre LIKE=&#039;%OFPPT_&#039;;', NULL),
(1001, 'DA106392', 402, 'SELECT\r\n    (SELECT COUNT(*) FROM Like) AS likes,\r\n    (SELECT COUNT(*) FROM DisLike) AS dislikes;\r\n\r\n\r\nSELECT\r\n    (SELECT COUNT(*) FROM Like) AS likes,\r\n    (SELECT COUNT(*) FROM DisLike) AS dislikes;\r\n\r\nSELECT idLivre, COUNT(*) AS total_likes\r\nFROM Like\r\nGROUP BY idLivre\r\nORDER BY total_likes DESC\r\nLIMIT 1;\r\n\r\nSELECT idLivre\r\nFROM Livre\r\nWHERE idLivre NOT IN (SELECT idLivre FROM Like);\r\n', NULL),
(1002, 'SH219025', 401, 'CREATE DATABASE my_libschool ;\r\nUSE my_libschool ;\r\n\r\nCREATE TABLE Livre (\r\n   idLivre VARCHAR(30) PRIMARY KEY CHECK (idLivre LIKE &#039;%[OFPPT][_](0-9)[5]%&#039; ,\r\n   titre VARCHAR(30),\r\n   editeur VARCHAR(30),\r\n   datePublication DATE,\r\n   prix FLOAT ,);\r\n\r\nCREATE TABLE Utilisateur (\r\n   email VARCHAR(30) PRIMARY KEY ,\r\n   nom VARCHAR(30),\r\n   prenom VARCHAR(30),\r\n   password VARCHAR(30),\r\n   tel VARCHAR(20);)\r\n\r\nCREATE TABLE MyFavorite (\r\n   idFav INT PRIMARY KEY,\r\n   dateAjout DATE DEFAULT CURRENT_DATE,\r\n   idLivre VARCHAR(20),\r\n   email VARCHAR(30),\r\n   FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n   FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Avis (\r\n   idAvis INT PRIMARY KEY ,\r\n   dateAvis DATE,\r\n   texte  TEXT,\r\n   idLivre VARCHAR(30),\r\n   email VARCHAR(30),\r\n   FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n   FOREIGN KEY (email) REFERENCES Utilisateur(email) );\r\n\r\nCREATE TABLE like (\r\n   idLike INT PRIMARY KEY ,\r\n   dateLike DATE,\r\n   texte  TEXT,\r\n   idLivre VARCHAR(30),\r\n   email VARCHAR(30),\r\n   FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n   FOREIGN KEY (email) REFERENCES Utilisateur(email));\r\n\r\nCREATE TABLE DisLike (\r\n   idDislike INT PRIMARY KEY,\r\n   dateDislike DATE,\r\n   texte TEXT,\r\n   idLivre VARCHAR(30),\r\n   email VARCHAR(30),\r\n   FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n   FOREIGN KEY (email) REFERENCES Utilisateur(email));\r\n   \r\n   \r\nINSERT INTO Livre (idLivre, titre, editeur, datePublication, prix)\r\nVALUES (&amp;amp;#039;OFPPT_00002&amp;amp;#039;, &amp;amp;#039;antigone&amp;amp;#039;, &amp;amp;#039;abdou&amp;amp;#039;, &amp;amp;#039;2024-05-10&amp;amp;#039;, 122.0 )', NULL),
(1003, 'DA106392', 401, 'CREATE DATABASE My_LibSchool;\r\nUSE DATABASE My_LibSchool ;\r\n\r\nCREATE TABLE Livre (\r\n    idLivre VARCHAR(20) PRIMARY KEY,\r\n    titre VARCHAR(100),\r\n    editeur VARCHAR(100),\r\n    datePublication DATE,\r\n    prix INT \r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(100) PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    password VARCHAR(100),\r\n    tel VARCHAR(20)\r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\n    idFav INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateAjout DATE DEFAULT CURRENT_DATE,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(100),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Avis (  \r\n    idAvis INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateAvis DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(100),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Likes (\r\n    idLike INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateLike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(100),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE DisLike (\r\n    idDislike INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateDislike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(100),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\nALTER TABLE Livre\r\nADD CONSTRAINT pk_Livre PRIMARY KEY (idLivre);\r\n\r\nALTER TABLE Utilisateur\r\nADD CONSTRAINT pk_Utilisateur PRIMARY KEY (email);\r\n\r\nALTER TABLE MyFavorite\r\nADD CONSTRAINT pk_MyFavorite PRIMARY KEY (idFav);\r\n\r\nALTER TABLE Avis\r\nADD CONSTRAINT pk_Avis PRIMARY KEY (idAvis);\r\n\r\nALTER TABLE Like\r\nADD CONSTRAINT pk_Like PRIMARY KEY (idLike);\r\n\r\nALTER TABLE DisLike\r\nADD CONSTRAINT pk_DisLike PRIMARY KEY (idDislike);\r\n\r\n\r\nALTER TABLE MyFavorite\r\nADD CONSTRAINT fk_MyFavorite_idLivre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT fk_MyFavorite_email FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis\r\nADD CONSTRAINT fk_Avis_idLivre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT fk_Avis_email FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Like\r\nADD CONSTRAINT fk_Like_idLivre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT fk_Like_email FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE DisLike\r\nADD CONSTRAINT fk_DisLike_idLivre FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\nADD CONSTRAINT fk_DisLike_email FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\n\r\nALTER TABLE MyFavorite\r\nMODIFY COLUMN dateAjout TIMESTAMP DEFAULT CURRENT_TIMESTAMP;\r\n\r\n\r\n\r\n\r\n', NULL),
(1004, 'DA107236', 401, 'CREATE DATABASE ofppt;\r\nUSE ofppt ;\r\n \r\nCREATE TABLE Livre (\r\n    idLivre VARCHAR(30) PRIMARY KEY,\r\n    titre VARCHAR(30),\r\n    editeur VARCHAR(30),\r\n    datePublication DATE,\r\n    prix FLOAT\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(30) PRIMARY KEY,\r\n    nom VARCHAR(30),\r\n    prenom VARCHAR(30),\r\n    modpass VARCHAR(30),\r\n    tel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\n    idFav INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateAjout DATE DEFAULT CURRENT_DATE,\r\n    idLivre VARCHAR(30),\r\n    email VARCHAR(30),\r\n    PRIMARY KEY (idLivre,email),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Avis (\r\n    idAvis INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateAvis DATE ,\r\n    text VARCHAR(30),\r\n    idLivre VARCHAR(30),\r\n    email VARCHAR(30),\r\n    PRIMARY KEY (idLivre,email),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Like (\r\n    idLike INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateLike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(30),\r\n    email VARCHAR(30),\r\n    PRIMARY KEY (idLivre,email),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE DisLike (\r\n    idDislike INT PRIMARY KEY AUTO_INCREMENT,\r\n    dateDislike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(30),\r\n    email VARCHAR(30),\r\n    PRIMARY KEY (idLivre,email),\r\n    FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCES Utilisateur(email)\r\n);\r\nALTER TABLE MyFavorite\r\nMODIFY COLUMN dateAjout DATE DEFAULT CURRENT_DATE;\r\nALTER TABLE idLivre \r\n\r\n\r\nINSERT INTO Livre (idLivre, titre, editeur, datePublication, prix)\r\nVALUES (&amp;#039;OFPPT_00001&amp;#039;, &amp;#039;Titre du livre&amp;#039;, &amp;#039;Editeur du livre&amp;#039;, &amp;#039;2024-05-10&amp;#039;,140 DH;\r\n\r\nINSERT INTO Utilisateur (email, nom, prenom, password, tel)\r\nVALUES (&amp;#039;utilisateur@example.com&amp;#039;, &amp;#039;Nom&amp;#039;, &amp;#039;Prenom&amp;#039;, &amp;#039;motdepasse&amp;#039;, &amp;#039;0666241422&amp;#039;);\r\n\r\nINSERT INTO MyFavorite (idLivre, email)\r\nVALUES (&amp;#039;OFPPT_00001&amp;#039;, &amp;#039;utilisateur@example.com&amp;#039;);\r\n\r\nINSERT INTO Avis (dateAvis, text, idLivre, email)\r\nVALUES (&amp;#039;2024-05-10&amp;#039;, &amp;#039;text sur le livre&amp;#039;, &amp;#039;OFPPT_00001&amp;#039;, &amp;#039;utilisateur@example.com&amp;#039;);\r\n\r\nINSERT INTO Like (dateLike, text, idLivre, email)\r\nVALUES (&amp;#039;2024-05-10&amp;#039;, &amp;#039;like sur le livre&amp;#039;, &amp;#039;OFPPT_00001&amp;#039;, &amp;#039;utilisateur@example.com&amp;#039;);\r\n\r\nINSERT INTO DisLike (dateDislike, text, idLivre, email)\r\nVALUES (&amp;#039;2024-05-10&amp;#039;, &amp;#039;dislike sur le livre&amp;#039;, &amp;#039;OFPPT_00001&amp;#039;, &amp;#039;utilisateur@example.com&amp;#039;);\r\n\r\n\r\n\r\n\r\n', NULL),
(1005, 'D689477', 401, 'CREATE DATABASE ofppt;\r\nUSE ofppt;\r\nCREATE TABLE livre(\r\nidlivre VARCHAR(50) PRIMARY KEY,\r\ntitre VARCHAR(50),\r\nediteur VARCHAR(50),\r\ndatepublication DATE,\r\nprix float\r\n)\r\nINSERT INTO livre VALUES (&#039;ofppt00001&#039;,&#039;antigon&#039;,&#039;ahmedsefroui&#039;,&#039;2024-01-01&#039;,12.3)\r\nCREATE TABLE utilisateur(\r\nemail VARCHAR(50) PRIMARY KEY,\r\nnom VARCHAR(50),\r\nprenom VARCHAR(50),\r\nPASSWORD VARCHAR(50),\r\ntel INT\r\n)\r\nINSERT INTO utilisateur VALUES (&#039;amine@gmail.com&#039;,&#039;amine&#039;,&#039;benjah&#039;,&#039;123@qw&#039;,070722222)\r\nCREATE TABLE myfavorite(\r\nidfav INT ,\r\ndateajout DATE,\r\nidlivre VARCHAR(50),\r\nemail VARCHAR(50),\r\nPRIMARY KEY (idfav,idlivre,email),\r\nFOREIGN KEY (idlivre) REFERENCES livre(idlivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n)\r\nINSERT INTO myfavorite(idfav,idlivre,email) VALUES (1,&quot;ofppt00001&quot;,&#039;amine@gmail.com&#039;)\r\nCREATE TABLE avis(\r\nidavis INT,\r\ndateavis DATE,\r\nTEXT VARCHAR(50),\r\nidlivre VARCHAR(50),\r\nemail VARCHAR(50),\r\nPRIMARY KEY (idavis,idlivre,email),\r\nFOREIGN KEY (idlivre) REFERENCES livre(idlivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email) \r\n)\r\nINSERT INTO avis VALUES (101,&#039;2022-01-01&#039;,&#039;text&#039;,&#039;ofppt00001&#039;,&#039;amine@gmail.com&#039;)\r\nCREATE TABLE likes(\r\nidlike INT,\r\ndatelike DATE,\r\nTEXT VARCHAR(50),\r\nidlivre VARCHAR(50),\r\nemail VARCHAR(50),\r\nPRIMARY KEY(idlike,idlivre,email),\r\nFOREIGN KEY (idlivre) REFERENCES livre(idlivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n)\r\nINSERT INTO likes VALUES (201,&#039;2021-01-01&#039;,&#039;text&#039;,&#039;ofppt00001&#039;,&#039;amine@gmail.com&#039;)\r\nCREATE TABLE dislike(\r\nidislike INT,\r\ndatedislike DATE,\r\nTEXT VARCHAR(50),\r\nidlivre VARCHAR(50),\r\nemail VARCHAR(50),\r\nPRIMARY KEY (idislike,idlivre,email),\r\nFOREIGN KEY (idlivre) REFERENCES livre(idlivre),\r\nFOREIGN KEY (email) REFERENCES utilisateur(email)\r\n)\r\nINSERT INTO dislike VALUES (301,&#039;2019-01-01&#039;,&#039;text&#039;,&#039;ofppt00001&#039;,&#039;amine@gmail.com&#039;)\r\nALTER TABLE livre ADD CONSTRAINT check_id CHECK (idlivre LIKE &quot;Ofppt_____&quot; );\r\nALTER TABLE myfavorite MODIFY dateajout date default(CURDATE());\r\n', NULL),
(1006, 'DA102284', 401, 'CREATE DATABASE  My LibSchool ;\r\nUSE DATABASE My LibSchool;\r\n\r\n\r\nCREATE TABLE Utilisateur(\r\nemail VARCHAR (30) PRIMARY KEY ,\r\nNome VARCHAR (30),\r\nPrenom VARCHAR (30),\r\npasswords INT , \r\ntel INT \r\n\r\n);\r\nINSERT INTO Utilisateur(\r\nemail, \r\nNome ,\r\nPrenom ,\r\npasswords, \r\ntel)\r\nVALUES (\r\nVARCHAR (30) PRIMARY KEY\r\nVARCHAR (30),\r\nVARCHAR (30),\r\nINT ,\r\nINT \r\n);\r\n\r\nCREATE TABLE Livre (\r\nidLivre INT PRIMARY KEY AUTO_INCREMENT CHECK( LIKE &#039;OFPPT_%[0-9]{4}&#039;),\r\ntitle VARCHAR(30),\r\ndatePublication DATE ,\r\nprix FLOAT  \r\n\r\n);\r\nINSERT INTO Livre(\r\nidLivre, \r\ntitle ,\r\ndatePublication ,\r\nprix \r\n)\r\nVALUES (\r\nINT PRIMARY KEY AUTO_INCREMENT,\r\nVARCHAR (30),\r\nDATE,\r\nFLOAT  \r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT PRIMARY KEY AUTO_INCREMENT,\r\ndateAjout DATE DEFAULT(dateAjout) ,\r\nidLivre INT,\r\nemail VARCHAR (30)\r\n);\r\nALTER TABLE MyFavorite ADD CONSTRAINT cc FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE MyFavorite ADD CONSTRAINT cv FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\n\r\nINSERT INTO MyFavorite(\r\nidFav, \r\ndateAjout ,\r\nidLivre ,\r\nemail \r\n)\r\nVALUES (\r\nINT PRIMARY KEY AUTO_INCREMENT,\r\nDATE,\r\nINT,\r\nVARCHAR (30)  \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT PRIMARY KEY AUTO_INCREMENT,\r\ndateAvis DATE,\r\ntexte VARCHAR(30),\r\nidLivre INT,\r\nemail VARCHAR (30)\r\n);\r\nALTER TABLE Avis ADD CONSTRAINT cp FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Avis ADD CONSTRAINT ct FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nINSERT INTO Avis(\r\nidAvis, \r\ndateAvis ,\r\ntexte ,\r\nidLivre ,\r\nemail\r\n)\r\nVALUES (\r\nINT PRIMARY KEY AUTO_INCREMENT,\r\nDATE,\r\nVARCHAR (30) ,\r\nINT ,\r\nVARCHAR (30)\r\n \r\n);\r\n\r\n\r\nCREATE TABLE likes(\r\nidLike  INT PRIMARY KEY AUTO_INCREMENT,\r\ndateLike DATE,\r\ntexts VARCHAR(30),\r\nidLivre INT,\r\nemail VARCHAR (30)\r\n);\r\nALTER TABLE likes ADD CONSTRAINT pv FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE likes ADD CONSTRAINT pt FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nINSERT INTO likes(\r\nidLike, \r\ndateLike ,\r\ntexts ,\r\nidLivre ,\r\nidLivre,\r\nemail\r\n)\r\nVALUES (\r\nINT PRIMARY KEY AUTO_INCREMENT,\r\nDATE,\r\nVARCHAR (30) ,\r\nINT ,\r\nVARCHAR (30)\r\n \r\n);\r\n\r\n\r\nCREATE TABLE DisLikes(\r\nidDislike INT PRIMARY KEY AUTO_INCREMENT,\r\ndateDislike DATE,\r\ntexts VARCHAR(30),\r\nidLivre INT,\r\nemail VARCHAR (30)\r\n);\r\nALTER TABLE DisLikes ADD CONSTRAINT ps FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE DisLikes ADD CONSTRAINT pf FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\n\r\nINSERT INTO DisLikes(\r\nidDislike, \r\ndateDislike ,\r\ntexts ,\r\ntexts ,\r\nidLivre,\r\nemail\r\n)\r\nVALUES (\r\nINT PRIMARY KEY AUTO_INCREMENT,\r\nDATE,\r\nVARCHAR (30) ,\r\nINT ,\r\nVARCHAR (30)\r\n \r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', NULL),
(1007, 'JM103258', 401, '--1\r\nCREATE DATABASE OFPPT ;\r\nUSE OFPPT;\r\n\r\n\r\n#Livre (idLivre, titre,editeur,datePublication,prix)\r\nCREATE TABLE Livre (\r\nidLivre INT ,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR (38),\r\ndatePublication DATE ,\r\nprix FLOAT \r\n);\r\n\r\n\r\n#Utilisateur (email,nom,prenom,password,tel)\r\nCREATE TABLE Utilisateur (\r\nemail INT ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR (38),\r\npassword VARCHAR(70),\r\ntel INT  \r\n);\r\n\r\n#MyFavorite (idFav ,dateAjout, #idLivre, #email)\r\nCREATE TABLE MyFavorite (\r\nidFav INT ,\r\ndateAjout DATE ,\r\nidLivre INT ,\r\nemail VARCHAR(70)\r\n);\r\n\r\n\r\n\r\n#Like (idLike,dateLike,text, #idLivre, #email)\r\nCREATE TABLE Like (\r\nidLike INT ,\r\ndateLike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n#Avis (idAvis,dateAvis,text, #idLivre, #email)\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT ,\r\ndateAvis DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n#DisLike (idDislike,dateDislike,text, #idLivre, #email)\r\nCREATE TABLE DisLike (\r\nidDislike INT ,\r\ndateDislike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n\r\n--2)\r\n\r\n--a)-\r\nCREATE TABLE Livre (\r\nidLivre INT PRIMARY KEY ,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR (38),\r\ndatePublication DATE ,\r\nprix FLOAT \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Utilisateur (\r\nemail INT PRIMARY KEY ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR (38),\r\npassword VARCHAR(70),\r\ntel INT  \r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT PRIMARY KEY ,\r\ndateAjout DATE ,\r\nidLivre INT ,\r\nemail VARCHAR(70)\r\n);\r\n\r\n\r\n\r\n\r\nCREATE TABLE Like (\r\nidLike INT PRIMARY KEY ,\r\ndateLike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT PRIMARY KEY ,\r\ndateAvis DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n\r\nCREATE TABLE DisLike (\r\nidDislike INT PRIMARY KEY ,\r\ndateDislike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR \r\n);\r\n\r\n\r\n--b)\r\nCREATE TABLE Livre (\r\nidLivre INT PRIMARY KEY ,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR (38),\r\ndatePublication DATE ,\r\nprix FLOAT \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Utilisateur (\r\nemail INT PRIMARY KEY ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR (38),\r\npassword VARCHAR(70),\r\ntel INT  \r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT PRIMARY KEY ,\r\ndateAjout DATE ,\r\nidLivre INT ,\r\nemail VARCHAR(70),\r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre) ,\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email) \r\n);\r\n\r\n\r\n\r\n\r\nCREATE TABLE Like (\r\nidLike INT PRIMARY KEY ,\r\ndateLike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES MyFavorite (idLivre) ,\r\nFOREIGN KEY (email) REFERENCES MyFavorite (email) \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT PRIMARY KEY ,\r\ndateAvis DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES LIKE (idLivre) ,\r\nFOREIGN KEY (text) REFERENCES LIKE (TEXT) ,\r\nFOREIGN KEY (email) REFERENCES LIKE (email) \r\n);\r\n\r\n\r\nCREATE TABLE DisLike (\r\nidDislike INT PRIMARY KEY ,\r\ndateDislike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT ,\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES Avis (idLivre) ,\r\nFOREIGN KEY (text) REFERENCES Avis (TEXT) ,\r\nFOREIGN KEY (email) REFERENCES Avis (email) \r\n);\r\n\r\n--c)\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT PRIMARY KEY ,\r\ndateAjout DATE DEFAULT(CURDATE()),\r\nidLivre INT ,\r\nemail VARCHAR(70),\r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre) ,\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email) \r\n);\r\n\r\n--d)\r\n\r\nCREATE TABLE Livre (\r\nidLivre INT PRIMARY KEY CHECK (idLivre LIKE &amp;quot; OFPPT%_%____&amp;quot; ),\r\ntitre VARCHAR(30),\r\nediteur VARCHAR (38),\r\ndatePublication DATE ,\r\nprix FLOAT \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Utilisateur (\r\nemail INT PRIMARY KEY ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR (38),\r\npassword VARCHAR(70),\r\ntel INT  \r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT PRIMARY KEY ,\r\ndateAjout DATE DEFAULT(CURDATE()),\r\nidLivre INT CHECK (idLivre LIKE &amp;quot; OFPPT%_%____&amp;quot; ),\r\nemail VARCHAR(70),\r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre) ,\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email) \r\n);\r\n\r\n\r\n\r\n\r\nCREATE TABLE Like (\r\nidLike INT PRIMARY KEY ,\r\ndateLike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT CHECK (idLivre LIKE &amp;quot; OFPPT%_%____&amp;quot; ),\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES MyFavorite (idLivre) ,\r\nFOREIGN KEY (email) REFERENCES MyFavorite (email) \r\n);\r\n\r\n\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT PRIMARY KEY ,\r\ndateAvis DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT CHECK (idLivre LIKE &amp;quot; OFPPT%_%____&amp;quot; ),\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES LIKE (idLivre) ,\r\nFOREIGN KEY (text) REFERENCES LIKE (TEXT) ,\r\nFOREIGN KEY (email) REFERENCES LIKE (email) \r\n);\r\n\r\n\r\nCREATE TABLE DisLike (\r\nidDislike INT PRIMARY KEY ,\r\ndateDislike DATE ,\r\ntext VARCHAR(45) ,\r\nidLivre INT CHECK (idLivre LIKE &amp;quot; OFPPT%_%____&amp;quot; ),\r\nemail VARCHAR ,\r\nFOREIGN KEY (idLivre) REFERENCES Avis (idLivre) ,\r\nFOREIGN KEY (text) REFERENCES Avis (TEXT) ,\r\nFOREIGN KEY (email) REFERENCES Avis (email) \r\n);\r\n\r\n\r\n--3)\r\nINSERT INTO Livre (idLivre, titre,editeur,datePublication,prix) VALUE (&#039;OFPPT-DD102&#039;,&#039;titre1&#039;,&#039;editeur&#039;,&#039;05-04-2024&#039;,4000);\r\nINSERT INTO Utilisateur (email,nom,prenom,password,tel) VALUE (&#039;anasbayaqour@gmail.com&#039;,&#039;bayaqour&#039;,&#039;anas&#039;,&#039;u12@12&#039;,0685939463);\r\nINSERT INTO MyFavorite (idFav ,dateAjout, idLivre,email) VALUE (125,&#039;02-04-2024&#039;,&#039;OFPPT-GE102&#039;,&#039;abdellah@gmail.com&#039;);\r\nINSERT INTO Avis (idAvis,dateAvis,text, idLivre, email) VALUE (126,&#039;02-05-2024&#039;,&#039;text1&#039;,&#039;OFPPT-GE203&#039;,&#039;zakaria@gmail.com&#039;);\r\nINSERT INTO Like (idLike,dateLike,text, idLivre, email) VALUE (154,&#039;11-03-2024&#039;,&#039;text2&#039;,&#039;OFPPT-DD203E&#039;,&#039;ayoub@gmail.com&#039;);\r\nINSERT INTO DisLike (idDislike,dateDislike,text, idLivre, email) VALUE (&#039;09-04-2024&#039;,&#039;02-03-2024&#039;,&#039;text3&#039;,&#039;OFPPT-DD205E&#039;,&#039;amin@gmail.com&#039;);\r\n', NULL),
(1008, 'Z673521', 401, 'CREATE DATABASE  libSchool;\r\nUSE libschool;\r\n\r\n\r\ncreate table Livre (\r\n	idLivre VARCHAR(11),\r\n	titre VARCHAR(255),\r\n	editeur VARCHAR(255),\r\n	datePublication date,\r\n	prix float\r\n);\r\n\r\ncreate table Utilisateur (\r\n	email VARCHAR(255), \r\n	nom VARCHAR(255),\r\n	prenom VARCHAR(255),\r\n	PASSWORD VARCHAR(255),\r\n	tel VARCHAR(255)\r\n);\r\n\r\ncreate table MyFavorite (\r\n	idFav VARCHAR(11),\r\n	dateAjout DATE, \r\n	idLivre VARCHAR(11), \r\n	email VARCHAR(255)\r\n);\r\n\r\n\r\ncreate table Avis (\r\n	idAvis VARCHAR(11),\r\n	dateAvis date,\r\n	text text,\r\n	idLivre VARCHAR(11), \r\n	email VARCHAR(255)\r\n);\r\n\r\ncreate table likes (\r\n	idLike VARCHAR(11),\r\n	dateLike date,\r\n	TEXT text,\r\n	idLivre VARCHAR(11),\r\n	email VARCHAR(255)\r\n);\r\n\r\n\r\ncreate table DisLike (\r\n	idDislike VARCHAR(255),\r\n	dateDislike date,\r\n	TEXT TEXT,\r\n	idLivre VARCHAR(11),\r\n	email VARCHAR(255)\r\n);', 6);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(1009, 'DB31001', 401, 'create database OFPPT;\r\nuse OFPPT;\r\ncreate table livre(\r\nidlivre varchar(30),\r\ntitre varchar(30),\r\nedeteure varchar(30),\r\ndatepublication date,\r\nprix float\r\n);\r\ninsert INTO livre values( 123, livre2,lina,2003-06-01,120DH);\r\ncreate table utilisateur(\r\n email varchar(30),\r\n nom varchar(30), \r\n prenom varchar(30),\r\n passeword varchar(30),\r\n tel int\r\n\r\n);\r\ninsert INTO utilisateur values(&quot; 123@art&quot;, IMAN,SKHEMAN,AZER,12345678);\r\n\r\n\r\n\r\n\r\n\r\ncreate table myfavorite(\r\nidfav int ,\r\ndateajout date,\r\nforeign key (idlivre) references livre(idlivre),\r\n\r\nforeign key (email) references utilisateur(email)\r\n);\r\n\r\ninsert INTO myfavorit values(1234, 2024-06-08,123,&quot;123@art&quot;);\r\n\r\n\r\n\r\ncreate table avis(\r\nidavis int,\r\ndateavis date,\r\ntexte varchar(30),\r\nforeign key (idlivre) references livre(idlivre),\r\n\r\nforeign key (email) references utilisateur(email)\r\n);\r\n\r\ninsert INTO avis values(12345, 2023-04-12,TEXTEE,123,&quot;123@art&quot;);\r\n\r\ncreate table likes (\r\nidlike int,\r\ndatelike date,\r\ntexte varchar(30),\r\nforeign key (idlivre) references livre(idlivre),\r\n\r\nforeign key (email) references utilisateur(email)\r\n\r\n);\r\n\r\n\r\n\r\n\r\n\r\ninsert INTO likes values(12345,2012-07-01,TEXTEA,123,&quot;123@art&quot;);\r\ncreate table dislike (\r\niddislike int,\r\ndatedislike date,\r\ntexte varchar(30),\r\nforeign key (idlivre) references livre(idlivre),\r\n\r\nforeign key (email) references utilisateur(email)\r\n\r\n);\r\n\r\ninsert INTO dislike values(56788,2024-12-07,TEXTEb,123,&quot;123@art&quot;);\r\nalter table  livre add idlivre int primary key; \r\nalter table  utulisateur add nom varchar(30) primary key;\r\nalter table  myfavorite add idfav int primary key;  \r\nalter table  avis add idavis int primary key;\r\nalter table  likes add idlikes int primary key; \r\nalter table  dislikes add iddislike int primary key;\r\nalter table myfavorite add dateajou date default(dateajou=curdate)  ;\r\nalter table livre add idlivre int default(idlivre=&quot;ofppt_0001%&quot;);', NULL),
(1010, 'CB346790', 401, 'CREATE DATABASE l’OFPPT;\r\nUSE l’OFPPT;\r\n\r\nCREATE TABLE Livre\r\n(\r\nidLivre INT PRIMARY KEY,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATE,\r\nprix float\r\n);\r\nINSERT INTO  Livre (idLivre,titre,editeur,datePublicatio,prix ) VALUES ;\r\n\r\n\r\nCREATE TABLE Utilisateur\r\n(\r\nemail INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npassword_u  VARCHAR(30), \r\ntel VARCHAR(30),\r\n);\r\nINSERT INTO Utilisateur ( email,nom,prenom,password,tel  ) VALUES ;\r\n\r\nCREATE TABLE MyFavorite \r\n(\r\nidFav INT PRIMARY KEY,\r\ndateAjout  DATE,\r\nFOREIGN KEY (idLivre) REFERENCES  Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES   Utilisateur(email)\r\n);\r\nINSERT INTO  MyFavorite( idFav ,dateAjout,prenom,password,tel  ) VALUES ;\r\n\r\nCREATE TABLE Avis\r\n(\r\nidAvis INT PRIMARY KEY,\r\ndateAvis  DATE,\r\nTEXT_Avis VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES  Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES   Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Like\r\n(\r\nidLike INT PRIMARY KEY,\r\ndateLike  DATE,\r\nTEXT_like VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES  Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES   Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE DisLike\r\n(\r\nidDislike INT PRIMARY KEY,\r\ndateDislike  DATE,\r\nTEXT_DisLike VARCHAR(30),\r\nFOREIGN KEY (idLivre) REFERENCES  Livre(idLivre),\r\nFOREIGN KEY (email) REFERENCES   Utilisateur(email)\r\n);\r\n', NULL),
(1011, 'CB346790', 402, 'a) SELECT DISTINCT idLike FROM dateLike WHERE TEXT_like  IN (SELECT idLivre FROM email WHERE );\r\n SELECT DISTINCT idDislike FROM dateDislike WHERE DisLike  IN (SELECT idLivre FROM email WHERE );\r\n', NULL),
(1012, 'DA106939', 402, '-- 6 a\r\nSELECT COUNT(*) FROM Like AND DisLike ;\r\n\r\nSELECT MAX(idLike) FROM Like\r\nINNER JOIN Livre;\r\n\r\nSELECT * FROM  Avis\r\nINNER JOIN Utilisateur \r\nWHERE Avis.email = utilisateur.email\r\nGROUP BY Avis;\r\n\r\nSELECT MIN(idAvis) FROM LIKE;\r\nINNER JOIN Livre;\r\n\r\nSELECT password_U FROM Utilisateur\r\nWHERE password_U LIKE = &amp;#039;[A-Z][a-z]&amp;#039;;\r\n\r\nSELECT * FROM Livre, Like\r\nWHERE idLike = idDisLike', NULL),
(1013, 'CI2249', 401, 'CREATE DATABASE plateforme;\r\n\r\nUSE plateforme;\r\n\r\nCREATE TABLE livre(\r\nidlivre INT,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatepublication DATE,\r\nprix FLOAT\r\n);\r\n\r\n\r\nCREATE TABLE utilisateur(\r\nemail VARCHAR(30),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npasword VARCHAR(30),\r\ntel INT \r\n);\r\n\r\nCREATE TABLE Myfavourite(\r\nidFav INT,\r\ndateajout DATE\r\n);\r\n\r\nCREATE TABLE avis(\r\nidavis INT,\r\ndateavis DATE,\r\ntexts VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE likes(\r\nidlike INT,\r\ndatelike DATE,\r\ntexts VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE dislike(\r\nidDislike INT,\r\ntexts VARCHAR(30)\r\n);\r\n\r\nALTER TABLE myfavourite ADD CONSTRAINT PRIMARY KEY(idfav),\r\nALTER TABLE livre ADD CONSTRAINT PRIMARY KEY(idlivre);\r\nALTER TABLE utilisateur ADD CONSTRAINT PRIMARY KEY(email);\r\nALTER TABLE  avis ADD CONSTRAINT PRIMARY KEY(idavis);\r\nALTER TABLE likes ADD CONSTRAINT PRIMARY KEY(idlike);\r\nALTER TABLE disilike ADD CONSTRAINT PRIMARY KEY(idDislike),\r\nALTER TABLE Myfavourite ADD COLUMN email (FOREIGN KEY (email) REFERENCES utilisateur(email));\r\nALTER TABLE Myfavourite ADD COLUMN idlivre (FOREIGN KEY (idlivre) REFERENCES livre(idlivre));\r\nALTER TABLE avis ADD COLUMN idlivre (FOREIGN KEY (idlivre) REFERENCES livre(idlivre));\r\nALTER TABLE Myfavourite ADD COLUMN idlivre (FOREIGN KEY (idlivre) REFERENCES livre(idlivre));\r\nALTER TABLE avis ADD COLUMN email (FOREIGN KEY (email) REFERENCES utilisateur(idlivre));\r\nALTER TABLE likes ADD COLUMN email (FOREIGN KEY (email) REFERENCES utilisateur(email));\r\nALTER TABLE likes ADD COLUMN idlivre (FOREIGN KEY (idlivre) REFERENCES livre(idlivre));\r\nALTER TABLE dislike ADD COLUMN email (FOREIGN KEY (email) REFERENCES utilisateur(email));\r\nALTER TABLE dislike ADD COLUMN idlivre (FOREIGN KEY (idlivre) REFERENCES livre(idlivre));\r\n\r\n\r\nALTER TABLE livre ADD CONSTRAINT CHECK (idlivre LIKE &#039;OFPPT_00001&#039;);\r\nALTER TABLE Myfavourite add constraint default (dateajout=CURRENT_DATE);\r\nINSERT INTO utilisateur(email,nom,prenom,pasword,tel) VALUES\r\n  (&#039;amine@gmail.com&#039;,&#039;amine&#039;,&#039;arheche&#039;,&#039;Amine123&#039;,&#039;0615253647&#039;),\r\nINSERT INTO livre(idlivre,titre,editeur,datepublication,prix) VALUES\r\n(&#039;143&#039;,&#039;les_miserable&#039;,&#039;jhon&#039;,&#039;15-04-2022&#039;,&#039;150&#039;,)\r\nINSERT INTO myfavourite(idfav,dateajuot,idlivre,email) VALUES\r\n(&#039;857&#039;,&#039;12-05-2023&#039;,&#039;&#039;,&#039;&#039;)\r\nINSERT INTO avis(idavis,dateavis,idlivre,email) VALUES\r\n(&#039;985&#039;,&#039;12-05-2023&#039;,&#039;&#039;,&#039;&#039;)\r\nINSERT INTO likes(idlike,datelike,idlivre,email) VALUES\r\n(&#039;195&#039;,&#039;17-05-2023&#039;,&#039;&#039;,&#039;&#039;)\r\nINSERT INTO dislike(idDislike,datedislike,idlivre,email) VALUES\r\n(&#039;362&#039;,&#039;10-07-2023&#039;,&#039;&#039;,&#039;&#039;)\r\n\r\n', NULL),
(1014, 'DA107633', 402, 'c =====\r\nSELECT * FROM Avis\r\nINNER JOIN utilisateur \r\nHAVING Avis.email = utilisateur.email\r\nGROUP BY idAvis \r\nORDER BY ASC LIMIT 1 ;\r\n\r\n\r\nb=====\r\nSELECT * FROM likes\r\nINNER JOIN livre \r\nwhere likes.idLivre = livre.idLivre\r\nGROUP BY titre \r\nORDER BY ASC LIMIT 1 ;\r\n\r\na=====\r\nALTER LIKEs COUNT(idLike);\r\nALTER DisLikes COUNT(idDisLike);\r\n\r\n\r\nd=======\r\nSELECT * FROM LIVRE\r\nLEFT JOIN LIKES \r\nWHERE  livre.idLivre  NOT IN  likes.idLivre ;\r\n\r\n\r\nf)========\r\nSELECT * FROM likes\r\nINNER JOIN Dislikes  \r\nwhere likes.idLivre = Dislikes.idLivre\r\nGROUP BY idlivre  \r\nHAVING COUNT(likes) = COUNT(dislikes);\r\n\r\ne======\r\nSELECT * FROM utilisateur\r\n  \r\nwhere email LIKE &#039;[a-z]/[A-Z]&#039;\r\n', NULL),
(1015, 'CI2877', 401, 'CREATE TABLE Livre (\r\n    idLivre VARCHAR(20) PRIMARY KEY,\r\n    titre VARCHAR(20),\r\n    editeur VARCHAR(20),\r\n    datePublication DATE,\r\n    prix DECIMAL(10,2)\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\n    email VARCHAR(50) PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    password VARCHAR(50),\r\n    tel VARCHAR(10)\r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\n    idFav INT PRIMARY KEY,\r\n    dateAjout DATE DEFAULT CURRENT_DATE,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(50),\r\n    FOREIGN KEY (idLivre) REFERENCE Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCE Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Avis (\r\n    idAvis INT PRIMARY KEY,\r\n    dateAvis DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(50),\r\n    FOREIGN KEY (idLivre) REFERENCE Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCE Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE Like (\r\n    idLike INT PRIMARY KEY,\r\n    dateLike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR (50),\r\n    FOREIGN KEY (idLivre) REFERENCE Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCE Utilisateur(email)\r\n);\r\n\r\nCREATE TABLE DisLike (\r\n    idDislike INT PRIMARY KEY,\r\n    dateDislike DATE,\r\n    text TEXT,\r\n    idLivre VARCHAR(20),\r\n    email VARCHAR(100),\r\n    FOREIGN KEY (idLivre) REFERENCE Livre(idLivre),\r\n    FOREIGN KEY (email) REFERENCE Utilisateur(email)\r\n);', NULL),
(1016, 'CI2877', 402, 'SELECT\r\n    (SELECT COUNT(*) FROM Like) AS like,\r\n    (SELECT COUNT(*) FROM DisLike) AS dislike;\r\n\r\n\r\nSELECT\r\n    (SELECT COUNT(*) FROM Like) AS like,\r\n    (SELECT COUNT(*) FROM DisLike) AS dislike;\r\n\r\nSELECT idLivre, COUNT(*) AS total_like\r\nFROM Like\r\nGROUP BY idLivre\r\nORDER BY total_like DESC\r\nLIMIT 1;\r\n\r\nSELECT idLivre\r\nFROM Livre\r\nWHERE idLivre NOT IN (SELECT idLivre FROM Like);\r\n', NULL),
(1017, 'DA105587', 401, '__5\r\n__1\r\nCREATE DATABASE  plateforme ,\r\nUSE plateforme  ,\r\n\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR (30) NOT NULL ,\r\nnom VARCHAR (30),\r\nprenom VARCHAR (30),\r\nPASSWORDD VARCHAR (30) ,\r\ntel VARCHAR (30)\r\n);\r\n\r\n\r\nCREATE TABLE Livre (\r\nidLivre TEXT  NOT NULL  , \r\ntitre VARCHAR (30),\r\nediteur VARCHAR (30),\r\ndatePublication DATE ,\r\nprix FLOAT \r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav INT  NOT NULL  ,\r\ndateAjout DATE , \r\nidLivre TEXT ,\r\nemail VARCHAR (30)\r\n );\r\n \r\n \r\n \r\n CREATE TABLE Avis (\r\n idAvis INT  NOT NULL ,\r\n dateAvis DATE ,\r\n TEXTT TEXT ,\r\n idLivre TEXT , \r\n email VARCHAR (30)\r\n );\r\n \r\n \r\n CREATE TABLE Likes  (\r\n idLike INT  NOT NULL ,\r\n dateLike DATE ,\r\n TEXTT TEXT ,\r\n idLivre TEXT ,\r\n email VARCHAR (30)\r\n );\r\n \r\n \r\n CREATE TABLE DisLike (\r\n idDislike INT  NOT NULL ,\r\n dateDislike DATE ,\r\n TEXTT TEXT ,\r\n idLivre TEXT ,\r\n email VARCHAR (30)\r\n );\r\n\r\n__2\r\n__a\r\nALTER TABLE Utilisateur ADD CONSTRAINT pry PRIMARY KEY (email);\r\nALTER TABLE Livre ADD CONSTRAINT pry PRIMARY KEY (idLivre);\r\nALTER TABLE MyFavorite ADD CONSTRAINT pry PRIMARY KEY (idFav);\r\nALTER TABLE Avis ADD CONSTRAINT pry PRIMARY KEY (idAvis);\r\nALTER TABLE Likes ADD CONSTRAINT pry PRIMARY KEY (idLike);\r\nALTER TABLE DisLike ADD CONSTRAINT pry PRIMARY KEY (idDislike)\r\n\r\n__b\r\nALTER TABLE MyFavorite \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre)\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\n\r\n\r\nALTER TABLE Avis \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre)\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\n\r\n\r\nALTER TABLE Likes \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre)\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\n\r\n\r\nALTER TABLE DisLike \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre)\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\n__c\r\nALTER TABLE MyFavorite\r\nADD CONSTRAINT dt_aj SET DEFAULT courantedate;\r\n\r\n\r\n__d\r\nALTER TABLE Livre\r\nADD CONSTRAINT form CHECK  (idLivre like &#039;%[OFPPT][_][0-9]{5}%&#039; );\r\n', NULL),
(1018, 'DA105587', 402, '\r\n__6\r\n__a\r\nALTER TABLE Likes\r\nCOUNT(Likes)\r\n\r\nALTER TABLE DisLike\r\nCOUNT(DisLike)\r\n\r\n__b\r\nSELECT *\r\nFROM DATABASE MAX(COUNT(Likes))\r\n\r\n__c\r\nSELECT *\r\nFROM DATABASE MAX(avis)\r\n\r\n__d\r\n\r\nSELECT *\r\nFROM  Livre \r\nCOUNT(Likes)=0 AND COUNT(DisLike)=0\r\n\r\n__e\r\n\r\nSELECT *\r\nFROM  Utilisateur \r\nCHECK  (PASSWORDD LIKE &#039;%[a-b][A-B]%&#039; );\r\n\r\n__f\r\nSELECT *\r\nFROM  Livre \r\nCOUNT(Likes)=COUNT(DisLike)\r\n  \r\n  ', NULL),
(1019, 'SH219025', 402, 'SELECT COUNT(*) FROM Like AS likes,\r\nSELECT COUNT(*) FROM DisLike AS dislikes;\r\n\r\nSELECT idLivre, COUNT(*) AS plus_likes\r\nFROM Like\r\nGROUP BY idLivre\r\nORDER BY plus_likes DESC\r\nLIMIT 1;\r\n\r\nSELECT idLivre, COUNT(*) AS non_likes\r\nFROM  DisLike\r\nGROUP BY idLivre\r\nORDER BY non_likes DESC \r\n;', NULL),
(1020, 'D689477', 402, 'SELECT * FROM likes,dislike\r\n\r\nSELECT MAX(livre.idlivre) FROM livre\r\nINNER JOIN likes\r\nON likes.idlivre = livre.idlivre\r\n\r\nSELECT utilisateur.nom,utilisateur.prenom,utilisateur.PASSWORD,utilisateur.tel, MAX(avis.idavis) FROM avis\r\nLEFT JOIN utilisateur \r\nON avis.email = utilisateur.email \r\nGROUP BY utilisateur.nom,utilisateur.prenom,utilisateur.PASSWORD,utilisateur.tel\r\n\r\n\r\nSELECT livre.* FROM livre\r\nINNER JOIN likes\r\nON livre.idlivre != likes.idlivre\r\nINNER JOIN dislike\r\nON livre.idlivre != dislike.idlivre\r\nSELECT livre.* FROM livre \r\nINNER JOIN likes \r\nON likes.idlivre = livre.idlivre \r\nINNER JOIN dislike \r\nON dislike.idlivre = livre.idlivre\r\nWHERE dislike.idislike = likes.idlike\r\nSELECT * FROM utilisateur \r\nWHERE PASSWORD RLIKE &#039;[A-Z][a-z]&#039;\r\n', NULL),
(1021, 'DA107236', 402, ' a) SELECT\r\n    (SELECT COUNT(*) FROM Like) AS nombre_like,\r\n    (SELECT COUNT(*) FROM DisLike) AS nombre_dislike;\r\n\r\nc) SELECT email, COUNT(*) AS nombre_avis FROM Avis GROUP BY email ORDER BY nombre_avis DESC;\r\n\r\nb) SELECT idLivre, COUNT(*) AS nombre_likes FROM Like GROUP BY idLivre ORDER BY nombre_likes ;\r\n\r\nd) SELECT idLivre, titre FROM Livre WHERE idLivre NOT IN (SELECT idLivre FROM Like);\r\n\r\ne) SELECT email, nom, prenom FROM Utilisateur WHERE PASSWORD &amp;#039;[a-zA-Z]&amp;#039;;\r\n', NULL),
(1022, 'VA154626', 401, '-- 1\r\nCREATE DATABASE My_LibSchool;\r\nUSE My_LibSchool;\r\n\r\nCREATE TABLE livre (\r\nidLivre INT ,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATE ,\r\nprix float\r\n);\r\n\r\n\r\nCREATE TABLE Utilisateur(\r\nemail VARCHAR(30),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npassworde VARCHAR(30),\r\ntel VARCHAR(30)\r\n);\r\n\r\n\r\nCREATE TABLE MyFavorite(\r\nidFav INT ,\r\ndateAjout DATE ,\r\nidLivre INT ,\r\nemail VARCHAR(30)\r\n);\r\n\r\n\r\nCREATE TABLE Avis(\r\nidAvis INT ,\r\ndateAvis DATE ,\r\ntexte VARCHAR(30),\r\nidLivre INT ,\r\nemail VARCHAR(30)\r\n);\r\n\r\n\r\nCREATE TABLE Likes(\r\nidLike INT ,\r\ndateLike DATE ,\r\ntexte VARCHAR(30),\r\nidLivre INT ,\r\nemail VARCHAR(30)\r\n);\r\n\r\n\r\nCREATE TABLE DisLike(\r\nidDislike INT ,\r\ndateDislike DATE ,\r\ntexte VARCHAR(30),\r\nidLivre INT , \r\nemail VARCHAR(30)\r\n);\r\n\r\n-- a \r\nALTER TABLE livre ADD CONSTRAINT PRIMARY KEY (idLivre);\r\nALTER TABLE Utilisateur ADD CONSTRAINT PRIMARY KEY (email);\r\nALTER TABLE MyFavorite ADD CONSTRAINT PRIMARY KEY (idFav);\r\nALTER TABLE Avis ADD CONSTRAINT PRIMARY KEY (idAvis);\r\nALTER TABLE Likes ADD CONSTRAINT PRIMARY KEY (idLike);\r\nALTER TABLE DisLike ADD CONSTRAINT PRIMARY KEY (idDislike);\r\n\r\n-- b\r\nALTER TABLE DisLike ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre (idLivre);\r\nALTER TABLE DisLike ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\n\r\nALTER TABLE Likes ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre (idLivre);\r\nALTER TABLE Likes ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\n\r\n\r\nALTER TABLE MyFavorite ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre (idLivre);\r\nALTER TABLE MyFavorite ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\n\r\nALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre (idLivre);\r\nALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\n\r\n-- c\r\nUPDATE myfavorite SET dateAjout = CURDATE();\r\n\r\n-- d\r\nALTER TABLE livre ADD CONSTRAINT lol CHECK idLivre = &#039;^[OFPPT]_4{0}1$&#039;\r\n-- 3\r\nINSERT INTO Utilisateur(email,nom,prenom,passworde,tel)\r\nVALUES (&#039;ataouil90@gmail.com&#039;,&#039;Taouil&#039;,&#039;Aboubakr&#039;,&#039;123@&#039;,&#039;0611936506&#039;)\r\n\r\nINSERT INTO Livre (idLivre, titre,editeur,datePublication,prix)\r\nVALUES (1,&#039;la vie en rose&#039;,&#039;marcos&#039;,&#039;10-10-2010&#039;,300)\r\n\r\nINSERT INTO Avis (idAvis,dateAvis,texte, idLivre, email)\r\nVALUES (1,&#039;10/06/2024&#039;,&#039;AAAAAAAAAAAA&#039;,1,&#039;ataouil90@gmail.com&#039;)\r\n\r\nINSERT INTO Likes (idLike,dateLike,texte, idLivre, email)\r\nVALUES (1,&#039;10/10/2030&#039;,&#039;BBBBBBBBBBB&#039;,1,&#039;ataouil90@gmail.com&#039;)\r\n\r\nINSERT INTO DisLike (idDislike,dateDislike,texte, idLivre, email)\r\nVALUES (1,&#039;01/05/2033&#039;,&#039;CCCCCC&#039;,1,&#039;ataouil90@gmail.com&#039;)\r\n\r\nINSERT INTO MyFavorite (idFav ,dateAjout, idLivre, email)\r\nVALUES (1,&#039;10/10/2002&#039;,1,&#039;ataouil90@gmail.com&#039;)', NULL),
(1023, 'JM103258', 402, '--4)\r\n#a -\r\n#like:\r\nSELECT COUNT(*) AS &#039;nb_Like&#039; \r\nFROM LIKE;\r\n\r\n#dislike:\r\nSELECT COUNT(*) AS &#039;nb_DisLike&#039; \r\nFROM DisLike;\r\n\r\n#b - \r\n\r\nSELECT * \r\nFROM livre  \r\nINNER JOIN LIKE \r\nON livre = LIKE ;\r\n\r\n\r\n#c - \r\n\r\nSELECT MAX(*)\r\nFROM utilisateur\r\nINNER JOIN Avis\r\nON utilisateur = Avis;\r\n\r\n\r\n#d -\r\n\r\nSELECT * \r\nFROM livre  \r\nINNER JOIN LIKE \r\nON livre != LIKE ;\r\n\r\n#e - \r\n\r\nSELECT PASSWORD \r\nFROM utilisateur \r\nWHERE password RLIKE (&#039;^[A-Z][a-z]+@[A-Z][a-z].%$&#039;);', NULL),
(1024, 'DA102626', 401, 'create database my_libschool;\r\nuse  my_libschool;\r\ncreate table livre(\r\nidlivre  int primary key,\r\ntitre varchar(30),\r\nediteur varchar(30),\r\ndatePBULICATION DATE default(2024-05-10),\r\nprix int\r\n\r\n);\r\ncreate table utilisateur(\r\nemail varchar (30) primary key,\r\nnom varchar(30),\r\nprenom varchar(30),\r\npassword  varchar(30),\r\ntel int\r\n);\r\ncreate table myfavorite(\r\nidfav int primary key ,\r\ndateajout date default(2024-05-10),\r\nforeign key (idlivre)references livre(idlivre),\r\nidliver int ,\r\nforeign key (email) references utilisateur (email),\r\nemail varchar(30)\r\n\r\n);\r\ncreate table avis (\r\nidavis int primary key ,\r\ndateavis date default(2024-05-10),\r\ntext varchar (30),\r\nforeign key (idlivre) references myfavorite(idlivre),\r\nidliver int,\r\nforeign key (email) references utilisateur (email),\r\nemail varchar(30)\r\n\r\n);\r\ncreate table likes(\r\nidlikes int primary key ,\r\ndatelike date default(2024-05-10),\r\ntext varchar(30),\r\nforeign key (idlivre) references myfavorite(idlivre),\r\nidliver int,\r\nforeign key (email) references utilisateur (email),\r\nemail varchar(30)\r\n);\r\ncreate table dislike(\r\niddislike int primary key,\r\ndatedislike date default(2024-05-10),\r\ntext varchar(30),\r\nforeign key (idlivre) references myfavorite(idlivre),\r\nidliver int,\r\nforeign key (email) references utilisateur (email),\r\nemail varchar(30)\r\n\r\n);\r\nalter table avis  add constraint ch foreign key(email) references avis(email)\r\nalter table like  add constraint ef  foreign key(email) references like(email)\r\nalter table myfavorite add constraint ze foreign key(email) references myfavorite(email)\r\nalter table dislike  add constraint xy foreign key(email) references dislike(email)\r\n\r\ninsert into livre(\r\nidlivre ,\r\ntitre,\r\nediteur ,\r\ndatePBULICATION ,\r\nprix \r\n\r\n\r\n)values(\r\nint primary key,\r\nvarchar(30),\r\n varchar(30),\r\n DATE default(2024-05-10),\r\n int)\r\n', NULL),
(1025, 'DA102284', 402, 'SELECT COUNT(idLike) FROM likes;\r\nSELECT COUNT(idDislike) FROM DisLikes;\r\n\r\n\r\nSELECT idLivre, MAX(COUNT(idLike)) FROM likes\r\nINNER JOIN livers\r\nON idlivre.livres = idlivre.likes\r\nGROUP BY idLivre\r\nORDER BY MAX(COUNT(idLike)) DESC ;\r\n\r\n\r\nSELECT MAX (idAvis) FROM Avis;\r\n\r\n\r\n\r\nSELECT idlivre from livers\r\nWHERE idLivre NOT IN (SELECT idLike FROM likes ),\r\n\r\nSELECT idDislike,idLike FROM likes\r\nLEFT  JOIN livers\r\nON idDislike.DisLikes = idDislike.likes\r\nGROUP BY idLivre\r\nHAVING idDislike=idLike ;\r\n', NULL),
(1026, 'DA104711', 402, 'SELECT COUNT(*) FROM likes ;\r\nSELECT COUNT(*) FROM dislike\r\n\r\nSELECT idLivre, titre,editeur,date_pub,prix FROM livre\r\nINNER JOIN likes  \r\nUSING(idLivre)\r\nGROUP BY idLikes\r\nhaving MAX(idLikes)\r\n\r\n\r\nSELECT email,nom,prenom,pasword,tel FROM Utilisateur \r\nINNER JOIN Avis  \r\nUSING(email)\r\nGROUP BY idAvis\r\nhaving MAX(idAvis)\r\n\r\nSELECT idLivre, titre,editeur,date_pub,prix FROM livre\r\nWHERE idLivre NOT IN (SELECT  idLivre FROM likes )\r\n\r\n\r\nSELECT * FROM utilisateur \r\nWHERE pasword RLIKE &amp;#039;[a-zA-Z]&amp;#039;\r\n\r\n\r\nSELECT * FROM livre\r\nINNER JOIN likes  \r\nUSING(idLivre)\r\nINNER JOIN DisLike  \r\nUSING(idLivre)\r\n\r\nwhere COUNT(idLikes) = COUNT(idDislike) \r\n\r\n\r\n', 10),
(1027, 'DA104864', 401, 'CREATE database My_LibSchool2 ;\r\nUSE My_LibSchool2 ;\r\n\r\nDROP TABLE Livre\r\ncreate table Livre (\r\nidLivre VARCHAR(30),\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(100),\r\ndatePublication DATE,\r\nprix FLOAT\r\n);\r\n\r\ncreate table Utilisateur (\r\nemail VARCHAR(100),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nPASSWORD VARCHAR(250),\r\ntel int\r\n);\r\nDROP TABLE MyFavorite\r\ncreate table MyFavorite (\r\nidFav INT,\r\ndateAjout DATE,\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(100)\r\n);\r\nDROP TABLE Avis\r\ncreate table Avis (\r\nidAvis INT,\r\ndateAvis DATE,\r\nTEXT TEXT(1000),\r\nidLivre VARCHAR(30), \r\nemail VARCHAR(100));\r\nDROP TABLE LIKES\r\ncreate table LIKES (\r\nidLike INT,\r\ndateLike DATE,\r\nTEXT TEXT(1000), \r\nidLivre VARCHAR(30),\r\nemail VARCHAR(100)\r\n);\r\nDROP TABLE DisLike\r\ncreate table DisLike (\r\nidDislike INT,\r\ndateDislike DATE ,\r\nTEXT TEXT(1000),\r\nidLivre VARCHAR(30),\r\nemail VARCHAR(100)\r\n);\r\n\r\na-\r\n\r\nALTER TABLE Livre ADD CONSTRAINT pk PRIMARY KEY (idLivre);\r\nALTER TABLE Utilisateur ADD CONSTRAINT pk2 PRIMARY KEY (email);\r\nALTER TABLE MyFavorite ADD CONSTRAINT pk3 PRIMARY KEY (idFav);\r\nALTER TABLE Avis ADD CONSTRAINT pk4 PRIMARY KEY (idAvis);\r\nALTER TABLE Likes ADD CONSTRAINT pk5 PRIMARY KEY (idLike);\r\nALTER TABLE DisLike ADD CONSTRAINT pk6 PRIMARY KEY (idDislike);\r\n\r\nb-\r\n\r\nALTER TABLE MyFavorite ADD CONSTRAINT pk1 FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE MyFavorite ADD CONSTRAINT pk2 FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis ADD CONSTRAINT pk3 FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Avis ADD CONSTRAINT pk4 FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Likes ADD CONSTRAINT pk5 FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE Likes ADD CONSTRAINT pk6 FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE DisLike ADD CONSTRAINT pk7 FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\nALTER TABLE DisLike ADD CONSTRAINT pk8 FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nc-\r\n\r\nALTER TABLE MyFavorite ALTER  dateAjout SET DEFAULT CURDATE();\r\n\r\nd- \r\n\r\nALTER TABLE Livre ADD CONSTRAINT ch_id CHECK(idLivre RLIKE &#039;^OFPPT_[0-9]{5}$&#039;);\r\nALTER TABLE Livre DROP CONSTRAINT ch_id\r\n3- \r\n\r\nINSERT INTO Livre(idLivre,titre,editeur,datePublication,prix) VALUES (&quot;OFPPT_00001&quot;,&quot;Titre1&quot;,&quot;editeur1&quot;,CURDATE(),100);\r\nINSERT INTO Utilisateur(email,nom,prenom,password,tel) VALUES (&quot;test@.com&quot;,&quot;omar&quot;,&quot;bouazzaoui&quot;,&quot;password&quot;,1234567890);\r\nINSERT INTO MyFavorite(idFav,dateAjout,idLivre,email) VALUES (1,CURDATE(),&quot;OFPPT_00001&quot;,&quot;test@.com&quot;);\r\nINSERT INTO Avis(idAvis,dateAvis,text,idLivre,email) VALUES (1,CURDATE(),&quot;text1&quot;,&quot;OFPPT_00001&quot;,&quot;test@.com&quot;);\r\nINSERT INTO Likes(idLike,dateLike,text) VALUES (1,CURDATE(),&quot;TEXT1&quot;);\r\nINSERT INTO DisLike(idDislike,dateDislike,text) VALUES (1,CURDATE(),&quot;TEXT1&quot;);\r\n', NULL),
(1028, 'CI2249', 402, 'SELECT COUNT(idlike) FROM likes;\r\nSELECT COUNT(idDilike) from dislike;\r\nSELECT * FROM livre HAVING (SELECT MAX(idlike) FROM likes)\r\nSELECT email FROM utilisateur HAVING (SELECT MAX(idavis) FROM avis)\r\nSELECT * FROM livre WHERE idlivre NOT IN likes\r\nSELECT * FROM utilisateur WHERE pasword LIKE &#039;[A-Z]&#039; OR &#039;[a-z]&#039;\r\nSELECT idlivre FROM livre \r\nWHERE (select idlike FROM likes\r\nINNER JOIN dislike\r\nON likes.idlike = dislike.idlike;)\r\n\r\n', NULL),
(1029, 'DA104864', 402, 'INSERT INTO Livre(idLivre,titre,editeur,datePublication,prix) VALUES (&quot;OFPPT_00001&quot;,&quot;Titre1&quot;,&quot;editeur1&quot;,CURDATE(),100);\r\nINSERT INTO Utilisateur(email,nom,prenom,password,tel) VALUES (&quot;test@.com&quot;,&quot;omar&quot;,&quot;bouazzaoui&quot;,&quot;password&quot;,1234567890);\r\nINSERT INTO MyFavorite(idFav,dateAjout,idLivre,email) VALUES (1,CURDATE(),&quot;OFPPT_00001&quot;,&quot;test@.com&quot;);\r\nINSERT INTO Avis(idAvis,dateAvis,text,idLivre,email) VALUES (1,CURDATE(),&quot;text1&quot;,&quot;OFPPT_00001&quot;,&quot;test@.com&quot;);\r\nINSERT INTO Likes(idLike,dateLike,text) VALUES (1,CURDATE(),&quot;TEXT1&quot;);\r\nINSERT INTO DisLike(idDislike,dateDislike,text) VALUES (1,CURDATE(),&quot;TEXT1&quot;);\r\n\r\n-----------\r\n4-a\r\n\r\nSELECT COUNT(idLike) AS like_counter FROM likes;\r\nSELECT COUNT(idDislike) AS dslike_counter FROM DisLike;\r\n\r\n4-b\r\n\r\nSELECT titre, count(idLike) FROM livre\r\nJOIN likes USING(idLivre)\r\nGROUP BY titre\r\n\r\n4-c\r\n\r\nSELECT nom, count(idAvis) FROM Utilisateur\r\nJOIN Avis USING(idAvis)\r\nGROUP BY nom\r\n\r\n4-d\r\n\r\nSELECT titre FROM livre liv\r\nright JOIN likes lik USING (idLivre)\r\nWHERE lik.idLivre = NULL\r\n\r\n4-e\r\n\r\nSELECT nom FROM utilisateur \r\nWHERE PASSWORD NOT RLIKE &#039;[A-Z]+[a-z]&#039;', NULL),
(1030, 'VA154626', 402, '--a\r\nSELECT COUNT(idLike) AS &#039;majmo3&#039; FROM likes;\r\nSELECT COUNT(idDisLike) AS &#039;majmo3&#039; FROM DisLike;\r\n\r\n--b \r\nSELECT email FROM utilisateur INNER JOIN avis USING (email) GROUP BY(idAvis) HAVING MAX(idAvis);\r\n\r\n--c\r\nSELECT email FROM utilisateur INNER JOIN avis USING (email) GROUP BY(idAvis) HAVING MAX(idAvis);\r\n\r\n--d\r\nSELECT * FROM livre INNER JOIN likes WHERE idLike IS NULL ;\r\n\r\n--e\r\nSELECT * FROM utilisateur WHERE passworde RLIKE &#039;[A-Z][a-z]&#039;;\r\n\r\n--f\r\nSELECT * FROM livre INNER JOIN likes,dislike WHERE COUNT(idLike) = COUNT(idDisLike);', NULL),
(1031, 'DB31001', 402, '--a--\r\nselect count(idlikes) from likes ;\r\nselect count(iddislikes) from dislike;\r\n--b\r\nselect  max(idlike) as livre_plus_LIKE from livre\r\ninner join likes\r\non likes.idlivre=livre.idlivre\r\n--c\r\n--c\r\nselect max(idlivre) from avis ;\r\n\r\n\r\n\r\n--d\r\nselect * from livre\r\ninner join likes\r\non livre.idlivre=likes.idlivre\r\n\r\n where likes.idlivre=null;\r\n \r\n --e\r\n select * FROM utilisateur\r\n where utilisateur=(&amp;quot;^[A-Za-z]+$&amp;quot;);\r\n \r\n --f\r\n select count(idlike),count(iddilikes) from livre where  count(idlike)=count(iddislike);', NULL),
(1032, 'DA105449', 401, 'CREATE DATABASE school;\r\nUSE school;\r\nCREATE TABLE Livre (\r\nidLivre INT ,\r\n titre VARCHAR(30),\r\n editeur  VARCHAR(30),\r\n datePublication DATE ,\r\n prix FLOAT );\r\n CREATE TABLE Utilisateur (\r\n email VARCHAR(30) ,\r\n nom VARCHAR(30) ,\r\n prenom VARCHAR(30),\r\n passwordd VARCHAR(30),\r\n tel INT );\r\n CREATE TABLE MyFavorite (\r\n idFav INT  ,\r\n dateAjout DATE ,\r\n  idLivre INT , \r\n  email VARCHAR(30) );\r\n  \r\n  CREATE TABLE Avis (\r\n  idAvis int,\r\n  dateAvis date,\r\n  TEXTt TEXT ,\r\n   idLivre int,\r\n	 \r\n	 email VARCHAR(30) );\r\n	 \r\n	 CREATE TABLE Likes (\r\n	 idLike INT ,\r\n	 dateLike DATE,\r\n	 textt TEXT , \r\n	 idLivre INT ,\r\n	  email VARCHAR(30) );\r\n	  \r\n	  CREATE TABLE disLikes (\r\n	 idDILike INT ,\r\n	 dateDILike DATE,\r\n	 textt TEXT , \r\n	 idLivre INT ,\r\n	email VARCHAR(30) );\r\n	2a \r\nALTER TABLE Livre ADD CONSTRAINT PRIMARY KEY (idLivre) ;\r\n	ALTER TABLE Utilisateur ADD CONSTRAINT PRIMARY KEY (email) ;\r\n	ALTER TABLE MyFavorite ADD CONSTRAINT PRIMARY KEY (idFav) ;\r\n	ALTER TABLE Avis ADD CONSTRAINT PRIMARY KEY (idAvis) ;\r\n	ALTER TABLE Likes ADD CONSTRAINT PRIMARY KEY (idLike) ;\r\n	ALTER TABLE disLikes ADD CONSTRAINT PRIMARY KEY (idDILike) ;\r\n	b \r\n\r\n	ALTER TABLE myfavorite ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre(idLivre);\r\n	ALTER TABLE myfavorite ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n	ALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre(idLivre);\r\n	ALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n	ALTER TABLE Likes ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre(idLivre);\r\n	ALTER TABLE Likes ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n	ALTER TABLE disLikes ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES livre(idLivre);\r\n	ALTER TABLE disLikes ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\nd\r\nALTER TABLE livre   ADD CONSTRAINT  CHECK idLivre RLIKE &amp;#039;OFPPT_%&amp;#039;;', NULL),
(1033, 'DA105449', 402, '	SELECT COUNT(idLike) FROM likes;\r\n	SELECT COUNT(idDILike) FROM disLikes;\r\n	\r\n	SELECT * FROM livre INNER JOIN likes \r\n	ON livre.idLivre=likes.idLivre WHERE MAX(idDILike)\r\n	\r\n	\r\n	SELECT * FROM utilisateur INNER JOIN  avis ON utilisateur.email = avis.email WHERE MAX(idAvis);\r\n	\r\n	SELECT * FROM livre LEFT JOIN likes ON livre.idLivre = likes.idLivre\r\n	\r\n	L', NULL),
(1034, 'CI1417', 401, 'CREATE DATABASE school;\r\nUSE school;\r\n\r\nCREATE TABLE Livre(\r\nidLivre INT,\r\ntitre VARCHAR(30) ,\r\nediteur VARCHAR(30) ,\r\ndatePublication DATE ,\r\nprix FLOAT\r\n\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR(30),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npasswordd VARCHAR(30),\r\ntel INT\r\n);\r\n\r\nCREATE TABLE MyFavorite(\r\nidFav INT,\r\ndateAjout DATE ,\r\nidLivre INT,\r\nemail VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE Avis(\r\nidAvis INT ,\r\ndateAvis DATE ,\r\ntexts VARCHAR(30),\r\nidLivre INT ,\r\nemail VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE Likes (\r\nidLike INT ,\r\ndateLike DATE ,\r\ntexts VARCHAR(30),\r\nidLivre INT,\r\nemail VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE DisLike(\r\nidDislike INT ,\r\ndateDislike DATE ,\r\ntexts VARCHAR(30),\r\nidLivre INT,\r\nemail VARCHAR(30)\r\n);\r\n--------------------------------------------------------------------------------\r\n2\r\n\r\nALTER TABLE Livre\r\nADD PRIMARY KEY (idLivre);\r\n\r\nALTER TABLE Utilisateur\r\nADD PRIMARY KEY (email);\r\n\r\nALTER TABLE MyFavorite\r\nADD PRIMARY KEY (idFav);\r\n\r\nALTER TABLE Avis\r\nADD PRIMARY KEY (idAvis);\r\n\r\nALTER TABLE Likes\r\nADD PRIMARY KEY (idLike);\r\n\r\nALTER TABLE DisLike\r\nADD PRIMARY KEY (idDislike);\r\n\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE MyFavorite\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE Avis\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\n\r\nALTER TABLE Likes\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE Likes\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\n\r\nALTER TABLE DisLike\r\nADD FOREIGN KEY (idLivre) REFERENCES Livre(idLivre);\r\n\r\nALTER TABLE DisLike\r\nADD FOREIGN KEY (email) REFERENCES Utilisateur(email);\r\n\r\nALTER TABLE MyFavorite\r\nADD  dateAjout SET DEFAULT CURDATE();\r\n\r\nALTER TABLE Livre\r\nADD CONSTRAINT CHECK (idLivre LIKE &#039;OFPPT_00001&#039;)\r\n\r\nINSERT INTO livre (idLivre,titre,editeur,datePublication,prix) VALUES(&#039;OFPPT_00001&#039;,&#039;chapitre&#039;,&#039;issam&#039;,&#039;2018-01-04&#039;,166);\r\n\r\nINSERT INTO Utilisateur VALUES(&#039;issam&#039;,&#039;arache&#039;,&#039;amin&#039;,&#039;issam123&#039;,00220022);\r\n\r\nINSERT INTO myfavorite VALUES(187,2023-1-23,111,&#039;iisam@&#039;);\r\n\r\nINSERT INTO Avis VALUES(189,2021-1-23,&#039;YOOO&#039;,111,&#039;iisAAam@&#039;);\r\n\r\nINSERT INTO Likes VALUES(199,2019-1-23,&#039;YOZZO&#039;,121,&#039;iiAAsAAam@&#039;);\r\n\r\nINSERT INTO DisLike VALUES(197,2012-1-4,&#039;YOZWWZO&#039;,1222,&#039;iiAAsAAam@&#039;);\r\n\r\n\r\n', NULL),
(1035, 'DA102626', 402, 'select count   (idlike) from likes\r\nselect count (iddidlike) from  dis\r\n\r\nselect count from not likes \r\n\r\n', NULL),
(1036, 'X449131', 401, 'CREATE DATABASE MyLibSchool;\r\nUSE MyLibSchool;\r\n\r\nCREATE TABLE Livre(\r\nidLivre INT,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndatePublication DATE,\r\nprix float\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR(20),\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nPASSWORD VARCHAR(30),\r\ntel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE MyFavorite(\r\nidfav INT,\r\ndateAjout date,\r\nidLivre int,\r\nemail VARCHAR(20)\r\n\r\n);\r\n\r\nCREATE TABLE Avis(\r\nidavis INT ,\r\ndateAvis DATE,\r\nTEXT VARCHAR(20),\r\nidLivre int,\r\nemail VARCHAR(20)\r\n\r\n);\r\n\r\nCREATE TABLE LIKE1(\r\nidLike INT,\r\ndateLike DATE,\r\nTEXT VARCHAR(20),\r\nidLivre INT, \r\nemail VARCHAR(30)\r\n\r\n);\r\n\r\nCREATE TABLE disLIKE1(\r\niddisLike INT, \r\ndatedisLike DATE,\r\nTEXT VARCHAR(20),\r\nidLivre INT, \r\nemail VARCHAR(30)\r\n\r\n);\r\na---\r\nALTER TABLE livre\r\nADD PRIMARY KEY(idLivre);\r\n\r\nALTER TABLE MyFavorite\r\nADD PRIMARY KEY(idFav);\r\n\r\nALTER TABLE utilisateur\r\nADD PRIMARY KEY(email);\r\n\r\nALTER TABLE Avis\r\nADD PRIMARY KEY(idAvis);\r\n\r\nALTER TABLE LIKE1\r\nADD PRIMARY KEY(idLike);\r\n\r\n\r\nALTER TABLE dislike1\r\nADD PRIMARY KEY(iddisLike);\r\n\r\n\r\nALTER TABLE MyFavorite\r\nADD \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email));\r\n\r\nALTER TABLE Avis\r\nADD \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\nALTER TABLE LIKE1\r\nADD \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\nALTER TABLE disLIKE1\r\nADD \r\nFOREIGN KEY (idLivre) REFERENCES Livre (idLivre),\r\nFOREIGN KEY (email) REFERENCES Utilisateur (email)\r\n\r\nc---\r\nUPDATE MyLibSchool\r\nSET dateajout DEFAULT CURDATE();\r\n\r\nd----\r\nALTER TABLE livre\r\nADD CONSTRAINT CHECK(idlivre LIKE &#039;OFPPT%_{0}4,1&#039;;\r\n\r\n\r\n3) \r\nINSERT INTO Livre(idLivre, titre,editeur,datePublication,prix)\r\nVALUE(1,amir,makyavili,1945,100.00);\r\n\r\nINSERT INTO Utilisateur(email,nom,prenom,password,tel)\r\nVALUE(zackk@gmail.com,benchakouk,zaccaria,dd013,&#039;0606060606&#039;);\r\n\r\nINSERT INTO MyFavorite(idFav ,dateAjout, idLivre, email)\r\nVALUE(1,2023-02-03,001,zackk@gmail.com);\r\n\r\nINSERT INTO avis(idAvis,dateAvis,text,idLivre, email)\r\nVALUE(1,2023-02-03,&#039;yyyyy&#039;,1,zackk@gmail.com);\r\n\r\nINSERT INTO LIKE1(idLike,dateLike,text, idLivre,email)\r\nVALUE(1,2023-02-03,&#039;yyyyy&#039;,1,zackk@gmail.com);\r\n\r\nINSERT INTO DisLike1(idDislike,dateDislike,text,idLivre,email)\r\nVALUE(1,2023-02-03,&#039;yyyyy&#039;,1,zackk@gmail.com);', NULL),
(1037, 'CI1417', 402, 'SELECT COUNT(*) from likes;\r\nSELECT COUNT(*) FROM dislike;\r\n\r\nSELECT idLivre,titre FROM livre\r\nINNER JOIN Likes\r\nUSING(idLivre)\r\nGROUP BY idLike\r\nHAVING MAX(idLike)\r\n\r\nSELECT idLivre,titre,editeur,datePublication,prix FROM livre\r\nWHERE idLivre NOT IN (SELECT idLivre FROM likes)\r\n\r\nSELECT * FROM utilisateur\r\nWHERE passwordd RLIKE &#039;[a-zA-Z]&#039;', NULL),
(1038, 'DA104711', 401, 'CREATE DATABASE libruary;\r\nDROP DATABASE if EXISTS libruary\r\nUSE libruary;\r\n\r\nCREATE TABLE Livre (\r\nidLivre VARCHAR(30) PRIMARY KEY,\r\ntitre VARCHAR(30),\r\nediteur VARCHAR(30),\r\ndate_pub DATE ,\r\nprix FLOAT \r\n\r\n);\r\n\r\nCREATE TABLE Utilisateur (\r\nemail VARCHAR(300) PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\npasword VARCHAR(300),\r\ntel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE MyFavorite (\r\nidFav  INT PRIMARY KEY  ,\r\ndateAjout DATE ,\r\nidLivre VARCHAR(30)  , \r\nemail VARCHAR(300) \r\n);\r\n\r\n\r\nCREATE TABLE Avis (\r\nidAvis INT PRIMARY KEY ,\r\ndateAvis DATE ,\r\ntexts  VARCHAR(300), \r\nidLivre VARCHAR(30)  ,\r\nemail VARCHAR(300)\r\n\r\n);\r\n\r\nCREATE TABLE likes(\r\nidlikes INT PRIMARY KEY ,\r\ndatelike DATE ,\r\ntexts  VARCHAR(300), \r\nidLivre VARCHAR(30)  ,\r\nemail VARCHAR(300)\r\n);\r\nCREATE TABLE DisLike (\r\niddislike INT PRIMARY KEY ,\r\ndatedislike DATE ,\r\ntexts  VARCHAR(300), \r\nidLivre VARCHAR(30)  ,\r\nemail VARCHAR(300)\r\n);\r\nUPDATE  MyFavorite SET  dateAjout  = CURDATE()\r\n\r\n\r\nALTER TABLE MyFavorite ADD  FOREIGN KEY (idLivre) REFERENCES Livre (idLivre);\r\nALTER TABLE MyFavorite ADD  FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\nALTER TABLE avis ADD  FOREIGN KEY (idLivre) REFERENCES Livre (idLivre);\r\nALTER TABLE Avis ADD  FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\nALTER TABLE likes ADD  FOREIGN KEY (idLivre) REFERENCES Livre (idLivre);\r\nALTER TABLE likes ADD  FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\nALTER TABLE DisLike ADD  FOREIGN KEY (idLivre) REFERENCES Livre (idLivre);\r\nALTER TABLE DisLike ADD  FOREIGN KEY (email) REFERENCES Utilisateur (email);\r\n\r\n\r\nALTER TABLE MyFavorite ADD dateAjout DEFAULT CURDATE()\r\nALTER TABLE Livre ADD CONSTRAINT CHECK (idLivre LIKE &#039;OFPPT_%%%%1&#039;)\r\n\r\nINSERT INTO livre (idLivre, titre,editeur,date_pub,prix) VALUES (&quot;OFPPT_00001&quot;,&quot;titre1&quot;,&quot;mohamed salhi&quot;,&quot;2015-04-02&quot;,200.0);\r\n\r\nINSERT INTO Utilisateur (email,nom,prenom,pasword,tel) VALUES (&quot;moha@gmail.com&quot;,&quot;salim&quot;,&quot;taybi&quot;,&quot;10234&quot;,&quot;0702010504&quot;);\r\n\r\nINSERT INTO MyFavorite  (idFav , idLivre, email) VALUES (1,&quot;OFPPT_00001&quot;,&quot;moha@gmail.com&quot;);\r\n\r\nINSERT INTO Avis   (idAvis,dateAvis,texts, idLivre, email) VALUES (5,&quot;2015-04-02&quot;,&quot;hello everyone&quot;,&quot;OFPPT_00001&quot;,&quot;moha@gmail.com&quot;);\r\n\r\nINSERT INTO Likes (idLikes,dateLike,texts, idLivre, email) VALUES (3,&quot;2024-04-02&quot;,&quot;hello everyone &quot;,&quot;OFPPT_00001&quot;,&quot;moha@gmail.com&quot;);\r\n\r\nINSERT INTO DisLike  (idDislike,dateDislike,texts, idLivre, email) VALUES (2,&quot;2024-05-02&quot;,&quot;hello everyone &quot;,&quot;OFPPT_00001&quot;,&quot;moha@gmail.com&quot;);\r\n', 6),
(1039, 'Z673521', 402, '\r\nINSERT INTO likes  VALUES (&#039;like_00001&#039;, &#039;2024-05-10&#039;, &#039;text_text_text&#039;, &#039;OFPPT_00001&#039;, &#039;amine@a.net&#039;)\r\n\r\n\r\nINSERT INTO dislike  VALUES (&#039;Dlike_00001&#039;, &#039;2024-05-10&#039;, &#039;text_text_text&#039;, &#039;OFPPT_00001&#039;, &#039;amine@a.net&#039;)\r\n\r\n\r\n\r\nSELECT COUNT(idlike)FROM likes;\r\n\r\nSELECT COUNT(idDislike) FROM dislike;\r\n\r\nSELECT *, COUNT(l.idLivre) AS nblikes FROM livre li INNER JOIN likes l USING(idLivre) GROUP BY l.idLivre ORDER BY nblikes desc LIMIT 1\r\n\r\n\r\nSELECT *, COUNT(u.email) AS nbavis FROM utilisateur u INNER JOIN avis a USING(email) GROUP BY u.email ORDER BY nbavis  desc LIMIT 1\r\n\r\n\r\n\r\n\r\nSELECT *, COUNT(l.idLivre) AS nblikes FROM livre li LEFT JOIN  likes l USING(idLivre) GROUP BY l.idLivre HAVING idLike IS NULL\r\n\r\n\r\nSELECT * FROM utilisateur WHERE (PASSWORD RLIKE &#039;^[a-bA-B]+$&#039;)\r\n\r\n\r\n\r\n\r\nSELECT * FROM livre l WHERE ((SELECT COUNT(*) FROM dislike d WHERE d.idlivre = l.idlivre) = (SELECT COUNT(*) FROM likes WHERE likes.idLivre = likes.idLivre))\r\n ', 11),
(1040, 'CN51111', 401, '\r\nCREATE DATABASE ofppt;                                   \r\nUSE ofppt;                                               \r\n\r\nALTER TABLE Livre ADD CONSTRAINT ch CHECK(idlivre LIKE &#039;OFPPT_%&#039;)                                                 \r\nCREATE TABLE Livre (                                     \r\nidlivre VARCHAR(12) ,                                            \r\ntitre VARCHAR(30),                                       \r\nediteur VARCHAR(30),                                     \r\ndate_publication DATE,                                   \r\nprix FLOAT                                               \r\n);                                                       \r\nINSERT INTO Livre VALUES (1,&#039;ch&#039;,&#039;victor&#039;,2000-12-1,200)\r\n                                                      \r\nALTER TABLE Livre ADD CONSTRAINT  PRIMARY KEY (idlivre)  \r\nALTER TABLE Utilisateur ADD CONSTRAINT  PRIMARY KEY (email)\r\nALTER TABLE Myfavorite ADD CONSTRAINT  PRIMARY KEY (idfav)\r\nALTER TABLE Avis ADD CONSTRAINT  PRIMARY KEY (idavis)    \r\nALTER TABLE likee ADD CONSTRAINT  PRIMARY KEY (idlike)   \r\nALTER TABLE DIslikee ADD CONSTRAINT  PRIMARY KEY (iddislike)\r\n                                                         \r\n                                                         \r\n-- 1.	Don-- ner le script SQL pour la création des tables. (3 pts)\r\n-- 2.	Donner le script SQL pour la création des contraintes : (2 pts)\r\n-- a-	Les clés primaires                                 \r\nb-	Les clés étrangères                                   \r\nc-	DateAjout par défaut la date système                  \r\nd-	idLivre respecte le format « OFPPT_00001»             \r\n3.	Donner un script pour insérer une ligne au minimum dans chaque table (1 pts)\r\n                                                         \r\nALTER TABLE  ADD CONSTRAINT                              \r\n                                                         \r\nCREATE TABLE Utilisateur (                               \r\nemail VARCHAR(30) ,                                      \r\nnom VARCHAR(30),                                         \r\nprenom VARCHAR(30),                                      \r\npass_word VARCHAR(30),                                   \r\ntel VARCHAR(10)                                          \r\n);                                                       \r\nINSERT INTO Utilisateur VALUES (&#039;hamza@gmail.com&#039;,&#039;hamza,kdr&#039;,&#039;12345&#039;,&#039;066603&#039;)                                               \r\nCREATE TABLE Myfavorite (                                \r\nidfav INT ,                                              \r\ndate_ajout DATE,                                         \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);  \r\nALTER TABLE ADD CONSTRAINT DEFAULT CURDATE (date_ajout)    \r\nINSERT INTO Myfavorite(idfav,idlivre,email) VALUES (1,1,&#039;hamza@gmail.com&#039;)                                                  \r\nFOREIGN KEY (idlivre) REFERENCES Livre(idlivre)          \r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)        \r\n                                                         \r\nALTER TABLE Myfavorite ADD CONSTRAINT FOREIGN KEY FOREIGN KEY (idlivre) REFERENCES Livre(idlivre)\r\nALTER TABLE Avis ADD CONSTRAINT  PRIMARY KEY (idavis)    \r\nALTER TABLE likee ADD CONSTRAINT  PRIMARY KEY (idlike)   \r\nALTER TABLE DIslikee ADD CONSTRAINT  PRIMARY KEY (iddislike)\r\n                                                         \r\nCREATE TABLE Avis(                                       \r\nidavis INT ,                                             \r\ndateavis DATE,                                           \r\ntexte VARCHAR(30) ,                                      \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);      \r\nINSERT INTO Avis VALUES (1,&#039;2024-12-12&#039;,&#039;hfjke&#039;,1,&#039;hamza@gmail.com&#039;)                                                 \r\nINSERT INTO Livre VALUES ()                                            \r\nCREATE TABLE likee(                                      \r\nidlike INT,                                              \r\ndatelike DATE,                                           \r\ntexte VARCHAR(30),                                       \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);                                                       \r\nINSERT INTO likee VALUES (1,&#039;2024-12-12&#039;,&#039;hfjke&#039;,1,&#039;hamza@gmail.com&#039;)                                                        \r\nCREATE TABLE Dislikee(                                   \r\niddislike INT,                                           \r\ndatedislike DATE,                                        \r\ntexte VARCHAR(30),                                       \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);     \r\n\r\nSELECT MAX(SUM(COUNT()))\r\nFROM likee\r\nINNER JOIN Livre\r\nUSING ()                 \r\nGROUP BY idlivre\r\n\r\nSELECT idlivre \r\n\r\nALTER TABLE modify\r\n\r\n\r\n\r\nSELECT * FROM Utilisateurs WHERE pass_word NOT LIKE \r\n\r\n\r\n\r\n\r\nINSERT INTO like', NULL);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(1041, 'CN51111', 402, 'CREATE DATABASE ofppt;                                   \r\nUSE ofppt;                                               \r\n\r\nALTER TABLE Livre ADD CONSTRAINT ch CHECK(idlivre LIKE &#039;OFPPT_%&#039;)                                                 \r\nCREATE TABLE Livre (                                     \r\nidlivre VARCHAR(12) ,                                            \r\ntitre VARCHAR(30),                                       \r\nediteur VARCHAR(30),                                     \r\ndate_publication DATE,                                   \r\nprix FLOAT                                               \r\n);                                                       \r\nINSERT INTO Livre VALUES (1,&#039;ch&#039;,&#039;victor&#039;,2000-12-1,200)\r\n                                                      \r\nALTER TABLE Livre ADD CONSTRAINT  PRIMARY KEY (idlivre)  \r\nALTER TABLE Utilisateur ADD CONSTRAINT  PRIMARY KEY (email)\r\nALTER TABLE Myfavorite ADD CONSTRAINT  PRIMARY KEY (idfav)\r\nALTER TABLE Avis ADD CONSTRAINT  PRIMARY KEY (idavis)    \r\nALTER TABLE likee ADD CONSTRAINT  PRIMARY KEY (idlike)   \r\nALTER TABLE DIslikee ADD CONSTRAINT  PRIMARY KEY (iddislike)\r\n                                                         \r\n                                                         \r\n-- 1.	Don-- ner le script SQL pour la création des tables. (3 pts)\r\n-- 2.	Donner le script SQL pour la création des contraintes : (2 pts)\r\n-- a-	Les clés primaires                                 \r\nb-	Les clés étrangères                                   \r\nc-	DateAjout par défaut la date système                  \r\nd-	idLivre respecte le format « OFPPT_00001»             \r\n3.	Donner un script pour insérer une ligne au minimum dans chaque table (1 pts)\r\n                                                         \r\nALTER TABLE  ADD CONSTRAINT                              \r\n                                                         \r\nCREATE TABLE Utilisateur (                               \r\nemail VARCHAR(30) ,                                      \r\nnom VARCHAR(30),                                         \r\nprenom VARCHAR(30),                                      \r\npass_word VARCHAR(30),                                   \r\ntel VARCHAR(10)                                          \r\n);                                                       \r\nINSERT INTO Utilisateur VALUES (&#039;hamza@gmail.com&#039;,&#039;hamza,kdr&#039;,&#039;12345&#039;,&#039;066603&#039;)                                               \r\nCREATE TABLE Myfavorite (                                \r\nidfav INT ,                                              \r\ndate_ajout DATE,                                         \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);  \r\nALTER TABLE ADD CONSTRAINT DEFAULT CURDATE (date_ajout)    \r\nINSERT INTO Myfavorite(idfav,idlivre,email) VALUES (1,1,&#039;hamza@gmail.com&#039;)                                                  \r\nFOREIGN KEY (idlivre) REFERENCES Livre(idlivre)          \r\nFOREIGN KEY (email) REFERENCES Utilisateur(email)        \r\n                                                         \r\nALTER TABLE Myfavorite ADD CONSTRAINT FOREIGN KEY FOREIGN KEY (idlivre) REFERENCES Livre(idlivre)\r\nALTER TABLE Avis ADD CONSTRAINT  PRIMARY KEY (idavis)    \r\nALTER TABLE likee ADD CONSTRAINT  PRIMARY KEY (idlike)   \r\nALTER TABLE DIslikee ADD CONSTRAINT  PRIMARY KEY (iddislike)\r\n                                                         \r\nCREATE TABLE Avis(                                       \r\nidavis INT ,                                             \r\ndateavis DATE,                                           \r\ntexte VARCHAR(30) ,                                      \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);      \r\nINSERT INTO Avis VALUES (1,&#039;2024-12-12&#039;,&#039;hfjke&#039;,1,&#039;hamza@gmail.com&#039;)                                                 \r\nINSERT INTO Livre VALUES ()                                            \r\nCREATE TABLE likee(                                      \r\nidlike INT,                                              \r\ndatelike DATE,                                           \r\ntexte VARCHAR(30),                                       \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);                                                       \r\nINSERT INTO likee VALUES (1,&#039;2024-12-12&#039;,&#039;hfjke&#039;,1,&#039;hamza@gmail.com&#039;)                                                        \r\nCREATE TABLE Dislikee(                                   \r\niddislike INT,                                           \r\ndatedislike DATE,                                        \r\ntexte VARCHAR(30),                                       \r\nidlivre INT,                                             \r\nemail VARCHAR(30)                                        \r\n);     \r\n\r\nSELECT MAX(SUM(COUNT()))\r\nFROM likee\r\nINNER JOIN Livre\r\nUSING ()                 \r\nGROUP BY idlivre\r\n\r\nSELECT idlivre \r\n\r\nALTER TABLE modify\r\n\r\n\r\n\r\nSELECT * FROM Utilisateurs WHERE pass_word NOT LIKE \r\n\r\n\r\n\r\n\r\nINSERT INTO like', NULL),
(1042, 'X449131', 402, '4 a)\r\nSELECT COUNT(*) FROM Like1\r\nSELECT COUNT(*) FROM DisLike1\r\nb) SELECT like1.idLike,dislike1.iddisLike FROM \r\nlike1\r\nINNER JOIN like1.idLike = dislike1.iddisLike;\r\n\r\nc) \r\n\r\nd)  SELECT * from avis \r\nWHERE(idavis NOT IN (SELECT idlivre = livre);\r\n\r\ne) SELECT PASSWORD, FROM utilisateur\r\nWHERE(PASSWORD = UPPER(PASSWORD) OR LOWER(PASSWORD);\r\n\r\nf) SELECT * FROM Livre\r\nWHERE( nombre de like1 = Nombre de dislike1);', NULL),
(1043, 'DN46699', 402, 'SELECT count(idlike)\r\nfrom likee;\r\nselect count(idislike)\r\nfrom dislike;\r\nselect max(idli)\r\nfrom likee;\r\nselect max(idli)\r\nfrom avis;\r\nselect *\r\nfrom livre \r\ninner join likee\r\non livre.idlivre =likee.idlike\r\nwhere idlike is null;\r\nselect *\r\nfrom utilisateur\r\nwhere passwordee like &amp;quot;%[a-z]&amp;quot; and &amp;quot;[A-Z]%&amp;quot;;\r\nSELECT*\r\nFROM LIKEE \r\ninner JOIN DISLIKEE\r\nON LIKEE.IDLIVRE=DISLIKEE.idlivre\r\nwhere count(idlike)=count(iddislike)', NULL),
(1044, 'DA105115', 402, 'a\r\n SELECT COUNT(*) FROM Likee\r\n SELECT COUNT(*) FROM DisLike\r\nb\r\nSELECT idLivre FROM  livre INNER  Likee JOIN USING  (idLivre) GROUP BY (idLike) HAVING MAX(idLike)\r\nc\r\n SELECT email FROM utilisateur INNER JOIN Avis  USING (email) GROUP BY (idAvis) HAVING MAX(idAvis) \r\nd \r\nSELECT  * FROM livre WHERE idLivre NOT IN (SELECT * FROM likeee)\r\n\r\ne\r\n SELECT * FROM utilisateur WHERE PASSWORD RLIKE &#039;a-z A-z&#039;\r\n\r\n\r\n\r\n\r\n', 8),
(1045, 'DA105115', 401, 'CREATE  DATABASE My_LibSchool;\r\nUSE  My_LibSchool;\r\n CREATE TABLE Livre (\r\n idLivre INT, \r\n titre VARCHAR(30),\r\n editeur VARCHAR(30),\r\n datePublication DATE ,\r\n prix FLOAT ,\r\nPRIMARY KEY (idLivre)\r\n );\r\n CREATE TABLE Utilisateur (\r\n email VARCHAR(30)  ,\r\n nom VARCHAR(30),\r\n prenom VARCHAR(30),\r\n PASSWORD VARCHAR(30),\r\n tel VARCHAR(30),\r\n\r\n \r\n );\r\n CREATE TABLE MyFavorite (\r\n idFav INT ,\r\n dateAjout DATE , \r\n idLivre INT , \r\n email VARCHAR (30),\r\n\r\n )\r\n CREATE TABLE Avis (\r\n idAvis INT  ,\r\n dateAvis DATE ,\r\n TEXT VARCHAR(30), \r\n idLivre INT , \r\n email VARCHAR(30),\r\n\r\n ) ;\r\n \r\n CREATE TABLE Likee (\r\n idLike INT ,\r\n dateLike DATE ,\r\n TEXT VARCHAR (30), \r\n idLivre INT , \r\n email VARCHAR(30),\r\n\r\n );\r\n CREATE TABLE DisLike (\r\n idDislike int,\r\n dateDislike DATE ,\r\n TEXT VARCHAR(30), \r\n idLivre INT , \r\n email VARCHAR (30),\r\n\r\n );\r\n ALTER TABLE livre ADD CONSTRAINT PRIMARY KEY (idLivre),\r\n \r\n ALTER TABLE Utilisateur ADD CONSTRAINT PRIMARY KEY (email),\r\n \r\n ALTER TABLE MyFavorite ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n ALTER TABLE MyFavorite ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email),\r\n \r\nALTER TABLE Avis ADD CONSTRAINT PRIMARY KEY (idAvis),\r\n ALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n ALTER TABLE Avis ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email),\r\n \r\n ALTER TABLE Likee ADD CONSTRAINT PRIMARY KEY (idLike),\r\n ALTER TABLE Likee ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n ALTER TABLE Likee ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email),\r\n \r\n ALTER TABLE DisLike ADD CONSTRAINT PRIMARY KEY (idDislike),\r\n ALTER TABLE DisLike ADD CONSTRAINT FOREIGN KEY (idLivre) REFERENCES Livre(idLivre),\r\n ALTER TABLE DisLike ADD CONSTRAINT FOREIGN KEY (email) REFERENCES Utilisateur(email),\r\n \r\n \r\n\r\n INSERT INTO Livre (idLivre, titre,editeur,datePublication,prix) values\r\n (123,&#039;titre1&#039;,&#039;editeur&#039;,&#039;2024/02/22&#039;,56,5),\r\n INSERT INTO Utilisateur (email,nom,prenom,password,tel) VALUES \r\n (&#039;mm@gmail.com&#039;,&#039;nom&#039;,&#039;prenom&#039;,&#039;5544&#039;,&#039;0600000000&#039;),\r\n INSERT INTO MyFavorite (idFav ,dateAjout, idLivre, email) VALUES \r\n (4733,&#039;2003/03/03&#039;,&#039;2004/04/04&#039;,123,&#039;mm@gmail.com&#039;),\r\n INSERT INTO Avis (idAvis,dateAvis,text, idLivre, email) VALUES \r\n (666,&#039;2020/03/02&#039;,&#039;test&#039;,123,&#039;mm@gmail.com&#039;),\r\n INSERT  INTO Likee (idLike,dateLike,text, idLivre, email) VALUES \r\n (555,&#039;2023/03/03&#039;,&#039;test&#039;,123,&#039;mm@gmail.com&#039;),\r\n \r\n INSERT INTO DisLike (idDislike,dateDislike,text, idLivre, email) VALUES \r\n (885,&#039;2024/01/01&#039;,&#039;test&#039;,123,&#039;mm@gmail.com&#039;),\r\nc\r\nALTER TABLE MyFavorite MODIFY COLUMN dateAjout date DEFAULT  CURRENT_DATE ;\r\nd\r\n ALTER TABLE livre ADD CONSTRAINT CHECK (idLivre LIKE  &#039;OFPPT_%%%%&#039;),\r\n\r\n', 6),
(1046, 'DN46699', 401, 'create database ofppt;\r\nuse ofppt;\r\ncreate table livre(\r\nidlivre int primary key,\r\ntitre varchar(30),\r\nediteur varchar (30),\r\ndatepublication date ,\r\nprix float\r\n\r\n);\r\ncreate table utilisateur(\r\nemail varchar (30) primary key,\r\nnom varchar (30),\r\nprenom varchar(30),\r\npasswordd varchar (30),\r\ntel int\r\n);\r\ncreate table myfavorite(\r\nidfav int primary key ,\r\ndateajout date ,\r\nforeign key (idlivre)references livre (idlivre),\r\nforeign key(emeil)references utilisateur (email)\r\n\r\n);\r\ncreate table avis(\r\nidvis int primary key,\r\ndateavis date,\r\ntext varchar(30),\r\nforeign key (idlivre) references livre(idlivre),\r\nforeign key(emeil) references utilisateur(email)\r\n);\r\ncreate table likee(\r\nidlike int primary key,\r\ndatelike date,\r\ntexte varchar(50),\r\nforeign key(idlivre)references livre (idlivre),\r\nforeign key(emeil) references utilisateur(email)\r\n);\r\ncreate table dislike(\r\niddislike int primary key,\r\ndatedislike date, \r\ntexte varchar(50),\r\nforeign key(idlivre)references livre (idlivre),\r\nforeign key(emeil) references utilisateur(email)\r\n);\r\nalter table livre \r\nadd idlivre int primary key;\r\nalter table email\r\nadd email varchar  primary key;\r\nalter table dislike add \r\noreign key(idlivre)references livre (idlivre)\r\nforeign key(emeil) references utilisateur(email);\r\nupdate myfavorite set dateajout=curdate();\r\nalter table myfavorite \r\nmodify dateajout date default curdate();\r\nalter table livre\r\ncheck idlivre=&quot;ofppt-00001&quot;;\r\nalter table \r\nadd  nameclomn;', NULL),
(1047, 'DA101003', 403, 'CREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50),\r\n    tel VARCHAR(20)\r\n);\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(100),\r\n    description TEXT,\r\n    categorie VARCHAR(50),\r\n    prixAchat DECIMAL(10, 2),\r\n    nbrEnstock INT\r\n);\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10, 2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT,\r\n    prix DECIMAL(10, 2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);\r\n2-\r\nCREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50),\r\n    tel VARCHAR(20)\r\n);\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(100) UNIQUE,\r\n    description TEXT,\r\n    categorie VARCHAR(50),\r\n    prixAchat DECIMAL(10, 2),\r\n    nbrEnstock INT,\r\n    CHECK (nbrEnstock &amp;gt;= 0)\r\n);\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10, 2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &amp;gt;= 1),\r\n    prix DECIMAL(10, 2),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);\r\n', 6),
(1048, 'DA102534', 403, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;\r\n\r\nCREATE TABLE clientes(\r\n	codeClt INT PRIMARY KEY ,\r\n	nom VARCHAR(30),\r\n	prenom VARCHAR(30),\r\n	adresse VARCHAR(250),\r\n	vilee VARCHAR(30),\r\n	tel VARCHAR(40)\r\n);\r\n\r\nCREATE TABLE produit (\r\n	refPrd INT PRIMARY KEY ,\r\n	designation  VARCHAR(40) UNIQUE ,\r\n	descrption VARCHAR(250),\r\n	categorie VARCHAR(30),\r\n	prixachat FLOAT ,\r\n	nbrEnstock int\r\n	\r\n);\r\nCREATE TABLE panier (\r\n	codePanier INT PRIMARY KEY ,\r\n	dateCreation DATE,\r\n	dateCommand DATE,\r\n	dateLivraison DATE,\r\n	MontantTotal FLOAT,\r\n	codeClt INT ,\r\n	FOREIGN KEY (codeClt) REFERENCES clientes(codeClt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n	quantite INT CHECK (quantite &gt; 1),\r\n	prix FLOAT ,\r\n	refPrd INT,\r\n	codePanier INT,\r\n	PRIMARY KEY(refPrd,codePanier),\r\n	FOREIGN KEY (refPrd) REFERENCES produit(refPrd),\r\n	FOREIGN KEY (codePanier) REFERENCES panier(codePanier)\r\n\r\n);', 6),
(1049, 'VA159550', 403, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;\r\n\r\nCREATE TABLE Client (\r\n	codeClt INT PRIMARY KEY AUTO_INCREMENT,\r\n	nom VARCHAR(30),\r\n	prenom VARCHAR(30),\r\n	adresse VARCHAR(255),\r\n	ville VARCHAR(40),\r\n	tel INT\r\n);\r\n\r\nCREATE TABLE Produit (\r\n	refPrd VARCHAR(30) PRIMARY KEY,\r\n	désignation VARCHAR(30) UNIQUE,\r\n	description TEXT,\r\n	catégorie VARCHAR(30),\r\n	prixAchat FLOAT,\r\n	nbrEnstock INT\r\n);\r\n\r\nCREATE TABLE Panier (\r\n	codePanier INT PRIMARY KEY AUTO_INCREMENT,\r\n	codeClt INT,\r\n	dateCreation DATE, \r\n	dateCommande DATE,\r\n	dateLivraison DATE,\r\n	MontantTotal FLOAT,\r\n	FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n	refPrd VARCHAR(30),\r\n	codePanier INT,\r\n	quantite INT CHECK (quantite &gt; 1),\r\n	prix FLOAT,\r\n	PRIMARY KEY (refPrd, codePanier),\r\n	FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n	FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);\r\n', 6),
(1050, 'ZG166772', 403, '1 CREATE DATABASE E-commerce;\r\nUSE E-commerce;\r\nCREATE TABLE Client (\r\ncodeClt INT,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(60),\r\nville VARCHAR(60),\r\ntel VARCHAR(15), \r\n);\r\nCREATE TABLE Produit (\r\nrefPrd VARCHAR(50),\r\ndésignation INT,\r\ndescription VARCHAR(255),\r\nprixAchat INT,\r\nnbrEnstock INT,\r\n);\r\nCREATE TABLE Panier (\r\ncodePanier VARCHAR(60),\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,\r\nMontantTotal INT,\r\n);\r\nCREATE TABLE ElementsPanier (\r\nquantité INT,\r\nprix INT,\r\n\r\n);\r\n2 CREATE DATABASE E-commerce;\r\nUSE E-commerce;\r\nCREATE TABLE Client (\r\ncodeClt INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(60),\r\nville VARCHAR(60),\r\ntel VARCHAR(15), \r\n);\r\nCREATE TABLE Produit (\r\nrefPrd VARCHAR(50) PRIMARY KEY,\r\ndésignation VARCHAR(30) UNIQUE ,\r\ndescription VARCHAR(255),\r\nprixAchat INT,\r\nnbrEnstock INT,\r\n);\r\nCREATE TABLE Panier (\r\ncodePanier VARCHAR(60) PRIMARY KEY,\r\nCONSTRAINT FK_codecltClient FOREIGN KEY (codeClt) \r\nREFERENCES Client(codeClt)\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,\r\nMontantTotal INT,\r\n);\r\nCREATE TABLE ElementsPanier (\r\nCONSTRAINT FK_refPrdProduit FOREIGN KEY (refPrd) \r\nREFERENCES Produit(refPrd)\r\nCONSTRAINT FK_codePanierPanier FOREIGN KEY (codePanier) \r\nREFERENCES Panier(codePanier)\r\nquantité INT,\r\nprix INT,\r\n);\r\n2  CREATE DATABASE E-commerce;\r\nUSE E-commerce;\r\nCREATE TABLE Client (\r\ncodeClt INT PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(60),\r\nville VARCHAR(60),\r\ntel VARCHAR(30), \r\n);\r\nCREATE TABLE Produit (\r\nrefPrd VARCHAR(50) PRIMARY KEY,\r\ndésignation VARCHAR(30) UNIQUE ,\r\ndescription VARCHAR(255),\r\nprixAchat INT,\r\nnbrEnstock INT,\r\n);\r\nCREATE TABLE Panier (\r\ncodePanier VARCHAR(60) PRIMARY KEY,\r\nFOREIGN KEY (codeClt) REFERENCES Client(codeClt),\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,\r\nMontantTotal INT,\r\n);\r\nCREATE TABLE ElementsPanier (\r\nFOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\nFOREIGN KEY (codePanier) REFERENCES Panier(codePanier),\r\nquantité INT,\r\nprix INT,\r\n);\r\nd select ville,déstination,max(quantité) as total commande from select ville,désignation,sum(quantité) as quantité from commande\r\ninner join Client on commande = Client\r\nselect ville,déstination,max(quantité) as total commande from select ville,désignation,sum(quantité) as quantité from commande\r\ninner join Produit on commande = Produit\r\n\r\n\r\n\r\n\r\n', NULL),
(1051, 'DB30958', 403, 'CREATE DATABASE E-commerce;\r\nUSE E-commerce;\r\n\r\nCREATE TABLE CLIENT(\r\n	codeClt INT       PRIMARY KEY,\r\n	nom VARCHAR(20),\r\n	prenom VARCHAR(20),\r\n	adresse VARCHAR(50),\r\n	ville VARCHAR(20),\r\n	tel INT \r\n);\r\nCREATE TABLE Produit (\r\n	refPrd INT      PRIMARY KEY,\r\n	désignation VARCHAR(30)          UNIQUE,\r\n	DESCRIPTION VARCHAR(50),\r\n	catégorie VARCHAR(30),\r\n	prixAchat FLOAT,\r\n	nbrEnstock int\r\n);\r\nCREATE TABLE Panier (\r\n	codePanier INT      PRIMARY KEY,\r\n	codeClt INT,\r\n	dateCreation DATE,\r\n	dateCommande DATE,\r\n	dateLivraison DATE,\r\n	MontantTotal FLOAT,\r\n	FOREIGN KEY (codeClt) REFERENCES CLIENT(codeClt)\r\n);\r\nCREATE TABLE ElementsPanier (\r\n	refPrd INT PRIMARY KEY,\r\n	codePanier INT PRIMARY KEY,\r\n	quantité INT            MIN(1),\r\n	prix FLOAT,\r\n	FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n	FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n	\r\n);\r\n', 6),
(1052, 'DA106935', 403, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce ;\r\n\r\nCREATE TABLE CLIENT (\r\ncodeClt INT ,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30), \r\nadresse VARCHAR(30), \r\nville VARCHAR(30), \r\ntel VARCHAR(30)\r\n);\r\n\r\nCREATE TABLE Produit \r\n(refPrd INT , \r\ndésignation VARCHAR(30), \r\ndescriptions VARCHAR(30), \r\ncatégorie VARCHAR(30), \r\nprixAchat FLOAT, \r\nnbrEnstock INT \r\n);\r\n\r\nCREATE TABLE Panier (\r\ncodePanier INT , \r\ncodeClt INT , \r\ndateCreation DATE , \r\ndateCommande DATE ,\r\ndateLivraison DATE ,\r\nMontantTotal FLOAT \r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\nrefPrd INT , \r\ncodePanier INT ,\r\nquantité INT ,\r\nprix FLOAT \r\n);\r\n\r\nALTER TABLE CLIENT ADD PRIMARY KEY (codeClt);\r\nALTER TABLE Produit ADD PRIMARY KEY (refPrd);\r\nALTER TABLE Panier ADD PRIMARY KEY (codePanier);\r\nALTER TABLE ElementsPanier ADD PRIMARY KEY (refPrd,codePanier);\r\n\r\nALTER TABLE Panier ADD FOREIGN KEY (codeClt) REFERENCES CLIENT(codeClt);\r\nALTER TABLE ElementsPanier ADD FOREIGN KEY (refPrd) REFERENCES Produit(refPrd);\r\nALTER TABLE ElementsPanier ADD FOREIGN KEY (codePanier) REFERENCES Panier(codePanier);\r\n\r\nALTER TABLE produit MODIFY désignation VARCHAR(30) UNIQUE;\r\n\r\nALTER TABLE elementspanier ADD CHECK (quantité &gt;=1);', 6),
(1053, 'DA108545', 403, 'CREATE DATABASE E_commerce;\r\nUSE E_commerce;\r\n\r\nCREATE TABLE cliente(\r\ncodeclt int PRIMARY KEY ,\r\nnom VARCHAR (30),\r\nprenom VARCHAR (30), \r\nadresse VARCHAR (30),\r\nville VARCHAR (30),\r\ntel INT\r\n);\r\n\r\nCREATE TABLE produit(\r\nrefPrd INT PRIMARY KEY,\r\ndésignation  VARCHAR (30) UNIQUE ,\r\ndescriptions  VARCHAR (30),\r\ncatégorie VARCHAR (30),\r\nprixAchat FLOAT,\r\nnbrEnstock INT \r\n);\r\n\r\nCREATE TABLE panier(\r\ncodePanier INT PRIMARY KEY,\r\ncodeclt INT,\r\ndateCommande DATE ,\r\ndateCreation DATE,\r\ndateLivraison DATE ,\r\nMontantTotal FLOAT,\r\nFOREIGN KEY (codeclt) REFERENCES cliente(codeclt)\r\n);\r\n\r\nCREATE TABLE elementPanier(\r\nrefPrd INT PRIMARY KEY,\r\ncodePanier INT ,\r\nquantité INT ,\r\nprix FLOAT,\r\nFOREIGN KEY (refPrd) REFERENCES produit(refPrd),\r\nFOREIGN KEY ( codePanier) REFERENCES panier(codePanier)\r\n);\r\n\r\n\r\n-- d\r\nALTER TABLE elementPanier ADD CONSTRAINT check_min CHECK (quantité&amp;gt;=1);\r\n', 6),
(1054, 'CB355407', 403, 'CREATE DATABASE  Ecommerce ; \r\nUSE  Ecommerce; \r\nCREATE TABLE clie_nt (\r\n	codeclt INT PRIMARY KEY, \r\n	nom VARCHAR(20) ,\r\n	prenom VARCHAR(20) , \r\n	addresse VARCHAR(20) , \r\n	ville VARCHAR(20) , \r\n	tel INT   \r\n);\r\nCREATE TABLE Produit (\r\n	refPrd VARCHAR(20) PRIMARY KEY ,  \r\n	désignation VARCHAR(20) , \r\n	descriptio_n VARCHAR(50) , \r\n	catégorie VARCHAR(20) ,\r\n	prixachat FLOAT , \r\n	nbrEnstock INT  \r\n ) ;  \r\nCREATE TABLE Panier (\r\n 	codePanier INT PRIMARY KEY , \r\n 	codeclt INT , \r\n 	dateCreation DATE ,\r\n	dateCommande DATE , \r\n	datelivraison DATE  , \r\n	montanttotal FLOAT ,   \r\n 	FOREIGN KEY(codeclt) REFERENCES clie_nt(codeclt) \r\n ); \r\nCREATE TABLE ElementsPanier(\r\n 	refPrd VARCHAR(20) ,\r\n	codePanier  INT , \r\n	quantite INT , \r\n	prix FLOAT , \r\n	PRIMARY KEY(refPrd, codePanier) , \r\n	FOREIGN KEY(refPrd) REFERENCES Produit(refPrd) , \r\n	FOREIGN KEY(codePanier) REFERENCES Panier(codePanier) \r\n ); \r\nALTER TABLE Produit ADD CONSTRAINT unq UNIQUE(désignation) ;\r\nALTER TABLE ElementsPanier ADD CONSTRAINT che_qnt CHECK(quantite&gt;0) ;  ', 6),
(1055, 'DA107295', 403, '1/\r\nCREATE TABLE E-commerce;\r\n\r\nUSE E-commerce;\r\n\r\nCREATE TABLE CLIENT(\r\ncodeCLT INT\r\nnom VARCHAR\r\nprenom VARCHAR\r\nadresse TEXT\r\nville VARCHAR\r\ntel INT\r\n);\r\nCREATE TABLE Produit(\r\nrefPrd INT \r\ndésignation VARCHAR \r\nDESCRIPTION VARCHAR\r\ncatégorie INT\r\nprixAchat FLOAT\r\nnbrEnstock VARCHAR\r\n);\r\nCREATE TABLE PANIER(\r\ncodePanier INT\r\ncodeClt INT\r\ndateCreation DATE\r\ndateCommande DATE\r\ndateLivraison DATE\r\nMontantTotal FLOAT\r\n);\r\nCREATE TABLE ElementsPanier(\r\nrefPrd INT\r\ncodePanier INT\r\nquantité FLOAT\r\nprix FLOAT\r\n);\r\n2/\r\nCREATE TABLE E-commerce;\r\n\r\nUSE E-commerce;\r\n\r\nCREATE TABLE CLIENT(\r\ncodeCLT INT PRIMARY KEY,\r\nnom VARCHAR(30)\r\nprenom VARCHAR(30)\r\nadresse TEXT\r\nville VARCHAR(30)\r\ntel INT PRIMARY KEY,\r\n);\r\nCREATE TABLE Produit(\r\nrefPrd INT PRIMARY KEY,\r\ndésignation VARCHAR (30)\r\nDESCRIPTION VARCHAR (30)\r\ncatégorie INT PRIMARY KEY,\r\nprixAchat FLOAT\r\nnbrEnstock VARCHAR(30)\r\n);\r\nCREATE TABLE PANIER(\r\ncodePanier INT PRIMARY KEY,\r\ncodeClt INT PRIMARY KEY,\r\ndateCreation DATE\r\ndateCommande DATE\r\ndateLivraison DATE\r\nMontantTotal FLOAT\r\n);\r\nCREATE TABLE ElementsPanier(\r\nrefPrd INT PRIMARY KEY,\r\ncodePanier INT PRIMARY KEY,\r\nquantité FLOAT\r\nprix FLOAT\r\n);', 4),
(1056, 'DA109151', 403, 'create database Ecommerce;\r\nuse Ecommerce;\r\n\r\nCREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(50),\r\n    ville VARCHAR(50),\r\n    tel int\r\n);\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(300) UNIQUE,\r\n    description VARCHAR(300),\r\n    categorie VARCHAR(50),\r\n    prixAchat FLOAT,\r\n    nbrEnstock INT\r\n);\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal FLOAT,\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &gt;= 1),\r\n    prix FLOAT,\r\n    PRIMARY KEY (refPrd, codePanier),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);', 6),
(1057, 'DA107777', 403, 'create database Ecommerce ;\r\nuse Ecommerce ;\r\ncreate table client(\r\ncode_Clt int primary key,\r\nnom varchar(50)  ,\r\nprenom varchar(50) ,\r\nadress varchar(50),\r\nville varchar(50),\r\ntell varchar(50)\r\n);\r\ncreate table Produit (\r\nref_Prd int primary key, \r\ndésignation varchar(20),\r\n description varchar(20), \r\n catégorie varchar(20),\r\n prixAchat float, \r\n nbrEnstock int\r\n);\r\n\r\ncreate table panier (\r\ncodePanier int primary key ,\r\n code_Clt int,\r\n dateCreation date, \r\n dateCommande date,\r\n dateLivraison date,\r\n MontantTotal float ,\r\n foreign key (code_clt) references client(code_clt)\r\n);\r\n\r\ncreate table ElementsPanier (\r\nref_Prd int primary key ,\r\n codePanier int primary key,\r\n quantité int,\r\n prix float ,\r\nforeign key (ref_Prd) references Produit (ref_Prd)\r\n);\r\n\r\n----- c--------\r\n alter table product\r\n	 add constraint \r\n	 unique(désignation);\r\n\r\n/*------d--------*/\r\n ALTER TABLE ElementsPanier\r\nADD CONSTRAINT quantité CHECK (quantité &amp;amp;gt;= 1);', 6),
(1058, 'DB30759', 403, 'CREATE DATABASE E-commerce ;\r\nUSE E-commerce ;\r\nCREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(255),\r\n    prenom VARCHAR(255),\r\n    adresse VARCHAR(255),\r\n    ville VARCHAR(100),\r\n    tel VARCHAR(20)\r\n);\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(255) UNIQUE,\r\n    description TEXT,\r\n    categorie VARCHAR(50),\r\n    prixAchat DECIMAL(10, 2),\r\n    nbrEnstock INT\r\n);\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10, 2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT CHECK (quantite &gt;= 1),\r\n    prix DECIMAL(10, 2),\r\n    PRIMARY KEY (refPrd, codePanier),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier)\r\n);\r\n', 6),
(1059, 'DA104704', 403, 'CREATE DATABASE Ecommerce;\r\nUSE Ecommerce;\r\nCREATE TABLE Cliente(\r\ncodeClt VARCHAR(30) PRIMARY KEY,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(255),\r\nville VARCHAR(30),\r\ntel VARCHAR(15));\r\nCREATE TABLE Produit(\r\nrefPrd VARCHAR(30) PRIMARY KEY,\r\ndesignation VARCHAR(255),\r\ndescriptionn VARCHAR(255),\r\ncategorie VARCHAR(30),\r\nprixAchat FLOAT,\r\nnbrEnstock INT);\r\nDROP TABLE if EXISTS Panier;\r\nCREATE TABLE Panier(\r\ncodePanier VARCHAR(30) PRIMARY key,\r\ncodeClt VARCHAR(30),\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,\r\nMontantTotal FLOAT,\r\n);\r\nCREATE TABLE ElementsPanier(\r\nrefPrd VARCHAR(30),\r\ncodePanier VARCHAR(30),\r\nquanitite INT,\r\nprix FLOAT);\r\nALTER TABLE Panier ADD CONSTRAINT fk1 FOREIGN KEY (codeClt) REFERENCES Cliente(codeClt);\r\nALTER TABLE ElementsPanier ADD CONSTRAINT fk2 FOREIGN KEY (refPrd) REFERENCES Produit(refPrd);\r\nALTER TABLE ElementsPanier ADD CONSTRAINT fk3 FOREIGN KEY (codePanier) REFERENCES Panier(codePanier);\r\nALTER TABLE Produit ADD CONSTRAINT fk4 UNIQUE(designation);\r\nALTER TABLE ElementsPanier ADD CONSTRAINT hjdf CHECK (quanitite &gt; 0);\r\n', 6),
(1060, 'DB30758', 403, 'CREATE TABLE Client (\r\n    codeClt INT PRIMARY KEY,\r\n    nom VARCHAR(50),\r\n    prenom VARCHAR(50),\r\n    adresse VARCHAR(100),\r\n    ville VARCHAR(50),\r\n    tel VARCHAR(15)\r\n);\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY,\r\n    designation VARCHAR(100) UNIQUE,\r\n    description VARCHAR(500) ,\r\n    categorie VARCHAR(50),\r\n    prixAchat DECIMAL(10,2),\r\n    nbrEnstock INT,\r\n    CONSTRAINT chk_quantite_min CHECK (nbrEnstock &gt;= 1)\r\n);\r\n\r\nCREATE TABLE Panier (\r\n    codePanier INT PRIMARY KEY,\r\n    codeClt INT,\r\n    dateCreation DATE,\r\n    dateCommande DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal DECIMAL(10,2),\r\n    FOREIGN KEY (codeClt) REFERENCES Client(codeClt)\r\n);\r\n\r\nCREATE TABLE ElementsPanier (\r\n    refPrd INT,\r\n    codePanier INT,\r\n    quantite INT,\r\n    prix DECIMAL(10,2),\r\n    PRIMARY KEY (refPrd, codePanier),\r\n    FOREIGN KEY (refPrd) REFERENCES Produit(refPrd),\r\n    FOREIGN KEY (codePanier) REFERENCES Panier(codePanier),\r\n    CHECK (quantite &gt;= 1)\r\n);\r\n', 6),
(1061, 'CI1143', 403, '&amp;quot;1&amp;quot;\r\ncreate database E-commerce;\r\n \r\n use E-commerce;\r\n\r\ncreate table client (\r\n	codeCLT int,\r\n    nom VARCHAR(30),\r\n    prenom varchar(30),\r\n    adresse varchar(30),\r\n    ville varchar(30),\r\n    tel varchar(30),\r\n);\r\n\r\ncreate table Produit(\r\n  refPrd int,\r\n  désignation int,\r\n  description varchar(30),\r\n  catégorie varchar(30),\r\n  prixAchat decimal(10,2),\r\n   nbrEnstock int,\r\n);\r\ncreate table Panier (\r\ncodePanier int,\r\ncodeClt int,\r\ndateCreation date,\r\ndateCommande date,\r\ndateLivraison date,\r\nMontantTotal varchar(30),\r\n);\r\ncreate table ElementsPanier (\r\nrefPrd int,\r\ncodePanier int,\r\nquantité int,\r\nprix varchar(30),\r\n);\r\n\r\n&amp;quot;2&amp;quot;\r\ncreate database E-commerce;\r\n \r\n use E-commerce;\r\n\r\ncreate table client (\r\n	codeCLT int primary key,\r\n    nom VARCHAR(30),\r\n    prenom varchar(30),\r\n    adresse varchar(30),\r\n    ville varchar(30),\r\n    tel varchar(30),\r\n);\r\n\r\ncreate table Produit(\r\n  refPrd int primary key,\r\n  désignation int,\r\n  description varchar(30),\r\n  catégorie varchar(30),\r\n  prixAchat decimal(10,2),\r\n   nbrEnstock int,\r\n);\r\ncreate table Panier (\r\ncodePanier int primary key,\r\ncodeClt int,\r\ndateCreation date,\r\ndateCommande date,\r\ndateLivraison date,\r\nMontantTotal varchar(30),\r\n);\r\ncreate table ElementsPanier (\r\nrefPrd int,\r\ncodePanier int,\r\nquantité int,\r\nprix varchar(30),\r\n  foreign key (refPrd) references Produit(refPrd),\r\n    foreign key (codePanier) references Panier(codePanier)\r\n);\r\n\r\nALTER TABLE ElementsPanier  ADD FOREIGN KEY (refPrd) REFERENCES Produit(refPrd);\r\n\r\nALTER TABLE ElementsPanier  ADD FOREIGN KEY (codePanier) REFERENCES Panier(codePanier);\r\n\r\n\r\n\r\n\r\n\r\n\r\nALTER TABLE Client ADD CONSTRAINT codeClt PRIMARY KEY (codeClt);\r\nALTER TABLE produits DROP CONSTRAINT codeClt;\r\n\r\nALTER TABLE Produit  ADD CONSTRAINT refPrd PRIMARY KEY (refPrd);\r\nALTER TABLE produits DROP CONSTRAINT refPrd;\r\n\r\nALTER TABLE Panier ADD CONSTRAINT codePanier PRIMARY KEY (codePanier);\r\nALTER TABLE produits DROP CONSTRAINT codePanier;\r\n\r\n\r\n', 6),
(1062, 'DA102389', 403, 'create database E-commerce;\r\nuse E-commerce;\r\ncreate table Client(\r\ncodeClt int,\r\nnom varchar(30),\r\nprenom varchar(30),\r\nadresse varchar(30),\r\nville varchar(30),\r\ntel int)\r\ncreate table Produit(\r\nrefprd int,\r\ndesinition varchar(30),\r\ndescriptions varchar(30),\r\ncategorie varchar(30),\r\nprixAchat float(30),\r\nnbrEnstock int)\r\ncreate table Panier(\r\ncodePanier int,\r\ncodeClt int,\r\ndateCreation date,\r\ndateCommande date,\r\ndateLivraison date,\r\nmontantTotale float)\r\ncreate table ElementsPanier(\r\nrefPrd varchar(30),\r\ncodePanier int,\r\nquantité int,\r\nprix float)\r\nalter table Client\r\nadd constraint pk_codeClt primary key codeClt\r\nalter table Produit\r\nadd constraint pk_refPrd primary key refPrd\r\nalter table Produit\r\nadd constraint uc_désignation unique désignation\r\nalter table Panier\r\nadd constraint pk_codePanier, primary key codePanier\r\nalter table Panier\r\nadd constraint FOREIGN KEY fk_codeClt  REFERENCES Client(codeClt)\r\nalter table ElementsPanier\r\nadd constraint pk_refPrd primary key refPrd\r\nalter table ElementsPanier\r\nadd constraint pk_codePanier primary key codePanier\r\nalter table ElementsPanier\r\nadd constraint FOREIGN KEY fk_refPrd REFERENCES Produit (refPrd)\r\nalter table ElementsPanier\r\nadd constraint FOREIGN KEY fk_codePanier REFERENCES Panier (codePanier)\r\nalter table ElementsPanier\r\nadd constraint chk_quantité check(min(quantité)=1)\r\n', 6),
(1063, 'DA107777', 404, '-------------------a------------------\r\n\r\nselect upper(nom) ,upper (prenom) from clients \r\nwhere ville  = &amp;amp;amp;amp;#039;tanger&amp;amp;amp;amp;#039;\r\norder by nom ;\r\n\r\n-----b-------------\r\nselect designation , description \r\nfrom produit p \r\ninner join elementpanier e \r\non p.refprd = e.refprd\r\ninner join panier pa\r\non pa.codepanier = p.codepanier\r\nwhere moth(datecommande) = 4 and year (datecommand) = 2024 ;\r\n\r\n---------------------------c----------------------------\r\nselect nom , prenom , count\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n---------------------e-----------------------\r\nselect * from produit \r\nwhere reprd not in \r\n(select p.* \r\nfrom produit p \r\ninner join panier pa\r\non pa . code panier = p. codepanier\r\nwhere mounth(datelivraison) = 4 and year (date livrasion) =2024 ;', 4),
(1064, 'DA104117', 403, '1.\r\ncreate database E_commerce ;\r\nuse E_commerce ;\r\ncreate table client(\r\ncodeclt int ,\r\nnom varchar(30),\r\nprenom varchar(30),\r\nadresse varchar(30),\r\nville varchar(30),\r\ntel  BOOLEAN\r\n );\r\n\r\n\r\n create table Produit(\r\n refPrd int,\r\n signation int,\r\n descroption int,\r\n categorie int,\r\n prixAchat DECIMAL(10, 2),\r\n nbrEnstock varchar(30)\r\n );\r\n\r\n\r\n create table ElementsPanier(\r\n refPrd int,\r\n codeClt int,\r\n dateCommande date,\r\n dateLivraison date,\r\n MontantTotal DECIMAL(10, 2)\r\n );\r\n\r\n  \r\n create table Panier(\r\n codePanier int,\r\n codeClt int,\r\n dateCreation date,\r\n dateCommand date,\r\n dateLivraison date,\r\n MontantTotal DECIMAL(10, 2)\r\n );\r\n2.A\r\n  alter table client\r\n  ADD constraint  primary key (codeclt);\r\n  alter table Produit\r\n  ADD constraint primary key (refPrd);\r\n   alter table ElementsPanier \r\n   ADD constraint primary key (refPrd);\r\n alter table Panier \r\n ADD constraint primary key (codePanier);\r\n\r\n B.\r\n ALTER TABLE ElementsPanier ADD FOREIGN KEY (dateCommande) REFERENCES ElementsPanier(Num_Agence);\r\n ALTER TABLE ElementsPanier ADD  FOREIGN KEY (dateLivraison) REFERENCES ElementsPanier(Num_Client);\r\n ALTER TABLE ElementsPanier ADD  FOREIGN KEY (MontantTotal) REFERENCES ElementsPanier(Num_Client)\r\nc.Designation varchar(30) UNIQUE,\r\nD.\r\nSELECT Ville, Designation AS Produit, MAX(Quantite) AS TotalCommandes\r\nFROM (SELECT Ville, Designation, SUM(Quantite) AS Quantite\r\n    FROM Commandes\r\n     inner JOIN Clients ON Commandes = Clients\r\n    inner JOIN Produits ON Commandes = Produits\r\n    GROUP BY Ville, Designation\r\n) AS CommandesParProduit\r\nGROUP BY Ville\r\nORDER BY Ville;\r\n', 6),
(1065, 'VM18941', 404, '-- Noms et prénoms en majuscule des clients qui habitant ‘Tanger’ classés dans l’ordre alphabétique des noms.\r\n\r\nSELECT UPPER(nom) AS nom, UPPER(prenom) AS prennom FROM C_LIENT WHERE ville = &amp;#039;Tanger&amp;#039; ORDER BY nom ;\r\n\r\n-- Désignation et descrption des produits commandés en mois d’avril 2024.\r\n\r\nSELECT désignation ,descrption FROM produit WHERE  ( select dateCommande FROM panier WHERE  dateCommande = 2024-04); \r\n\r\n-- Noms et prénoms des clients qui ont commandés au moins deux paniers.\r\n\r\nSELECT nom,prenom FROM C_LIENT WHERE (SELECT quantité FROM ElementsPanier WHERE quantité &amp;gt;= 2 ),\r\n\r\n--	Le/Les produit(s) le/les plus commandé(s) par ville.\r\n\r\n\r\nSELECT MAX()\r\n\r\n--	Les produits non vendus en mois d&amp;#039;avril 2024.--', 5),
(1066, 'VM18941', 403, 'CREATE DATABASE E_commerce ;\r\n\r\nUSE E_commerce ;\r\nCREATE TABLE C_LIENT (\r\ncodeClt INT  ,\r\nnom VARCHAR(25) ,\r\nprenom varchar(25),\r\nadress TEXT ,\r\nville varchar(25),\r\ntel INT \r\n\r\n\r\n);\r\nALTER TABLE C_LIENT ADD CONSTRAINT PRIMARY  key  (codeClt) ;\r\n \r\n\r\nCREATE TABLE produit (\r\nrefPrd VARCHAR (25),\r\ndésignation TEXT,\r\ndescrption  TEXT,\r\ncatégorie VARCHAR(25),\r\nprixAchat FLOAT ,\r\nnbrEnstock INT \r\n\r\n\r\n);\r\nALTER TABLE produit ADD CONSTRAINT PRIMARY  key  (refPrd) ;\r\n\r\nCREATE TABLE Panier (\r\ncodePanier INT , \r\ncodeClt INT , \r\ndateCreation DATE ,\r\ndateCommande DATE ,\r\ndateLivraison DATE ,\r\nMontantTotal FLOAT ,\r\n\r\n); \r\nALTER TABLE Panier ADD CONSTRAINT PRIMARY  key  (codePanier) ;\r\n\r\nALTER TABLE panier ADD CONSTRAINT FOREIGN key  (codeClt) REFERENCES C_LIENT(codeClt);\r\n \r\nCREATE TABLE ElementsPanier (\r\nrefPrd VARCHAR(25),\r\ncodePanier int ,\r\nquantité INT,\r\nprix FLOAT\r\n);\r\n\r\nALTER TABLE ElementsPanier ADD CONSTRAINT FOREIGN key  (refPrd) REFERENCES produit(refPrd);\r\nALTER TABLE ElementsPanier ADD CONSTRAINT FOREIGN key  (codePanier) REFERENCES Panier(codePanier);\r\n ALTER TABLE ElementsPanier ADD CONSTRAINT PRIMARY  key  (refPrd,codePanier) ;\r\n\r\n', 6),
(1067, 'DA102389', 404, 'questions (a)\r\nselect Noms,lower(prénoms)from client\r\nwhere ville=&amp;amp;#039;tanger&amp;amp;#039;\r\norder by Noms\r\ngroup by prénoms\r\n(b)\r\nselect désignation,descriptions from produit\r\ninner join panier\r\nwhere dateCommande=&#039;04-2024&#039;\r\n(c)\r\nselect noms,prenom from clients\r\njoin Panier\r\non clients.codecl=Panier.codecl\r\njoin ElementsPanier\r\non clients.codecl=ElementsPanier.codepanier\r\nwhere min(quantité)=2\r\n\r\n', 6),
(1068, 'DA105622', 403, '\r\n\r\nCREATE DATABASE E-commerce;\r\n\r\n\r\nUSE E-commerce;\r\n\r\n\r\n\r\n\r\n\r\nCREATE TABLE CLient (\r\n    codeClt VARCHAR(1) INT PRIMARY KEY,\r\n    nom VARCHAR(255),\r\n    Prenometu VARCHAR(255),\r\n    adresse FLOAT ,\r\n    tel INT,\r\n    \r\n);\r\n\r\n\r\nCREATE TABLE Produit (\r\n    refPrd INT PRIMARY KEY ,\r\n   designation VARCHAR(255) UNIQUE,\r\n    categorie VARCHAR(255),\r\n    prix Achat FLOAT,\r\n    nbrEnstock INT,\r\n);\r\n\r\n\r\nCREATE TABLE Panier (\r\n    codePanier VARCHAR(1)  INT PRIMARY KEY,\r\n    dateCreation DATE,\r\n    dateCommende DATE,\r\n    dateLivraison DATE,\r\n    MontantTotal VARCHAR(255),\r\n     codeClt VARCHAR(1),\r\n    FOREIGN KEY (codeClt) REFERENCES Enseignant(Client)\r\n);\r\n\r\n\r\nCREATE TABLE ElementsPanier(\r\n    refPrd INT PRIMARY KEY,\r\n    codePanier VARCHAR(1)  INT PRIMARY KEY,\r\n    quantite INT CHECK ( quantite&gt;=1),\r\n    prix FLOAT,\r\n    PRIMARY KEY(refPrd,codePanier),\r\n FOREIGN KEY (refPrd) REFERENCES Enseignant(Produit)\r\n FOREIGN KEY (codePanier) REFERENCES Enseignant(Panier)\r\n);\r\n', 6),
(1069, 'DA107777', 405, '--------------------------a---------------------------------------\r\nCREATE USER &amp;amp;amp;amp;#039;User1&amp;amp;amp;amp;#039;@&amp;amp;amp;amp;#039;lvendeur&amp;amp;amp;amp;#039; IDENTIFIED BY &amp;amp;amp;amp;#039; ecom2024@ &amp;amp;amp;amp;#039;;\r\n\r\n-------------------------b--------------------------\r\nGRANT ALL PRIVILEGES ON Ecommerce.* TO &amp;amp;amp;#039;User1&amp;amp;amp;#039;@&amp;amp;amp;#039;lvendeur&amp;amp;amp;#039;;\r\n-----------------------------c------------------------\r\nREVOKE DELETE ON Ecommerce.* FROM &amp;amp;amp;amp;#039;User1&amp;amp;amp;amp;#039;@&amp;amp;amp;amp;#039;ecom2024@ &amp;amp;amp;amp;#039;;\r\nREVOKE update ON Ecommerce.* FROM &amp;amp;amp;amp;#039;User1&amp;amp;amp;amp;#039;@&amp;amp;amp;amp;#039;ecom2024@ &amp;amp;amp;amp;#039;;\r\n-----------------------------------d-----------------------------\r\nmysqldump -u root E_commerce -P p3307 &amp;amp;lt;     C:\\backup\\E_commerce.sql \r\nmysql -u root E_commerce _v2 -P p3307 &amp;amp;lt;     C:\\backup\\E_commerce.sql ', 5),
(1070, 'DA101003', 404, 'a-\r\nSELECT UPPER(nom) AS Nom_Majuscule, UPPER(prenom) AS Prenom_Majuscule\r\nFROM Client\r\nWHERE ville = &amp;amp;#039;Tanger&amp;amp;#039;\r\nORDER BY nom;\r\n\r\nb-\r\nSELECT p.designation, p.description\r\nFROM Produit p\r\nJOIN ElementsPanier ep ON p.refPrd = ep.refPrd\r\nJOIN Panier pa ON ep.codePanier = pa.codePanier\r\nWHERE EXTRACT(YEAR_MONTH FROM pa.dateCommande) = 202404;\r\nc-\r\nSELECT c.nom, c.prenom\r\nFROM Client c\r\nJOIN Panier p ON c.codeClt = p.codeClt\r\nGROUP BY c.codeClt, c.nom, c.prenom\r\nHAVING COUNT(p.codePanier) &amp;amp;gt;= 2;\r\nd-\r\nSELECT ville, p.designation, COUNT(ep.refPrd) AS Nombre_Commandes\r\nFROM Client c\r\nJOIN Panier pa ON c.codeClt = pa.codeClt\r\nJOIN ElementsPanier ep ON pa.codePanier = ep.codePanier\r\nJOIN Produit p ON ep.refPrd = p.refPrd\r\nGROUP BY ville, p.designation\r\nHAVING COUNT(ep.refPrd) = (\r\n    SELECT MAX(commandes)\r\n    FROM (\r\n        SELECT COUNT(ep.refPrd) AS commandes\r\n        FROM Client cl\r\n        JOIN Panier pan ON cl.codeClt = pan.codeClt\r\n        JOIN ElementsPanier ele ON pan.codePanier = ele.codePanier\r\n        GROUP BY cl.ville, ele.refPrd\r\n    ) AS sub\r\n    WHERE sub.ville = ville\r\n);\r\n\r\ne-\r\nSELECT *\r\nFROM Produit\r\nWHERE refPrd NOT IN (\r\n    SELECT ep.refPrd\r\n    FROM ElementsPanier ep\r\n    JOIN Panier pa ON ep.codePanier = pa.codePanier\r\n    WHERE EXTRACT(YEAR_MONTH FROM pa.dateCommande) = 202404\r\n);\r\n', 7),
(1071, 'ZG166772', 405, 'a- CREATE USER &amp;#039;vendeur&amp;#039; IDENTIFIED BY &amp;#039;ecom2024@&amp;#039;;\r\n\r\nb_ GRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;@&#039;localhost&#039;;\r\nc_ REVOKE UPDATE, DELETE ON E_commerce.* FROM &#039;vendeur&#039;@&#039;localhost&#039;;', NULL),
(1072, 'DB30758', 404, 'a) SELECT UPPER(nom) AS Nom_Majuscule, UPPER(prenom) AS Prenom_Majuscule\r\nFROM Client\r\nWHERE ville = &amp;amp;amp;#039;Tanger&amp;amp;amp;#039;\r\nORDER BY nom;\r\n_____________________________________________________________________________________________\r\nb) SELECT p.designation, p.description\r\nFROM Produit p\r\nJOIN ElementsPanier ep ON p.refPrd = ep.refPrd\r\nJOIN Panier pan ON ep.codePanier = pan.codePanier\r\nWHERE YEAR(pan.dateCommande) = 2024 AND MONTH(pan.dateCommande) = 4;\r\n_______________________________________________________________________________________\r\nc) SELECT c.nom, c.prenom\r\nFROM Client c\r\nJOIN Panier p ON c.codeClt = p.codeClt\r\nGROUP BY c.codeClt, c.nom, c.prenom\r\nHAVING COUNT(p.codePanier) &amp;gt;= 2;\r\n_____________________________________________________________________________________\r\nd) SELECT ville, refPrd, MAX(quantity) as MostOrderedProduct \r\nFROM ElementsPaniers \r\nINNER JOIN Client ON ElementsPaniers.codePaniers = Client.codeClt \r\nGROUP BY ville;\r\n\r\n\r\n\r\n_____________________________________________________________________________________________\r\ne) SELECT * \r\nFROM Produit \r\nWHERE refPrd NOT IN (\r\n    SELECT refPrd \r\n    FROM ElementsPaniers \r\n    INNER JOIN Paniers ON ElementsPaniers.codePaniers = Paniers.codePaniers \r\n    WHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024\r\n);', 6),
(1073, 'CI3546', 403, 'create table client(\r\nnum_client int primary key,(\r\ncodeClt varhar(255),\r\nnom varchar(255),\r\nprenom varchar(255) ,\r\nville varchar(255),\r\nadresse varchar(255),\r\ntel \r\n);\r\nceate table  Produit (\r\nnum_produit int primary key(\r\nrefPrd varchar (255),\r\ndésignation  varchar(255),\r\ndescription varchar(255),\r\ncatégorie  varchar (255),\r\n prixAchat varchar (255),\r\nnbrEnstock varchar(255),\r\n);\r\ncreate table Panier(\r\nnum_prodiut ynt primary key(\r\ncodePanier varchar (255),\r\ncodeClt varchar (255),\r\ndateCreation varchar(255),\r\ndateCommande varchar (255),\r\ndateLivraison varchar(255),\r\nmontannt decimal(10,2),\r\n\r\nforeigne key(code_ Panier)\r\nreference   Panier (code_ Panier)\r\nforeigne key(codeClt)\r\nreference codeClt (codeClt)\r\n\r\nforeigne key(dateCreation)\r\nreference  dateCreation  ( dateCreation)\r\n\r\nforeigne key(dateCommande)\r\nreference dateCommande  ( dateCommande)\r\n\r\nforeigne key(dateLivraison)\r\nreference dateLivraison ( dateLivraison)\r\n);\r\ncreate table ElementsPanier int primary key(\r\nrefPrd  int,\r\ncodePanier int,\r\nquantité varchar(255),\r\nprix varchar (1000),\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', 4),
(1074, 'DB30758', 405, 'a) CREATE USER &#039;vendeur&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\n____________________________________________________________________________\r\nb)GRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;@&#039;localhost&#039;;\r\n__________________________________________________________________________\r\nc) REVOKE UPDATE, DELETE ON E_commerce.* FROM &#039;vendeur&#039;@&#039;localhost&#039;;\r\n______________________________________________________________________________\r\nd) ', 3),
(1075, 'DA109151', 404, 'a-\r\nSELECT UPPER(nom), UPPER(prenom) FROM Client WHERE ville = &amp;amp;amp;#039;Tanger&amp;amp;amp;#039; ORDER BY nom;\r\n\r\nc-\r\nSELECT c.nom, c.prenom  FROM Client c \r\nJOIN Panier p ON c.codeClt = p.codeClt GROUP BY c.nom, c.prenom \r\nHAVING COUNT(p.codePanier) &gt;= 2;\r\n', 4),
(1076, 'DA104704', 404, 'SELECT designation,descriptionn FROM produit p\r\nINNER JOIN elementspanier e\r\nON e.refPrd = p.refPrd\r\nINNER JOIN Panier p2\r\nON p2.codePanier = e.codePanier\r\nWHERE (MONTH(dateCommande) = 3 AND YEAR(dateCommande) = 2024);\r\n\r\n\r\nSELECT nom,prenom FROM Cliente c\r\nINNER JOIN panier p\r\nON c.codeClt = p.codeClt\r\nINNER JOIN ElementsPanier e\r\nON e.codePanier = p.codePanier\r\nWHERE e.quanitite &gt; 1;\r\n\r\nSELECT p.refPrd FROM produit p\r\nINNER JOIN elementspanier e\r\nON p.refPrd = e.refPrd\r\nINNER JOIN panier p2\r\nON p2.codePanier = e.codePanier\r\nINNER JOIN cliente c\r\nON c.codeClt = p2.codeClt\r\nGROUP BY c.ville\r\nHAVING MAX(e.quanitite * e.prix);\r\n \r\n\r\nSELECT p.refPrd FROM produit p\r\nINNER JOIN elementspanier e\r\nON e.refPrd = p.refPrd\r\nINNER JOIN Panier p2\r\nON p2.codePanier = e.codePanier\r\nWHERE (MONTH(p2.dateLivraison) &lt;&gt; 3 AND YEAR(p2.dateLivraison) &lt;&gt; 2024);', 8),
(1077, 'VA159550', 404, '-- a-	Noms et prénoms en majuscule des clients qui habitant ‘Tanger’ classés dans l’ordre alphabétique des noms.\r\nSELECT UPPER(nom) AS &quot;Nom&quot;, UPPER(prenom) AS &quot;prenom&quot; FROM client\r\nORDER BY nom;\r\n\r\n-- b-	Désignation et description des produits commandés en mois d’avril 2024\r\nSELECT désignation, DESCRIPTION FROM produit\r\nWHERE (SELECT MONTH(dateCommande) FROM panier) = 4 \r\nAND (SELECT YEAR(dateCommande) FROM panier) = 2024; \r\n\r\n\r\n-- c-	Noms et prénoms des clients qui ont commandés au moins deux paniers.\r\nSELECT nom, prenom FROM client\r\nJOIN panier  ON client.codeClt = panier.codeClt\r\nJOIN ElementsPanier ON panier.codePanier = elementspanier.codePanier\r\nWHERE quantite &gt;= 2;\r\n\r\n\r\n-- d-	Le/Les produit(s) le/les plus commandé(s) par ville.\r\n\r\nSELECT désignation, désignation, MAX(elementspanier.quantite) FROM produit\r\nJOIN elementspanier ON elementspanier.refPrd = produit.refPrd\r\nJOIN  panier  ON elementspanier.codePanier = panier.codePanier\r\nJOIN client ON client.codeClt = panier.codeClt\r\nGROUP BY client.ville;\r\n\r\n-- e-	Les produits non vendus en mois d&#039;avril 2024.\r\nSELECT * FROM produit\r\nWHERE refPrd NOT IN \r\n(SELECT refPrd FROM elementspanier JOIN panier ON panier.codePanier = elementspanier.codePanier WHERE YEAR(panier.dateCommande) = 2024 AND MONTH(panier.dateCommande) = 04)\r\n', 8),
(1078, 'DA109151', 405, 'a-\r\nCREATE USER &#039;vendeur&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\nb-\r\nGRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;;', 2),
(1079, 'DA102534', 405, '-- a\r\nCREATE USER &#039;vendeur&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\n-- b\r\nGRANT ALL PRIVILEGES ON e_commerce.* TO &#039;vendeur&#039;;\r\n-- c\r\nREVOKE UPDATE ON e_commerce.* FROM &#039;vendeur&#039;;\r\nREVOKE DELETE ON e_commerce.* FROM &#039;vendeur&#039;;\r\n-- d\r\nmysqldump --USER= root --PASSWORD=123 result-FILE=C:\\backup\\E_commerce.sql --DATABASES E_commerce;\r\n-- e\r\n\r\nSOURCE  C:\\backup\\E_commerce _v2;', 5);
INSERT INTO `user_rep` (`id`, `iduser`, `id_Q`, `rep`, `note`) VALUES
(1080, 'DA102534', 404, '-- a\r\nSELECT UPPER(cl.nom), upper(cl.prenom)\r\nFROM clientes cl\r\nWHERE cl.vilee = &#039;TANGER&#039;\r\nORDER BY cl.nom;\r\n\r\n-- b\r\nSELECT p.designation,p.descrption\r\nFROM produit p\r\nLEFT JOIN elementspanier ep ON p.refPrd = ep.refPrd\r\nLEFT JOIN panier pn ON ep.codePanier = pn.codePanier\r\nWHERE MONTH(pn.dateCommand) = 3 AND  YEAR(pn.dateCommand) = 2024;\r\n\r\n-- c\r\nSELECT cl.nom, cl.prenom\r\nFROM clientes cl \r\nINNER JOIN panier pn ON cl.codeClt = pn.codeClt\r\nINNER JOIN elementspanier el ON pn.codePanier = el.codePanier\r\nWHERE el.quantite &gt; 1;\r\n\r\n-- d\r\nSELECT cl.vilee, max(ep.prix * ep.quantite)\r\nFROM elementspanier ep\r\nINNER JOIN produit p ON p.refPrd = ep.refPrd\r\nINNER JOIN panier pn ON ep.codePanier = pn.codePanier\r\nINNER JOIN clientes cl ON pn.codeClt = cl.codeClt\r\nGROUP BY cl.vilee;\r\n\r\n-- e\r\nSELECT p0.*\r\nFROM produit p0\r\nINNER JOIN elementspanier ep ON ep.refPrd = p0.refPrd\r\nINNER JOIN panier pn ON pn.codePanier = ep.codePanier \r\nWHERE (MONTH(pn.dateLivraison) &lt;&gt; 3 AND YEAR(pn.dateLivraison) &lt;&gt; 2024) AND ;', 8),
(1081, 'CI1143', 404, 'SELECT MONTH(DateLiv) AS MoisLiv,SUM(Qte * PrixAchat) AS CA\r\nFROM produit p\r\nINNER JOIN vente v\r\nUSING (ref)\r\nWHERE YEAR(CURDATE()) =YEAR(Dateliv)\r\nGROUP BY MoisLiv;\r\n\r\n\r\n\r\n\r\n\r\nSELECT Designation,SUM(qte) FROM \r\nproduit p \r\nINNER JOIN \r\nvente v\r\nUSING (ref)\r\nWHERE YEAR(DateLiv) = YEAR(CURDATE())\r\nAND MONTH(DateLiv) = MONTH(CURDATE())\r\nGROUP by Designation\r\nHAVING SUM(qte) = (\r\nSELECT SUM(qte) AS QteMaxV\r\nFROM vente\r\nGROUP BY ref\r\nORDER BY  QteMaxV DESC \r\nLIMIT 1)\r\n', 2),
(1082, 'DA102389', 405, '(a)\r\ncreate user vendeur on E_commerce \r\n identified by ecom2024@\r\n (b)\r\n grant all privilege to vendeur\r\n on E_commerce\r\n (c)\r\n grant update,delete to vendeur\r\n on E_commerce\r\n( d)\r\n mysql -u vendeur -p ecom2024@ C:\\backup\\E_commerce.sql\r\n', 3),
(1083, 'DA104704', 405, 'CREATE USER &#039;vendeur&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\n\r\nGRANT ALL privileges ON E_commerce.* to &#039;vendeur&#039;;\r\n\r\nREVOKE UPDATE ON E_commerce FROM &#039;vendeur&#039;;\r\nREVOKE DELETE ON E_commerce FROM &#039;vendeur&#039;;\r\n\r\nmysqldump --USER = vendeur --PASSWORD  --result-file=C:\\backup\\E_commerce.sql\r\n--databases E_commerce;\r\n\r\nSOURCE C:\\backup\\E_commerce.sql;', 5),
(1084, 'DB30143', 403, 'create database E_commerce;\r\nuse E_commerce;\r\ncreate table Clients \r\n(codeClt int,\r\n nom varchar(30), \r\n prenom varchar(30), \r\n adresse varchar(30), \r\n ville varchar(30), \r\n tel varchar(30));\r\ncreate table Produit \r\n(refPrd varchar(30), \r\ndésignation varchar(30), \r\ndescription varchar(30),\r\n catégorie varchar(30),\r\n prixAchat float,\r\n nbrEnstock int);\r\n create table Panier \r\n (codePanier int, \r\n codeClt int,\r\n dateCreation date,\r\n dateCommande date,\r\n dateLivraison date,\r\n MontantTotal float);\r\n create table ElementsPanier \r\n (refPrd varchar(30) ,\r\n codePanier int,\r\n quantité int,\r\n prix float);\r\n\r\n alter table Clients add primary key(codeClt);\r\n alter table Produit  add primary key(refPrd);\r\n alter table Panier add primary key(codePanier);\r\n alter table ElementsPanier add primary key(refPrd,codePanier);\r\n\r\n alter table Panier add foreign key(codeClt) references Clients(codeClt);\r\n alter table ElementsPanier add foreign key(refPrd) references Produit (refPrd);\r\n alter table ElementsPanier add foreign key(codePanier) references Panier (codePanier);\r\n\r\n alter table Produit add unique(désignation);\r\n alter table ElementsPanier add constraint check_quantite check(quantité&amp;gt;1);', 6),
(1085, 'DB30143', 405, ' create user vendeur  identified by &amp;#039;ecom2024@&amp;#039;;\r\n grant all privileges on E_commerce .* to vendeur;\r\n revoke update ,delete on  E_commerce .* from vendeur;\r\n mysqldump -u root -P 3307 -p  E_commerce &amp;gt; C:\\backup\\E_commerce.sql\r\n mysql  -u root -P 3307 -p  E_commerce _v2 &amp;lt; C:\\backup\\E_commerce.sql', 5),
(1086, 'DA108545', 404, '-- 3\r\n-- a\r\nSELECT UPPER(nom),UPPER(prenom)\r\nFROM cliente\r\nWHERE ville = &#039;Tanger&#039;\r\nORDER BY nom\r\n\r\n-- b\r\nSELECT prd.désignation, prd.descriptions, pn.dateCommande\r\nFROM produit prd , panier pn\r\nWHERE pn.dateCommande = &#039;avril 2024&#039;\r\n\r\n-- c\r\nSELECT nom, prenom\r\nFROM cliente clt\r\nINNER JOIN panier pn ON clt.codeclt = pn.codeclt\r\nINNER JOIN elementpanier elmp ON pn.codePanier = elmp.codePanier;\r\n\r\n-- d\r\nSELECT MAX(COUNT(prix)), ville\r\nFROM elementpanier, cliente\r\ngroup BY ville\r\n\r\n-- e\r\nSELECT prd.refPrd, prd.catégorie,p.dateLivraison\r\nFROM produit prd, panier p\r\nWHERE WHERE p.dateLivraison = &#039;avril 2024&#039;', 5),
(1087, 'CB355407', 405, 'a  -  mysql -u root -p -P 3307 \r\na  - CREATE USER &quot;vendeur&quot; IDENTIFEID BY &quot;ecom2024@&quot;;\r\nb  - GRANT ALL PRIVILEGS ON *.* to &quot;vendeur&quot; @&quot;localhost&quot;;\r\nc  - revoke modify,delete;\r\nd  - mysqldump -u root -p -P 3307  E_commerce &gt; &quot;C:\\backup\\E_commerce.sql &quot; \r\ne  - mysqldump -u root -p -P 3307 &quot; E_commerce _v2&quot; &lt; &quot;C:\\backup\\E_commerce.sql &quot; ', 4),
(1088, 'DB30759', 404, 'a \r\nSELECT UPPER(nom) AS Nom_Maj, UPPER(prenom) AS Prenom_Maj\r\nFROM Client\r\nWHERE ville = &#039;Tanger&#039;\r\nORDER BY nom ASC ;\r\nb\r\nSELECT p.designation, p.descriptions\r\nFROM Produit p\r\nJOIN ElementsPanier ep ON p.refPrd =ep.refPrd\r\nJOIN Panier pa ON ep.codePanier =pa.codePanier\r\nWHERE YEAR FROM pa.dateCommande =2024\r\n  AND MONTH FROM pa.dateCommande =4;\r\nc\r\nSELECT UPPER(c.nom) AS Nom_Maj, UPPER(c.prenom) AS Prenom_Maj\r\nFROM Client c\r\nJOIN Panier p ON c.codeClt = p.codeClt\r\nGROUP BY c.codeClt,c.nom,c.prenom\r\nHAVING COUNT(p.codePanier) &gt;= 2;\r\nd\r\nSELECT ville,p.designation, COUNT(*) AS TotalCommandes\r\nFROM Client c\r\nJOIN Panier pa ON c.codeClt = pa.codeClt\r\nJOIN ElementsPanier ep ON pa.codePanier = ep.codePanier\r\nJOIN Produit p ON ep.refPrd = p.refPrd\r\nGROUP BY ville,p.designation\r\nORDER BY ville,TotalCommandes DESC;\r\ne\r\nSELECT p.designation,p.descriptions\r\nFROM Produit p\r\nWHERE p.refPrd NOT IN (\r\n    SELECT ep.refPrd\r\n    FROM ElementsPanier ep\r\n    JOIN Panier pa ON ep.codePanier =pa.codePanier\r\n    WHERE YEAR FROM pa.dateCommande =2024\r\n      AND MONTH FROM pa.dateCommande =4\r\n);\r\n ', 8),
(1089, 'VA159550', 405, '-- a-	Créer un utilisateur « vendeur » avec « ecom2024@ » comme mot de passe.\r\nCREATE USER &#039;vendeur&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\n\r\n-- b-	Associer tous les privilèges  à utilisateur « vendeur »  sur la base de données « E_commerce ».\r\nGRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;@&#039;localhost&#039;;\r\n\r\n-- c-	Interdire à « vendeur » la permission de modifier ou de supprimer dans la base de données « E_commerce ».\r\nREVOKE DELETE, UPDATE ON E_commerce.* FROM &#039;vendeur&#039;@&#039;localhost&#039;;\r\n\r\n-- d-	Exporter la base de données vers le chemin « C:\\backup\\E_commerce.sql »\r\nmysqldump -u root -p 3307 E_commerce &gt; C:\\backup\\E_commerce.sql;\r\n\r\n-- e-	Importer le backup dans la base de données &quot; E_commerce _v2&quot;\r\nmysql -u root -p 3307 E_commerce _v2 &lt; C:\\backup\\E_commerce.sql;', 5),
(1090, 'VM18941', 405, '4 )\r\na)\r\nCREATE USER vendeur IDENTIFIED BY   PASSWORD &amp;#039;ecom2024@&amp;#039;;\r\nb)\r\n\r\n GRANT ALL privillages ON E_commerce TO vendeur ;', 2),
(1091, 'DA108545', 405, '-- 4\r\n-- a\r\nCREATE USER &#039;vendeur&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\n\r\n-- b\r\nGRANT ALL PRIVILEGES  ON E_commerce.* TO &#039;vendeur&#039;;\r\n-- c\r\nREVOKE DELETE, UPDATE ON E_commerce.* FROM &#039;vendeur&#039;;', 4),
(1092, 'DA107295', 404, 'SELECT UPPER (nom,prenom) from C_lient where ville =  &amp;#039;tanger&amp;#039; ORDER BY ASC .\r\nSELECT désignation ,description from produit where (select datecommandés from panier where datacommandés)\r\nSELECT nom,prenom from C_lient where (select quntité from ELmentpanier where quntité &amp;gt;=2)\r\nSELECT MAX(refprd) from produit', 4),
(1093, 'DA104117', 404, '#a\r\nSELECT UPPER(Nom) AS Nom_Majuscule, UPPER(Prenom) AS Prenom_Majuscule\r\nFROM CLIENT\r\nWHERE Ville = &#039;Tanger&#039;\r\nORDER BY Nom;\r\n#b\r\nSELECT Designation, Description\r\nFROM Produits\r\nWHERE IdProduit IN (\r\n    SELECT IdProduit FROM Commandes\r\n    WHERE MONTH(DateCommande) = 4 AND YEAR(DateCommande) = 2024\r\n);\r\n#c\r\nSELECT Nom, Prenom FROM Clients\r\nWHERE NumClient IN (\r\n    SELECT NumClient\r\n    FROM Commandes\r\n    GROUP BY NumClient\r\n    HAVING COUNT( IdPanier) &gt;= 2\r\n);\r\n#d\r\nSELECT Ville, Designation AS Produit, COUNT(*) AS TotalCommandes FROM Commandes\r\ninner JOIN Clients ON Commandes.NumClient = Clients;\r\ninner JOIN Produits ON Commandes.IdProduit = Produits;\r\n\r\n#e\r\nSELECT *FROM Produits WHERE IdProduit NOT IN (\r\n    SELECT IdProduit\r\n    FROM Commandes\r\n    WHERE MONTH(DateCommande) = 4 AND YEAR(DateCommande) = 2024\r\n);\r\n ', 6),
(1094, 'DA105622', 404, '\r\nSELECT UPPER(nom), UPPER(prenom) \r\nFROM Client \r\nWHERE ville = &#039;Tanger&#039; \r\nORDER BY nom;\r\n\r\nSELECT designation, description \r\nFROM Produit \r\nINNER JOIN ElementsPaniers ON Produit.refPrd = ElementsPaniers.refPrd \r\nINNER JOIN Paniers ON ElementsPaniers.codePaniers = Paniers.codePaniers \r\nWHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024;\r\n\r\n\r\nSELECT nom, prenom \r\nFROM Client \r\nINNER JOIN Paniers ON Client.codeClt = Paniers.codeClt \r\nGROUP BY nom, prenom \r\nHAVING COUNT(codePaniers) &gt;= 2;\r\n\r\n\r\nSELECT ville, refPrd, MAX(quantity) as MostOrderedProduct \r\nFROM ElementsPaniers \r\nINNER JOIN Client ON ElementsPaniers.codePaniers = Client.codeClt \r\nGROUP BY ville;\r\n\r\n\r\nSELECT * \r\nFROM Produit \r\nWHERE refPrd NOT IN (\r\n    SELECT refPrd \r\n    FROM ElementsPaniers \r\n    INNER JOIN Paniers ON ElementsPaniers.codePaniers = Paniers.codePaniers \r\n    WHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024\r\n);', 7),
(1095, 'DB30143', 404, ' -- a- \r\n select upper(nom),upper(prenom) from Clients \r\n where ville = &#039;tanger&#039;\r\n order by nom ;\r\n -- b- \r\n select Désignation  , description\r\n from Produit p\r\n inner join ElementsPanier e\r\n on p.refPrd = e.refPrd\r\n inner join Panier pa\r\n on pa.codePanier = p.codePanier\r\n where  month(dateCommande) = 4 and year(dateCommande) = 2024;\r\n -- c- \r\n select nom , prenom , count(p.codeClt) as nbcomm\r\n from  Clients c\r\n inner join panier p \r\n on c.codeClt = p.codeClt\r\n group by nom\r\n having nbcomm &gt;2;\r\n \r\n -- d \r\n select  p.*  from Produit p \r\n inner join ElementsPanier e\r\n on p.refPrd = e.refPrd\r\n inner join Panier pa\r\n on pa.codePanier = p.codePanier\r\n inner join Clients c\r\n on c.codeClt = pa.codeClt\r\n where p.refPrd in \r\n (select refPrd ,count(refPrd) as nbcomm  from ElementsPanier\r\n group by refPrd\r\n having nbcomm = max(count(refPrd))\r\n )\r\n group by c.ville;\r\n \r\n \r\n -- e\r\n select * from Produit\r\n where  refPrd not in \r\n (select p.*\r\n from Produit p\r\n inner join ElementsPanier e\r\n on p.refPrd = e.refPrd\r\n inner join Panier pa\r\n on pa.codePanier = p.codePanier\r\n where  month(dateLivraison) = 4 and year(dateLivraison) = 2024);', 8),
(1096, 'DB30759', 405, '-- a\r\nCREATE USER &#039;vendeur&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;ecom2024@&#039;;\r\nSHOW GRANT FOR &#039;vendeur&#039;;\r\n-- b \r\nGRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;@&#039;localhost&#039;;\r\n-- c \r\nREVOKE DELETE, UPDATE ON E_commerce.* FROM &#039;vendeur&#039;@&#039;localhost&#039;;\r\n-- d \r\nmysqldump -u username -p E_commerce &gt; C:\\backup\\E_commerce.sql\r\n\r\n-- e\r\nmysql -u username -p E_commerce_v2 &lt; C:\\backup\\E_commerce.sql', 5),
(1097, 'DA107295', 405, 'a/\r\ncreate user vendeur indinified by password &#039;ecom2024@&#039;\r\nb/\r\ngrant all privllages on e_commers to vendeur;', 2),
(1098, 'DA106935', 405, 'CREATE USER &amp;#039;vendeur&amp;#039;@&amp;#039;localhost&amp;#039; IDENTIFIED BY &amp;#039;ecom2024@&amp;#039;;\r\n\r\nGRANT all privilege\r\nON E_commerce .*\r\nTO vendeur@localhost  ;\r\n\r\nGRANT INSERT,DELETE\r\nON E_commerce .*\r\nTO vendeur@localhost;\r\n\r\nmysqldump --user=root --password\r\n--result-file=C:\\backup\\E_commerce.sql \r\n\r\nmysql&gt;source c:\\backup\\E_commerce _v2.sql', 4),
(1099, 'DB30958', 405, 'a) CREATE USER &#039;vendeur&#039; IDENTIFIED BY  &#039;ecom2024@&#039;\r\n\r\n----------------------------------\r\nb)\r\n\r\n\r\n------------------------------\r\nc) REVOKE DELETE FROM E_commerce\r\n\r\nd) BACKUP DATABASE  E_commerce TO DISK (&#039;C:\\backup\\E_commerce.sql&#039;)', 2),
(1100, 'DB30958', 404, 'a)\r\nSELECT UPPER(nom),UPPER(prenom) FROM CLIENT\r\nWHERE ville = &quot;Tanger&quot;\r\nORDER BY nom  \r\n---------------------------------------\r\nb)\r\nSELECT (désignation,DESCRIPTION) FROM Produit\r\nINNER JOIN ElementsPanier ON Produit.refPrd = ElementsPanier.refPrd\r\nINNER JOIN Panier ON ElementsPanier.codePanier = Panier.codePanier\r\nWHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024\r\n\r\n--------------------------------------------------\r\nc)\r\nSELECT (nom,prenom) FROM CLIENT\r\nINNER JOIN Panier ON CLIENT.codeClt = Panier.codeClt\r\nGROUP BY nom.prenom\r\nHAVING COUNT(codePanier)&gt;=2\r\n\r\n\r\n\r\n\r\n------------------------------\r\nd)\r\nSELECT ville,refPrd,MAX(quantité) AS produitDemande\r\nFROM ElementsPanier \r\nINNER JOIN CLIENT ON ElementsPanier.codePanier = CLIENT.codePanier\r\nGROUP BY ville\r\n\r\n\r\n\r\n--------------------------------\r\ne)\r\nSELECT * FROM Produit\r\nWHERE refPrd NOT IN (\r\n	SELECT refPrd FROM ElementsPanier\r\n	INNER JOIN Panier ON ElementsPanier.codePanier = Panier.codePanier\r\n	WHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024\r\n)\r\n', 6),
(1101, 'DA106935', 404, 'SELECT UPPER(nom) AS nom,UPPER(prenom) AS prenom FROM clients\r\nWHERE ville = &#039;Tanger&#039;\r\nORDER BY nom;\r\n\r\nSELECT désignation,descriptions FROM produit\r\nWHERE refPrd IN (SELECT refPrd FROM elementspanier WHERE codePanier IN \r\n(SELECT codePanierin FROM panier WHERE  NOT  dateComment = &#039;2024-04-01&#039;));\r\n\r\n\r\nSELECT nom,prenom FROM clients \r\nINNER JOIN panier\r\nON clients.codeClt = panier.codeClt\r\nWHERE panier.MontantTotal &gt;=2;\r\n \r\n \r\nSELECT ville ,MAX(codePanier) FROM panier\r\nINNER JOIN clients ON clients.codeClt = panier.codeClt\r\nGROUP BY ville\r\n\r\nSELECT * FROM panier \r\nWHERE NOT dateCommande = &#039;024-04-01&#039;;', 6),
(1102, 'CI3546', 404, 'select distinct from clients where ville= tanger;\r\n\r\nselect distinct from produits where mois ;avril=2024;\r\n\r\nselect distinct from clients   where mois=deux paniers;\r\n\r\nselect distinct from clients  where mois=deux paniers;\r\n\r\n\r\n\r\n', 2),
(1103, 'ZG166772', 404, 'a_ SELECT UPPER(nom), UPPER(prenom) \r\nFROM Client \r\nWHERE ville = &#039;Tanger&#039; \r\nORDER BY nom;\r\nb  SELECT designation, description \r\nFROM Produit \r\nINNER JOIN ElementsPaniers ON Produit.refPrd = ElementsPaniers.refPrd \r\nINNER JOIN Paniers ON ElementsPaniers.codePaniers = Paniers.codePaniers \r\nWHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024;\r\nc SELECT nom, prenom \r\nFROM Client \r\nINNER JOIN Paniers ON Client.codeClt = Paniers.codeClt \r\nGROUP BY nom, prenom \r\nHAVING COUNT(codePaniers) &gt;= 2;\r\nd SELECT ville, refPrd, MAX(quantity) as MostOrderedProduct \r\nFROM ElementsPaniers \r\nINNER JOIN Client ON ElementsPaniers.codePaniers = Client.codeClt \r\nGROUP BY ville;\r\ne SELECT * \r\nFROM Produit \r\nWHERE refPrd NOT IN (\r\n    SELECT refPrd \r\n    FROM ElementsPaniers \r\n    INNER JOIN Paniers ON ElementsPaniers.codePaniers = Paniers.codePaniers \r\n    WHERE MONTH(dateCommande) = 4 AND YEAR(dateCommande) = 2024\r\n);', NULL),
(1104, 'CB355407', 404, 'a ) - \r\nSELECT UPPER(nom) AS Nom , UPPER(prenom) AS Prenom FROM clie_nt WHERE ville = &quot;tanger&quot; ORDER BY  nom ASC ; \r\nb) - SELECT désignation , descriptio_n FROM produit where\r\nc ) - select nom , prenom from   clie_nt where ElementsPanier.quantite &gt; 2; \r\nd ) - select  max(quantite) , produit.désignation FROM ElementsPanier ', 5),
(1105, 'CN51111', 403, 'CREATE DATABASE ecommerce;\r\nUSE ecommerce;\r\n\r\nCREATE TABLE CLIENT (\r\ncodeClt INT,\r\nnom VARCHAR(30),\r\nprenom VARCHAR(30),\r\nadresse VARCHAR(30),\r\nville VARCHAR(30),\r\ntel VARCHAR(30)\r\n);\r\nALTER TABLE CLIENT ADD PRIMARY KEY (codeClt)\r\n\r\nCREATE TABLE produit (\r\nrefPrd INT ,\r\ndesignation VARCHAR(30) ,\r\ndescription VARCHAR(30),\r\ncategorie VARCHAR(30),\r\npricAchat INT ,\r\nnbrEnstock INT\r\n);\r\nALTER TABLE produit ADD PRIMARY KEY (refPrd)\r\nALTER TABLE produit MODIFY designation VARCHAR(30) UNIQUE \r\nCREATE TABLE panier (\r\ncodePanier INT ,\r\ncodeClt INT ,\r\ndateCreation DATE,\r\ndateCommande DATE,\r\ndateLivraison DATE,  \r\nMontantTotal INT\r\n);\r\nALTER TABLE panier ADD PRIMARY KEY (codePanier)\r\n\r\nALTER TABLE panier ADD FOREIGN KEY (codeClt) REFERENCES CLIENT(codeClt)\r\n\r\nCREATE TABLE ElementsPanier (\r\nrefPrd INT ,\r\ncodePanier INT ,\r\nquantite INT,\r\nprix FLOAT \r\n);\r\nALTER TABLE ElementsPanier ADD PRIMARY KEY (refPrd,codePanier)\r\n\r\nALTER TABLE ElementsPanier ADD FOREIGN KEY (refPrd) REFERENCES produit(refPrd)\r\n\r\nALTER TABLE ElementsPanier ADD FOREIGN KEY (codePanier) REFERENCES panier(codePanier)\r\n\r\nALTER TABLE ElementsPanier MODIFY quantite INT CHECK (quantite&gt;1)', NULL),
(1106, 'CN51111', 405, 'a -\r\nCREATE USER &#039;vendeur&#039;@&#039;%&#039; IDENTIFIED BY &#039;ecom2024&#039;;\r\nb-\r\nGRANT ALL PRIVILEGES ON E_commerce.* TO &#039;vendeur&#039;@&#039;%&#039;;\r\nc-\r\nREVOKE UPDATE, DELETE ON E_commerce.* FROM &#039;vendeur&#039;@&#039;%&#039;;\r\nd-\r\nmysql -u root -p E_commerce_v2 &lt; C:\\backup\\E_commerce.sql\r\n', NULL),
(1107, 'CN51111', 404, '-a--\r\nSELECT UPPER(nom) AS nom,UPPER(prenom) AS prenom FROM client WHERE ville =&#039;Tanger&#039; \r\n-b--\r\nSELECT designation,DESCRIPTION  \r\nFROM produit \r\nWHERE (SELECT refprd \r\nFROM ElementsPanier p\r\nINNER JOIN panier pa\r\nON p.codePanier = pa.codePanier\r\nWHERE MONTH()) \r\nIN (SELECT refprd FROM )\r\n', NULL),
(1108, 'CI2772', 406, '', NULL),
(1109, 'DA104214', 406, '&lt;&#039;-$jhbjhv&quot;&gt;', NULL);

--
-- Index pour les tables déchargées
--

--
-- Index pour la table `exames`
--
ALTER TABLE `exames`
  ADD PRIMARY KEY (`idexames`),
  ADD KEY `FK_exames_users` (`idform`);

--
-- Index pour la table `groupe`
--
ALTER TABLE `groupe`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `nom_UNIQUE` (`nom`);

--
-- Index pour la table `group_exame`
--
ALTER TABLE `group_exame`
  ADD PRIMARY KEY (`idg`,`idexam`),
  ADD KEY `FK__exames` (`idexam`);

--
-- Index pour la table `group_form`
--
ALTER TABLE `group_form`
  ADD PRIMARY KEY (`idg`,`idform`),
  ADD KEY `FK_group_form_users` (`idform`);

--
-- Index pour la table `h_user_exam`
--
ALTER TABLE `h_user_exam`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_h_user_exam_users` (`id_user`),
  ADD KEY `FK_h_user_exam_exames` (`id_exam`);

--
-- Index pour la table `option`
--
ALTER TABLE `option`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_option_questions` (`Qid`);

--
-- Index pour la table `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_questions_exames` (`examid`);

--
-- Index pour la table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`cin`) USING BTREE,
  ADD KEY `user_g_idx` (`id_g`);

--
-- Index pour la table `user_exam`
--
ALTER TABLE `user_exam`
  ADD PRIMARY KEY (`iduser_exam`,`id_user`,`id_exam`) USING BTREE,
  ADD KEY `FK_user_exam_users` (`id_user`) USING BTREE,
  ADD KEY `FK_user_exam_exames` (`id_exam`) USING BTREE;

--
-- Index pour la table `user_filles`
--
ALTER TABLE `user_filles`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK__users` (`iduser`),
  ADD KEY `FK__exames_userrep` (`idexam`);

--
-- Index pour la table `user_option`
--
ALTER TABLE `user_option`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_user_option_option` (`id_O`),
  ADD KEY `FK_user_option_users` (`id_user`),
  ADD KEY `FK_user_option_exames` (`id_exam`),
  ADD KEY `FK_user_option_questions` (`idq`);

--
-- Index pour la table `user_rep`
--
ALTER TABLE `user_rep`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_user_rep_questions` (`id_Q`),
  ADD KEY `FK_user_rep_users` (`iduser`);

--
-- AUTO_INCREMENT pour les tables déchargées
--

--
-- AUTO_INCREMENT pour la table `exames`
--
ALTER TABLE `exames`
  MODIFY `idexames` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=85;

--
-- AUTO_INCREMENT pour la table `groupe`
--
ALTER TABLE `groupe`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=54;

--
-- AUTO_INCREMENT pour la table `h_user_exam`
--
ALTER TABLE `h_user_exam`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT pour la table `option`
--
ALTER TABLE `option`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=362;

--
-- AUTO_INCREMENT pour la table `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=407;

--
-- AUTO_INCREMENT pour la table `user_exam`
--
ALTER TABLE `user_exam`
  MODIFY `iduser_exam` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=255;

--
-- AUTO_INCREMENT pour la table `user_filles`
--
ALTER TABLE `user_filles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT pour la table `user_option`
--
ALTER TABLE `user_option`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=536;

--
-- AUTO_INCREMENT pour la table `user_rep`
--
ALTER TABLE `user_rep`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1110;

--
-- Contraintes pour les tables déchargées
--

--
-- Contraintes pour la table `exames`
--
ALTER TABLE `exames`
  ADD CONSTRAINT `FK_exames_users` FOREIGN KEY (`idform`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `group_exame`
--
ALTER TABLE `group_exame`
  ADD CONSTRAINT `FK__exames` FOREIGN KEY (`idexam`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK__groupe` FOREIGN KEY (`idg`) REFERENCES `groupe` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `group_form`
--
ALTER TABLE `group_form`
  ADD CONSTRAINT `FK_group_form_users` FOREIGN KEY (`idform`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `g_f` FOREIGN KEY (`idg`) REFERENCES `groupe` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `h_user_exam`
--
ALTER TABLE `h_user_exam`
  ADD CONSTRAINT `FK_h_user_exam_exames` FOREIGN KEY (`id_exam`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_h_user_exam_users` FOREIGN KEY (`id_user`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `option`
--
ALTER TABLE `option`
  ADD CONSTRAINT `FK_option_questions` FOREIGN KEY (`Qid`) REFERENCES `questions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `questions`
--
ALTER TABLE `questions`
  ADD CONSTRAINT `FK_questions_exames` FOREIGN KEY (`examid`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `users`
--
ALTER TABLE `users`
  ADD CONSTRAINT `FK_users_groupe` FOREIGN KEY (`id_g`) REFERENCES `groupe` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Contraintes pour la table `user_exam`
--
ALTER TABLE `user_exam`
  ADD CONSTRAINT `FK_user_exam_exames` FOREIGN KEY (`id_exam`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_user_exam_users` FOREIGN KEY (`id_user`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `user_filles`
--
ALTER TABLE `user_filles`
  ADD CONSTRAINT `FK__exames_userrep` FOREIGN KEY (`idexam`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK__users` FOREIGN KEY (`iduser`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `user_option`
--
ALTER TABLE `user_option`
  ADD CONSTRAINT `FK_user_option_exames` FOREIGN KEY (`id_exam`) REFERENCES `exames` (`idexames`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_user_option_option` FOREIGN KEY (`id_O`) REFERENCES `option` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_user_option_questions` FOREIGN KEY (`idq`) REFERENCES `questions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_user_option_users` FOREIGN KEY (`id_user`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Contraintes pour la table `user_rep`
--
ALTER TABLE `user_rep`
  ADD CONSTRAINT `FK_user_rep_questions` FOREIGN KEY (`id_Q`) REFERENCES `questions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `FK_user_rep_users` FOREIGN KEY (`iduser`) REFERENCES `users` (`cin`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
